(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[13],{9610:function(e,t,n){"use strict";n.d(t,{A:function(){return o}});var r=n(9185);function o(){let e,t,n,o,s,a,i,u,l,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",o="in",s="texture",a="outputColor",i="out vec4 outputColor;",u=(0,r.OBj)().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",o="varying",s="texture2D",a="gl_FragColor",i="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:o,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}},7013:function(e,t,n){"use strict";var r={};n.r(r),n.d(r,{addImpl:function(){return ke},bincountImpl:function(){return Ie},bincountReduceImpl:function(){return $e},castImpl:function(){return be},ceilImpl:function(){return Re},concatImpl:function(){return _e},equalImpl:function(){return Ne},expImpl:function(){return Ae},expm1Impl:function(){return De},floorImpl:function(){return Oe},gatherNdImpl:function(){return Fe},gatherV2Impl:function(){return Be},greaterEqualImpl:function(){return Le},greaterImpl:function(){return Pe},lessEqualImpl:function(){return Me},lessImpl:function(){return We},linSpaceImpl:function(){return Ue},logImpl:function(){return Ve},maxImpl:function(){return Ge},maximumImpl:function(){return ze},minimumImpl:function(){return He},multiplyImpl:function(){return Xe},negImpl:function(){return Ke},notEqualImpl:function(){return qe},prodImpl:function(){return Ze},raggedGatherImpl:function(){return tt},raggedTensorToTensorImpl:function(){return at},rangeImpl:function(){return it},rsqrtImpl:function(){return ut},scatterImpl:function(){return lt},sigmoidImpl:function(){return ct},simpleAbsImpl:function(){return he},sliceImpl:function(){return dt},sparseFillEmptyRowsImpl:function(){return ht},sparseReshapeImpl:function(){return pt},sparseSegmentReductionImpl:function(){return ft},sqrtImpl:function(){return gt},squaredDifferenceImpl:function(){return mt},stridedSliceImpl:function(){return xt},stringNGramsImpl:function(){return yt},stringSplitImpl:function(){return vt},stringToHashBucketFastImpl:function(){return kt},subImpl:function(){return Ct},tileImpl:function(){return $t},topKImpl:function(){return Tt},transposeImpl:function(){return Ye},uniqueImpl:function(){return Rt}});var o=n(9185);const s={},a={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function i(e,t){if(!(e in s)||null!=t){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!==typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete s[e]}),!1),(0,o.OBj)().getBool("SOFTWARE_WEBGL_ENABLED")&&(a.failIfMajorPerformanceCaveat=!1);if(1===e)return n.getContext("webgl",a)||n.getContext("experimental-webgl",a);return n.getContext("webgl2",a)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;s[e]=n}const n=s[e];return null==n||n.isContextLost()?(delete s[e],i(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),s[e])}var u,l,c;function d(e,t){return[t,e]}function h(e){const t=o.D5U.sizeFromShape(e),n=Math.ceil(t/4);return o.D5U.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let r,s,a,i,u,l,c,d,h,p;return 2===(0,o.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,u=n.RED,c=4,d=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,u=e.RGBA,c=4,d=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:h,textureTypeFloat:p}}function g(e,t){const n=t();return(0,o.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(u||(u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(l||(l={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));function m(e){return!!((0,o.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function x(e,t){return S(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}const b=/ERROR: [0-9]+:([0-9]+):/g;function y(e,t){const n=b.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>o.D5U.rightPad((t+1).toString(),a)+e));let u=0;for(let o=0;o<i.length;o++)u=Math.max(i[o].length,u);const l=i.slice(0,r-1),c=i.slice(r-1,r),d=i.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${o.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}function w(e,t){if(g(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function v(e,t,n,r,o,s,a){const i=e.getAttribLocation(t,n);return-1!==i&&(g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),g(e,(()=>e.vertexAttribPointer(i,o,e.FLOAT,!1,s,a))),g(e,(()=>e.enableVertexAttribArray(i))),!0)}function k(e,t,n,r){g(e,(()=>function(e,t,n){E(e,n),g(e,(()=>e.activeTexture(e.TEXTURE0+n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),g(e,(()=>e.uniform1i(n,r)))}function C(e,t,n){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function $(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function S(e,t,n){const r=g(e,(()=>t()));if(null==r)throw new Error(n);return r}function E(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function T(e,t=2){return o.D5U.sizeFromShape(e.slice(0,e.length-t))}function R(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function _(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[T(e),...R(e)]),t}function N(e){return e%2===0}function A(e,t){if(e=e.slice(-2),t=t.slice(-2),o.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(N(n)&&N(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&N(e[0])&&N(t[0])}let D,O;function F(e,t){return null!=e.getExtension(t)}function B(e){try{if(null!=i(e))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function P(e){if(0===e)return!1;const t=i(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return L(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const o=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,o,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),i}(t,n)}return!1}if(!F(t,"OES_texture_float"))return!1;if(!F(t,"WEBGL_color_buffer_float"))return!1;return L(t)}function L(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),o}function W(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const M=(0,o.OBj)();M.registerFlag("HAS_WEBGL",(()=>M.getNumber("WEBGL_VERSION")>0)),M.registerFlag("WEBGL_VERSION",(()=>B(2)?2:B(1)?1:0)),M.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),M.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===M.get("WEBGL_VERSION"))),M.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),M.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),M.registerFlag("WEBGL_PACK",(()=>M.getBool("HAS_WEBGL"))),M.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_CLIP",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_REDUCE",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_LAZILY_UNPACK",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_CONV_IM2COL",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==D){const t=i(e);D=t.getParameter(t.MAX_TEXTURE_SIZE)}return D}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==O){const t=i(e);O=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,O)}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=M.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=i(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),M.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>M.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!o.C2$.isMobile())),M.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=i(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return L(t)}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!M.getBool("WEBGL_FORCE_F16_TEXTURES")&&M.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),M.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>P(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=M.getNumber("WEBGL_VERSION"))&&null!=i(e).fenceSync;var e})),M.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>M.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),M.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),M.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>o.C2$.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),M.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),M.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),M.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),M.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),M.registerFlag("WEBGL_EXP_CONV",(()=>!1)),M.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>M.getBool("IS_TEST"))),M.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),M.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),M.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1));var U=n(9610),V=n(5156);function G(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=V.Vm(s,i,t),l=function(e,t){const n=S(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),(0,o.OBj)().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw y(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,u),c=e.createProgram(l);return(0,o.OBj)().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:a,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:u,webGLProgram:c,inShapeInfos:a,outShapeInfo:i},z(e,t,c))}function z(e,t,n){const r={},s={},a={},i=[];let u,l,c,d=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===(0,o.OBj)().getNumber("WEBGL_VERSION")&&(d=e.getUniformLocation(n,"INFINITY",!1));const p=!1;for(let o=0;o<t.variableNames.length;o++){const i=t.variableNames[o];r[i]=e.getUniformLocation(n,i,p),r[`offset${i}`]=e.getUniformLocation(n,`offset${i}`,p),t.enableShapeUniforms&&(s[`${i}Shape`]=e.getUniformLocation(n,`${i}Shape`,p),a[`${i}TexShape`]=e.getUniformLocation(n,`${i}TexShape`,p))}return t.enableShapeUniforms&&(u=e.getUniformLocation(n,"outShape",p),c=e.getUniformLocation(n,"outShapeStrides",p),l=e.getUniformLocation(n,"outTexShape",p)),t.customUniforms&&t.customUniforms.forEach(((t,r)=>{i[r]=e.getUniformLocation(n,t.name,p)})),{uniformLocations:r,customUniformLocations:i,infLoc:d,nanLoc:h,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:u,outShapeStridesLocation:c,outTexShapeLocation:l}}function H(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!o.D5U.arraysEqual(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,u=s.isUniform?null:s.texData.texShape;if(!o.D5U.arraysEqual(i,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${u} must match`)}))}function X(e){return(0,o.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var j=n(8110);class K{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,U.A)();this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?j.Kn(["r","c","d"],e):j.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class q{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=(0,U.A)();this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?j.Kn(["r","c","d"],e):j.RW(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class Y{constructor(e){this.variableNames=["A"],this.outTexUsage=l.DOWNLOAD;const t=(0,U.A)();this.outputShape=e,this.userCode=`\n      ${j.ye}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class Z{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=l.DOWNLOAD;const t=(0,U.A)();this.outputShape=e,this.userCode=`\n      ${j.ye}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Q{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,U.A)();this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?j.nc():j.ku(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class J{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=(0,U.A)();this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let t=0;t<=1;t++){const o=2*s+t;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${s};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${o}] = values[0];\n            } else if (offset == 1) {\n              result[${o}] = values[1];\n            } else if (offset == 2) {\n              result[${o}] = values[2];\n            } else {\n              result[${o}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?j.nc():j.ku(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${o};\n        }\n    `}}function ee(e){const t=(0,U.A)();return function(e,t){const n=S(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function te(e){return function(e,t){const n=S(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ne(e){return function(e,t){const n=S(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function re(e,t,n,r,s,a){!function(e,t){const n=(0,o.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return S(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),u=e.TEXTURE_2D;return g(e,(()=>e.bindTexture(u,i))),g(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(u,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(u,e.TEXTURE_MIN_FILTER,e.NEAREST))),g(e,(()=>e.texParameteri(u,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===(0,o.OBj)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texImage2D(u,0,r,t,n,0,s,a,null))):g(e,(()=>e.texStorage2D(u,1,r,t,n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function oe(e){return e.internalFormatFloat}function se(e){return e.internalFormatHalfFloat}function ae(e){return e.downloadTextureFormat}function ie(e){return e.internalFormatPackedFloat}function ue(e){return e.internalFormatPackedHalfFloat}function le(e,t,n,r,o,s,a,i){const u=e,l=new Float32Array(function(e,t){const[n,r]=p(e,t);return n*r*4}(s,a));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}class ce{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,o.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){s[e]=t}(t,e)):this.gl=i(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===(0,o.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=x(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=x(this.gl,t);else if((0,o.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,r))this.colorBufferHalfFloatExtension=x(this.gl,r);else if((0,o.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=te(this.gl),this.indexBuffer=ne(this.gl),this.framebuffer=function(e){return S(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,o.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;g(e,(()=>e.finish())),g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),g(e,(()=>e.deleteFramebuffer(this.framebuffer))),g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),g(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,s]=d(t,n);return re(e,o,s,oe(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,s]=d(t,n);return re(e,o,s,se(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,s]=d(t,n);return re(e,o,s,ae(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===(0,o.OBj)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===(0,o.OBj)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,u,l;g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),u=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),u=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),2===(0,o.OBj)().getNumber("WEBGL_VERSION")?g(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,u,i))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,u,i))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,s]=p(t,n);return re(e,o,s,ue(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[o,s]=p(t,n);return re(e,o,s,ie(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),g(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[o,s]=d(t,n),a=new Uint8Array(t*n*4);return g(e,(()=>e.readPixels(0,0,o,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,a))),new Float32Array(a.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,o,s){return le(this.gl,e,0,0,0,o,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const o=e.createBuffer();g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,o)));const s=16*t*n;return g(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),o}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,o.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(o,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=o}else(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=ee(t));const n=function(e){return S(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return g(t,(()=>t.attachShader(n,this.vertexShader))),g(t,(()=>t.attachShader(n,e))),function(e,t){if(g(e,(()=>e.linkProgram(t))),!(0,o.OBj)().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&w(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),v(e,t,"clipSpacePos",n,3,20,0)&&v(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&g(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&w(this.gl,this.program),g(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return S(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),g(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),k(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,o]=p(t,n);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&w(this.gl,this.program),$(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),g(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),g(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=x(this.gl,2===(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await o.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in(0,o.OBj)().platform&&(n=(0,o.OBj)().platform.setTimeoutCustom.bind((0,o.OBj)().platform)),o.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),C(this.gl,e,this.framebuffer),this.debug&&$(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(C(this.gl,this.outputTexture,this.framebuffer),this.debug&&$(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;C(r,e,this.framebuffer),this.debug&&$(r),this.outputTexture=e,g(r,(()=>r.viewport(0,0,t,n))),g(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),g(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function de(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&o.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function he(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}o.SYM;function pe(e){return(t,n,r,s,a)=>{const i=o.Wap.assertAndGetBroadcastShape(t,n),u=i.length,l=o.D5U.computeStrides(i),c=o.D5U.sizeFromShape(i),d=o.D5U.getTypedArrayFromDType(a,c),h=t.length,p=n.length,f=o.D5U.computeStrides(t),g=o.D5U.computeStrides(n),m=o.Wap.getBroadcastDims(t,i),x=o.Wap.getBroadcastDims(n,i);if(m.length+x.length===0)for(let o=0;o<d.length;++o)d[o]=e(r[o%r.length],s[o%s.length]);else for(let b=0;b<d.length;++b){const t=o.D5U.indexToLoc(b,u,l),n=t.slice(-h);m.forEach((e=>n[e]=0));const a=o.D5U.locToIndex(n,h,f),i=t.slice(-p);x.forEach((e=>i[e]=0));const c=o.D5U.locToIndex(i,p,g);d[b]=e(r[a],s[c])}return[d,i]}}function fe(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,s=n.data.get(r.dataId).values,a=n.data.get(o.dataId).values,i=n.makeTensorInfo(r.shape,"complex64");return n.data.get(i.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(o.shape,"float32",a)},i}o.Zz9;function ge(e,t,n="float32"){if("complex64"===n){return fe({inputs:{real:ge(e,t,"float32"),imag:ge(e,t,"float32")},backend:e})}const r=o.D5U.makeZerosTypedArray(o.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function me(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}o.iJz;function xe(e){const{inputs:t,backend:n}=e,{input:r}=t,o=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(o.dataId).values;return n.makeTensorInfo(o.shape,o.dtype,s)}o.xJR;function be(e,t,n,r){if("int32"===r){return[t,"int32",Int32Array.from(e)]}if("bool"===r){const r=o.D5U.toTypedArray([0],n),[s,a]=pe(((e,t)=>e!==t?1:0))(t,[],e,r,"bool");return[a,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function ye(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return me({inputs:{x:s},backend:n});const e=ge(n,s.shape,s.dtype),t=ye({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=fe({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=xe({inputs:{input:s},backend:n}),t=ye({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!o.D5U.hasEncodingLoss(s.dtype,a)){const e=me({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}const i=n.data.get(s.dataId).values,[u,l,c]=be(i,s.shape,s.dtype,a);return n.makeTensorInfo(u,l,c)}o.RFZ;function we(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a:a,b:i}=n,u=s;de([a,i],e);const l=u.data.get(a.dataId).values,c=u.data.get(i.dataId).values,d="string"===a.dtype?o.Wap.fromUint8ToStringArray(l):l,h="string"===a.dtype?o.Wap.fromUint8ToStringArray(c):c,p=r||a.dtype,[f,g]=t(a.shape,i.shape,d,h,p);return u.makeTensorInfo(g,p,f)}:({inputs:e,backend:o})=>{const{a:s,b:a}=e,i=o;if("complex64"===s.dtype||"complex64"===a.dtype){const e=ye({inputs:{x:s},backend:i,attrs:{dtype:"complex64"}}),t=i.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,u=i.data.get(r.dataId).values,l=i.data.get(o.dataId).values,c=ye({inputs:{x:a},backend:i,attrs:{dtype:"complex64"}}),d=i.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=i.data.get(h.dataId).values,g=i.data.get(p.dataId).values,[m,x,b]=n(s.shape,a.shape,u,l,f,g),y=i.makeTensorInfo(b,"float32",m),w=i.makeTensorInfo(b,"float32",x),v=fe({inputs:{real:y,imag:w},backend:i});return i.disposeIntermediateTensorInfo(e),i.disposeIntermediateTensorInfo(c),i.disposeIntermediateTensorInfo(y),i.disposeIntermediateTensorInfo(w),v}{const e=i.data.get(s.dataId).values,n=i.data.get(a.dataId).values,o=r||s.dtype,[u,l]=t(s.shape,a.shape,e,n,o);return i.makeTensorInfo(l,o,u)}}}function ve(e){return(t,n,r,s,a,i)=>{const u=o.Wap.assertAndGetBroadcastShape(t,n),l=o.D5U.sizeFromShape(u),c=u.length,d=o.D5U.computeStrides(u),h=o.D5U.getTypedArrayFromDType("float32",l),p=o.D5U.getTypedArrayFromDType("float32",l),f=o.Wap.getBroadcastDims(t,u),g=o.Wap.getBroadcastDims(n,u),m=o.Wap.mergeRealAndImagArrays(r,s),x=o.Wap.mergeRealAndImagArrays(a,i),b=t.length,y=o.D5U.computeStrides(t),w=n.length,v=o.D5U.computeStrides(n);if(f.length+g.length===0)for(let o=0;o<h.length;o++){const t=o%m.length,n=o%x.length,r=e(m[2*t],m[2*t+1],x[2*n],x[2*n+1]);h[o]=r.real,p[o]=r.imag}else for(let k=0;k<h.length;k++){const t=o.D5U.indexToLoc(k,c,d),n=t.slice(-b);f.forEach((e=>n[e]=0));const r=o.D5U.locToIndex(n,b,y),s=t.slice(-w);g.forEach((e=>s[e]=0));const a=o.D5U.locToIndex(s,w,v),i=e(m[2*r],m[2*r+1],x[2*a],x[2*a+1]);h[k]=i.real,p[k]=i.imag}return[h,p,u]}}const ke=pe(((e,t)=>e+t)),Ce=ve(((e,t,n,r)=>({real:e+n,imag:t+r})));we(o.mm_,ke,Ce),o.mm_;function Ie(e,t,n,r,s){const a=o.D5U.sizeFromShape(r),i=o.D5U.makeZerosTypedArray(s,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=s||(i[n]+=a>0?t[o]:1)}return i}function $e(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=(0,o.f3b)([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}function Se(e){return(t,n,r)=>{const s=o.D5U.getTypedArrayFromDType(n,t.length);for(let o=0;o<t.length;++o)s[o]=e(t[o],r);return s}}function Ee(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(de(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=a,l=u.data.get(i.dataId).values,c=o.D5U.sizeFromShape(i.shape),d=n||i.dtype,h=o.D5U.getArrayFromDType(d,c);for(let e=0;e<c;++e)h[e]=t(l[e],s);return u.makeTensorInfo(i.shape,d,h)}}function Te(e,t,n){return({inputs:r,attrs:o,backend:s})=>{const{x:a}=r;if(de(a,e),"string"===a.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const i=s,u=i.data.get(a.dataId).values,l=n||a.dtype,c=t(u,l,o);return i.makeTensorInfo(a.shape,l,c)}}const Re=Se((e=>Math.ceil(e)));Te(o.gJX,Re),o.gJX;function _e(e,t,n,r){const s=o.D5U.getArrayFromDType(n,o.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=o.D5U.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?o.Wap.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}const Ne=pe(((e,t)=>e===t?1:0)),Ae=(we(o.hdR,Ne,null,"bool"),o.hdR,Se((e=>Math.exp(e)))),De=(Te(o.NEP,Ae,"float32"),o.NEP,Se((e=>Math.expm1(e)))),Oe=(Te(o.Y0y,De),o.Y0y,Se((e=>Math.floor(e))));Te(o.OR,Oe),o.OR;function Fe(e,t,n,r,s,a,i,u,l){const c=(0,o.f3b)([r,a],n);for(let o=0;o<r;o++){const n=[];let r=0;for(let t=0;t<s;t++){const a=e[o*s+t];r+=a*i[t],n.push(a)}if(r<0||r>=l/a)throw new Error(`Invalid indices: ${n} does not index into ${u}`);for(let e=0;e<a;e++)c.values[o*a+e]=t.get(...t.indexToLoc(r*a+e))}return c}function Be(e,t,n){const r=(0,o.f3b)(n,e.dtype);for(let o=0;o<r.size;++o){const n=r.indexToLoc(o).slice(),s=n[0],a=n[2],i=t.locToIndex([s,a]);n[2]=t.values[i];const u=e.locToIndex(n);0<=u&&u<e.values.length&&(r.values[o]=e.values[u])}return r}const Pe=pe(((e,t)=>e>t?1:0)),Le=(we(o.iZT,Pe,null,"bool"),o.iZT,pe(((e,t)=>e>=t?1:0))),We=(we(o.Acj,Le,null,"bool"),o.Acj,pe(((e,t)=>e<t?1:0))),Me=(we(o.vtC,We,null,"bool"),o.vtC,pe(((e,t)=>e<=t?1:0)));we(o.CAk,Me,null,"bool"),o.CAk;function Ue(e,t,n){const r=(t-e)/(n-1),s=o.D5U.makeZerosTypedArray(n,"float32");s[0]=e;for(let o=1;o<s.length;o++)s[o]=s[o-1]+r;return s}const Ve=Se((e=>Math.log(e)));Te(o.ZbH,Ve),o.ZbH;function Ge(e,t,n,r){const s=o.D5U.getTypedArrayFromDType(r,o.D5U.sizeFromShape(n));for(let o=0;o<s.length;++o){const n=o*t;let r=e[n];for(let o=0;o<t;++o){const t=e[n+o];(Number.isNaN(t)||t>r)&&(r=t)}s[o]=r}return s}const ze=pe(((e,t)=>Math.max(e,t))),He=(we(o.BMI,ze),o.BMI,pe(((e,t)=>Math.min(e,t)))),Xe=(we(o.q8u,He),o.q8u,pe(((e,t)=>e*t))),je=ve(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));we(o.wYn,Xe,je),o.wYn;function Ke(e,t,n){const r=o.D5U.createScalarValue(-1,n);return Xe([],t,r,e,n)}o.kuV;const qe=pe(((e,t)=>e!==t?1:0));we(o.yQU,qe,null,"bool"),o.yQU;function Ye(e,t,n,r,s){const a=t.length,i=o.D5U.sizeFromShape(t),u=o.D5U.computeStrides(t),l=o.D5U.computeStrides(s),c=o.D5U.getTypedArrayFromDType(n,o.D5U.sizeFromShape(s));for(let d=0;d<i;++d){const t=o.D5U.indexToLoc(d,a,u),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[r[e]];c[o.D5U.locToIndex(n,a,l)]=e[d]}return c}o.G3Y;function Ze(e,t,n,r){const[s,a]=o.Wap.computeOutAndReduceShapes(e,r),i=(0,o.x8V)(t,"int32"),u=o.D5U.makeZerosTypedArray(o.D5U.sizeFromShape(s),i),l=o.D5U.sizeFromShape(a);for(let o=0;o<u.length;++o){const e=o*l;let t=1;for(let r=0;r<l;++r)t*=n[e+r];u[o]=t}return{outVals:u,outShape:s,outDtype:i}}o.DlI;function Qe(e,t,n,r){const o=[];let s=0;const a=t.length-1+n.length,i=new Array(a).fill(null).map((()=>[0]));!function(e,t){for(let n=0;n<e.length;++n){const r=e[n],o=n===e.length-1?t:e[n+1].length;if(0===r.length)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>o)throw new Error("Ragged splits must not point past values");for(let e=1;e<r.length;++e)if(r[e-1]>r[e])throw new Error("Ragged splits must be sorted in ascending order")}}(n,r);let u=1;for(let l=0;l<t.length-1;++l){u*=t[l];const e=t[l+1];for(let t=1;t<u+1;++t)i[l].push(t*e)}for(let l=0;l<e.length;++l){let r=e[l],a=e[l]+1;for(let e=0;e<n.length;++e){const o=n[e],s=e+t.length-1;if(s>=0){const e=i[s],t=e[e.length-1]-o[r];for(let n=r;n<a;++n)i[s].push(o[n+1]+t)}r=o[r],a=o[a]}a!==r&&(o.push([r,a]),s+=a-r)}return{outSplits:i,valueSlices:o,numValues:s}}function Je(e,t){const n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function et(e,t,n,r,s){const a=t.slice();a[0]=s;const i=o.D5U.getArrayFromDType(n,o.D5U.sizeFromShape(a)),u=e.length;return function(e,t,n,r,o,s){const a=Je(t,2)[1],i=Je(s,2)[1];let u=0;for(const l of n)for(let t=l[0];t<l[1];++t){for(let n=0;n<r;++n)o[u*i+n]=e[t*a+n];++u}}(e,t,r,0===u?0:u/t[0],i,a),[i,a]}function tt(e,t,n,r,s,a,i,u){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(function(e,t,n){e.forEach(((e,r)=>{if(e<0||e>=n){const s=o.D5U.indexToLoc(r,t.length,o.D5U.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${e} is not in [0, ${n})`)}}))}(a,i,t[0][0]-1),0===r.length)throw new Error("params.rank must be nonzero");const l=r[0],{outSplits:c,valueSlices:d,numValues:h}=Qe(a,i,e,l),p=function(e){const t=[];for(let n=0;n<e.length;++n){const r=e[n].length,s=o.D5U.getArrayFromDType("int32",r);t.push(s),e[n].forEach(((e,t)=>s[t]=e))}return t}(c),f=et(n,r,s,d,h);return[p,f[0],f[1]]}var nt=o.Wap.RowPartitionType;class rt{constructor(e,t,n,r,s,a,i,u,l,c){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=s,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=u,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=o.Wap.getRowPartitionTypesHelper(c),this.raggedRank=o.Wap.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===nt.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===nt.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case nt.VALUE_ROWIDS:return rt.getMaxWidthValueRowID(t);case nt.ROW_SPLITS:return rt.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${nt[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let r=0;r<t-1;++r){const t=e[r+1]-e[r];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,r=e[0],o=0;for(let s=1;s<t;++s){const t=e[s];t!==r&&(r=t,o=Math.max(s-n,o),n=s)}return Math.max(t-n,o)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return st(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;o.Wap.validateDefaultValueShape(n,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),s=o.Wap.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);s[0]<0&&(s[0]=e);for(let o=1;o<=this.raggedRank;++o)s[o]<0&&(s[o]=this.getMaxWidth(o));return s}calculateFirstParentOutputIndex(e,t,n){const r=Math.min(e,n),s=[];let a=0;for(let o=0;o<r;++o,a+=t)s.push(a);for(let o=r;o<e;++o)s.push(-1);return o.D5U.assert(s.length===e,(()=>"Final length of result must be equal to firstDimension.")),s}calculateOutputIndexRowSplit(e,t,n,r){const o=e.length,s=[];for(let a=0;a<o-1;++a){const o=e[a+1]-e[a];let i=Math.min(r,o),u=t[a];-1===u&&(i=0);for(let e=0;e<i;++e)s.push(u),u+=n;for(let e=0;e<o-i;++e)s.push(-1)}if(o>0&&s.length!==e[o-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){const o=e.length,s=[];if(0===o)return[];let a=0,i=e[0];if(i>=t.length)throw new Error(`Got currentValueRowId=${i}, which is not less than ${t.length}`);let u=t[i];s.push(u);for(let l=1;l<o;++l){const o=e[l];if(o===i)u>=0&&(++a,a<r?u+=n:u=-1);else{if(a=0,i=o,o>=t.length)throw new Error(`Got nextValueRowId=${o} which is not less than ${t.length}`);u=t[o]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){const o=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case nt.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,n,r);case nt.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,n,r);default:throw new Error(`Unsupported partition type: ${nt[s]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case nt.FIRST_DIM_SIZE:return e[0];case nt.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case nt.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${nt[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let o=n.length-2;o>=0;--o)n[o]=n[o+1]*t[o+1];const r=st(t,!1),s=o.D5U.getArrayFromDType(this.valuesDType,o.D5U.sizeFromShape(r));if(n[0]*t[0]>0){let o=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e){o=this.calculateOutputIndex(e-1,o,n[e],t[e])}this.setOutput(this.raggedRank,o,s,r)}return[r,s]}setOutput(e,t,n,r){if(0===n.length)return;const s=this.values,a=n;let i=r.slice();i=i.slice(e+1);const u=o.D5U.sizeFromShape(i),l=t.length;let c=this.defaultValue;if(c.length!==u&&1!==c.length){const e=this.defaultValueShape;(0,o.lub)((()=>{const t=(0,o.XLQ)(c,e),n=(0,o.UFq)(t,i);c=n.dataSync()}))}let d=0,h=0,p=0;for(let o=0;o<=l;++o){let e=o<l?t[o]:-1;if(e!==p){if(h<p){const e=s.subarray(d*u);ot(a.subarray(h*u),e,(p-h)*u)}if(o>=l){const t=n.length;e=Math.floor(t/u)}if(e>p)if(1===this.defaultValue.length)a.subarray(p*u,e*u).fill(this.defaultValue[0]),p=e;else for(;e>p;){ot(a.slice(p*u),c,u),++p}e<0?(d=o+1,h=p):(d=o,h=p,p=h+1)}else++p}}}function ot(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function st(e,t){const n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function at(e,t,n,r,o,s,a,i,u,l){return new rt(e,t,n,r,o,s,a,i,u,l).compute()}function it(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return o.D5U.makeZerosTypedArray(0,r);const s=Math.abs(Math.ceil((t-e)/n)),a=o.D5U.makeZerosTypedArray(s,r);t<e&&1===n&&(n=-1),a[0]=e;for(let o=1;o<a.length;o++)a[o]=a[o-1]+n;return a}const ut=Se((e=>1/Math.sqrt(e)));Te(o.bV0,ut),o.bV0;function lt(e,t,n,r,s,a,i,u,l,c){const d=[r/s,s],h=e.values,p=t.values;if(0===r)return(0,o.f3b)(n,t.dtype);const f=(0,o.f3b)(d,t.dtype);"string"===typeof l||"number"===typeof l?f.values.fill(l):"boolean"===typeof l&&f.values.fill(+l);for(let o=0;o<a;o++){const e=[];let a=0;for(let t=0;t<i;t++){const n=h[o*i+t];e.push(n),a+=n*u[t]}if(a<0||a>=r/s)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<s;n++)c?f.values[a*s+n]+=p[o*s+n]:f.values[a*s+n]=0===t.rank?p[0]:p[o*s+n]}return f}const ct=Se((e=>1/(1+Math.exp(-e))));Ee(o.a5O,(e=>1/(1+Math.exp(-e)))),o.a5O;function dt(e,t,n,r,s){const a=o.kuN.isSliceContinous(r,t,n),i=o.D5U.sizeFromShape(n),u=o.D5U.computeStrides(r);if(a){const n=o.kuN.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const l="string"===s?o.Wap.fromUint8ToStringArray(e):e,c=(0,o.f3b)(r,s,l),d=(0,o.f3b)(n,s);for(let o=0;o<d.size;++o){const e=d.indexToLoc(o),n=e.map(((e,n)=>e+t[n]));d.set(c.get(...n),...e)}return"string"===s?o.Wap.fromStringArrayToUint8(d.values):d.values}o.p2w;function ht(e,t,n,r,s,a,i){const u=t[0],l=a[0],c=new Array(l),d=new Array(u),h=t[1];if(0===l){if(0!==u)throw new Error(o.Wap.getSparseFillEmptyRowsIndicesDenseShapeMismatch(u));return[o.D5U.getArrayFromDType(n,0),[0,h],o.D5U.getArrayFromDType(s,0),c,d]}let p=!0,f=0;const g=new Array(l).fill(0);for(let x=0;x<u;++x){const t=e[x*h];if(t<0)throw new Error(o.Wap.getSparseFillEmptyRowsNegativeIndexErrorMessage(x,t));if(t>=l)throw new Error(o.Wap.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(x,t,l));++g[t],p=p&&t>=f,f=t}let m=!0;for(let o=0;o<l;++o){const e=0===g[o];c[o]=e,m=m&&!e,g[o]=Math.max(g[o],1),o>0&&(g[o]+=g[o-1])}if(m&&p){const t=e,n=r;for(let e=0;e<u;++e)d[e]=e;return[t,[u,h],n,c,d]}{const t=g[l-1],a=o.D5U.getArrayFromDType(n,t*h),p=o.D5U.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let n=0;n<u;++n){const t=e[n*h],o=f[t],s=(0===t?0:g[t-1])+o;f[t]++;for(let r=0;r<h;++r)a[s*h+r]=e[n*h+r];p[s]=r[n],d[n]=s}for(let e=0;e<l;++e){if(0===f[e]){const t=0===e?0:g[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}}return[a,[t,h],p,c,d]}}function pt(e,t,n,r,s){const a=o.D5U.sizeFromShape(r),i=t[0],u=s.length,l=[];let c=1,d=-1;for(let m=0;m<u;++m){const e=s[m];if(-1===e){if(-1!==d)throw new Error(o.Wap.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(d,m));d=m,l.push(1)}else{if(e<0)throw new Error(o.Wap.getSparseReshapeNegativeOutputDimErrorMessage(m,e));c*=e,l.push(e)}}if(-1!==d){if(c<=0)throw new Error(o.Wap.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());const e=Math.trunc(a/c);if(c*e!==a)throw new Error(o.Wap.getSparseReshapeInputOutputMultipleErrorMessage(r,l));l[d]=e}if(o.D5U.sizeFromShape(l)!==a)throw new Error(o.Wap.getSparseReshapeInputOutputMismatchErrorMessage(r,l));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(u>0){f[u-1]=1;for(let e=u-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=o.D5U.getArrayFromDType(n,i*u);for(let o=0;o<i;++o){let t=0;for(let n=0;n<h;++n)t+=e[o*h+n]*p[n];for(let e=0;e<u;++e)g[o*u+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[i,u],l]}function ft(e,t,n,r,s,a=!1,i=0){const u=r.length,l=[t[0],e.length/t[0]],c=l[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error(o.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());const h=t.slice();h[0]=d;const p=h.reduce(((e,t)=>e*t),1),f=o.D5U.getArrayFromDType(n,p);if(0===u)return d>0&&f.fill(i),[f,h];if(d<=0)throw new Error(o.Wap.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let g=0,m=1,x=0,b=s[g];for(;;){let t=0;if(m<u){if(t=s[m],b===t){++m;continue}if(b>=t)throw new Error(o.Wap.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=d)throw new Error(o.Wap.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,d));b>x&&f.fill(i,x*c,b*c);for(let n=g;n<m;++n){const t=r[n];if(t<0||t>=l[0])throw new Error(o.Wap.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(n,r[n],l[0]));for(let n=0;n<c;n++)f[b*c+n]+=e[t*c+n]}if(a)for(let e=0;e<c;e++)f[b*c+e]/=m-g;if(g=m,++m,x=b+1,b=t,m>u)break}return x<d&&f.fill(i,x*c,d*c),[f,h]}const gt=Se((e=>Math.sqrt(e))),mt=(Ee(o.FKq,(e=>Math.sqrt(e))),o.FKq,pe(((e,t)=>{const n=e-t;return n*n})));we(o._tC,mt),o._tC;function xt(e,t,n,r){const s=(0,o.f3b)(e,t.dtype);for(let o=0;o<s.size;o++){const e=s.indexToLoc(o),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+r[t];s.set(t.get(...a),...e)}return s}class bt{constructor(e,t,n,r,s,a){this.separator=o.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=o.D5U.encodeString(n),this.rightPad=o.D5U.encodeString(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,o,s){for(let a=0;a<o;++a){const i=this.getPadWidth(s),u=Math.max(0,i-a),l=Math.max(0,i-(o-(a+1))),c=s-(u+l),d=t+(u>0?0:a-i);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=l*this.rightPad.length;h+=(u+l+c-1)*this.separator.length,n[r+a]=new Uint8Array(h);const p=n[r+a];let f=0;const g=e=>e.forEach((e=>p[f++]=e));for(let e=0;e<u;++e)g(this.leftPad),g(this.separator);for(let t=0;t<c-1;++t)g(e[d+t]),g(this.separator);if(c>0){g(e[d+c-1]);for(let e=0;e<l;++e)g(this.separator),g(this.rightPad)}else{for(let e=0;e<l-1;++e)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let o=1;o<r;++o){let r=t[o]>=e;if(r=r&&t[o]<=n,!r)throw new Error(`Invalid split value ${t[o]}, must be in [${e}, ${n}]`);e=t[o]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=o.D5U.getArrayFromDType("int32",r);if(0===n||0===r){const e=new Array(n);for(let t=0;t<=s;++t)a[t]=0;return[e,a]}a[0]=0;for(let o=1;o<=s;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),a[o]=a[o-1]+n}const i=new Array(a[s]);for(let o=0;o<s;++o){const n=t[o];let r=a[o];if(this.nGramWidths.forEach((s=>{const a=t[o+1]-t[o],u=this.getNumNGrams(a,s);this.createNGrams(e,n,i,r,u,s),r+=u})),this.preserveShort&&r===a[o]){const s=t[o+1]-t[o];if(0===s)continue;const a=s+2*this.padWidth,u=1;this.createNGrams(e,n,i,r,u,a)}}return[i,a]}}function yt(e,t,n,r,o,s,a,i){return new bt(n,r,o,s,a,i).compute(e,t)}function wt(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const o=t[0];let s=e.indexOf(o);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(o)}return void(n&&0===e.length||r.push(e))}let o=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(o,s);n&&0===t.length||r.push(t),o=s+1}}function vt(e,t,n){const r=e.length,s=[];let a=0,i=0;const u=new Array(r);for(let o=0;o<r;++o){const r=s.length;wt(e[o],t,n,s);const l=s.length-r;u[o]=l,a+=l,i=Math.max(i,l)}const l=o.D5U.getArrayFromDType("int32",2*a),c=new Array(a),d=[r,i];let h=0;for(let o=0;o<r;++o)for(let e=0;e<u[o];++e)l[2*h]=o,l[2*h+1]=e,c[h]=s[h],++h;return[l,c,d]}function kt(e,t){const n=o.D5U.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=o.D5U.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}const Ct=pe(((e,t)=>e-t)),It=ve(((e,t,n,r)=>({real:e-n,imag:t-r})));we(o.Tr8,Ct,It),o.Tr8;function $t(e,t){const n=new Array(e.rank);for(let o=0;o<n.length;o++)n[o]=e.shape[o]*t[o];const r=(0,o.f3b)(n,e.dtype);for(let o=0;o<r.values.length;++o){const t=r.indexToLoc(o),n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=t[r]%e.shape[r];const s=e.locToIndex(n);r.values[o]=e.values[s]}return r}const St=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function Et(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const o=r-n+1,s=t-n+1,a=Math.log(o),i=.5*Math.exp(2*a/3),u=.5*Math.sqrt(a*i*(o-i)/o)*Math.sign(s-o/2);Et(e,t,Math.max(n,Math.floor(t-s*i/o+u)),Math.min(r,Math.floor(t+(o-s)*i/o+u)))}const s=e[t];let a=n,i=r;for(o.D5U.swap(e,n,t),St(e[r],s)>0&&o.D5U.swap(e,n,r);a<i;){for(o.D5U.swap(e,a,i),a++,i--;St(e[a],s)<0;)a+=1;for(;St(e[i],s)>0;)i-=1}0===St(e[n],s)?o.D5U.swap(e,n,i):(i+=1,o.D5U.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function Tt(e,t,n,r,s){const a=t[t.length-1],[i,u]=[e.length/a,a],l=o.D5U.getTypedArrayFromDType(n,i*r),c=o.D5U.getTypedArrayFromDType("int32",i*r);for(let o=0;o<i;o++){const t=o*u,n=e.subarray(t,t+u);let a=new Array(n.length);n.forEach(((e,t)=>a[t]={value:e,index:t})),r<a.length&&(Et(a,r),a=a.slice(0,r)),s&&a.sort(St);const i=o*r,d=l.subarray(i,i+r),h=c.subarray(i,i+r);for(let e=0;e<r;e++)d[e]=a[e].value,h[e]=a[e].index}const d=t.slice();return d[d.length-1]=r,[(0,o.f3b)(d,n,l),(0,o.f3b)(d,"int32",c)]}function Rt(e,t,n,r){const s=o.D5U.parseAxisParam(t,n)[0],a=[1,n[0],1];for(let o=0;o<s;o++)a[0]*=n[o];a[1]=n[s];for(let o=s+1;o<n.length;o++)a[2]*=n[o];const i={},u=new Int32Array(n[s]),l=new o.YDk(a,r,e),c=[],d=1===a[0]&&1===a[2];for(let o=0;o<n[s];o++){let t;if(d)t=e[o].toString();else{const e=[];for(let t=0;t<a[0];t++)for(let n=0;n<a[2];n++)e.push(l.get(t,o,n));t=e.join(",")}if(void 0!==i[t])u[o]=i[t];else{const e=Object.keys(i).length;i[t]=e,u[o]=e,c.push(o)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new o.YDk(h,r);c.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=h[1],{outputValues:p.values,outputShape:f,indices:u}}const{addImpl:_t,bincountImpl:Nt,bincountReduceImpl:At,castImpl:Dt,ceilImpl:Ot,concatImpl:Ft,equalImpl:Bt,expImpl:Pt,expm1Impl:Lt,floorImpl:Wt,gatherNdImpl:Mt,gatherV2Impl:Ut,greaterImpl:Vt,greaterEqualImpl:Gt,lessImpl:zt,lessEqualImpl:Ht,linSpaceImpl:Xt,logImpl:jt,maxImpl:Kt,maximumImpl:qt,minimumImpl:Yt,multiplyImpl:Zt,negImpl:Qt,notEqualImpl:Jt,prodImpl:en,raggedGatherImpl:tn,raggedTensorToTensorImpl:nn,rangeImpl:rn,rsqrtImpl:on,scatterImpl:sn,sigmoidImpl:an,simpleAbsImpl:un,sliceImpl:ln,sparseFillEmptyRowsImpl:cn,sparseReshapeImpl:dn,sparseSegmentReductionImpl:hn,sqrtImpl:pn,stridedSliceImpl:fn,stringNGramsImpl:gn,stringSplitImpl:mn,stringToHashBucketFastImpl:xn,subImpl:bn,tileImpl:yn,topKImpl:wn,transposeImpl:vn,uniqueImpl:kn}=r;function Cn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function In(e,t){return 1===t?[e]:Cn(e,t)}class $n{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=X(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=In("rc",this.rank),t=(0,V.kW)(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),o=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${o}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let o=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)o=`${e[e.length-1-t]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){return`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class Sn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}var r,o;this.userCode=`\n      ${r=t,o=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${o?j.al(["r","c","d"],"inputShape"):j.RW(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?j.nc():j.ku(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class En{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Rn(t,n),o=_n(e,r,n);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const s=Tn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[o].shift();return this.usedTextures[o].push(e),e}let a;return r===c.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(a),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),a}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=Rn(n,r),a=_n(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Tn(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,o.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Tn(e,t,n,r,o){const s=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return ie(t);case c.PACKED_2X2_FLOAT16:return ue(t);case c.UNPACKED_FLOAT32:return oe(t);case c.UNPACKED_FLOAT16:return se(t);case c.PACKED_4X1_UNSIGNED_BYTE:return ae(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let a;if(o){const[t,n]=p(e[0],e[1]);a=t*n}else{const[t,n]=d(e[0],e[1]);a=t*n}return a*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,s)}function Rn(e,t){if(e===l.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===l.RENDER||null==e)return function(e){return(0,o.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===l.DOWNLOAD||e===l.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function _n(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Nn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const An="return abs(x);";const Dn="return x;";class On{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Fn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length);const t=e.length,n=In("rc",t),r=(0,V.kW)(t),o=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),a=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${o});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}const Bn=o.GDt.ZA,Pn={};const Ln=(0,o.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Wn extends o.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,o.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof ce)t=e;else{const n=i((0,o.OBj)().getNumber("WEBGL_VERSION"),e);t=new ce(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=i((0,o.OBj)().getNumber("WEBGL_VERSION"));t=new ce(e),this.binaryCache=((n=(0,o.OBj)().getNumber("WEBGL_VERSION"))in Pn||(Pn[n]={}),Pn[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new En(this.gpgpu),this.numMBBeforeWarning=null==(0,o.OBj)().global.screen?1024:(0,o.OBj)().global.screen.height*(0,o.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new o.JLz(this,(0,o.SRH)())}nextDataId(){return Wn.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,o.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,o.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:l.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,s){if((0,o.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:l.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:u}=t;if(null!=a){let t;t=u?new On(i,Dn):new Nn(i,Dn);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),o=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),o}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=o.D5U.now()),"complex64"===r){const e=this.readSync(s.real.dataId),t=this.readSync(s.imag.dataId);d=o.Wap.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=o.D5U.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:u}=t;if(null!=s){let t;t=u?new On(r,Dn):new Nn(r,Dn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),o=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),o}if(null!=n)return this.convertAndCacheOnCPU(e);if((0,o.OBj)().getBool("DEBUG")&&!(0,o.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,o.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==a&&(0,o.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture.texture,...h(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=o.Wap.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=o.D5U.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;g(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,o.SRH)().removeDataId(e,this),this.pendingDeletes--),p}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:u,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=u?new On(s,Dn):new Nn(s,Dn);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),o=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),o}if(null==l)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const c=this.decode(e,t.customTexShape),d=(0,o.SRH)().makeTensorFromTensorInfo(c),h=this.texData.get(c.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>o.D5U.decodeString(e)));return(0,o.f3b)(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,o.f3b)(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if((0,o.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=o.D5U.sizeFromShape(t);if((0,o.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),o=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...h(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),o}const a=(0,o.OBj)().getBool("WEBGL_PACK")&&!0===r,i=a?_(t):t,u=a?new Z(i):new Y(i),l=this.runWebGLProgram(u,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture.texture,c.texShape[0],c.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=o.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=o.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if((0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=o.D5U.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:o.D5U.now(),endMs:null}}endTimer(e){return(0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=o.D5U.now(),e)}async getQueryTime(e){if((0,o.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:o,isPacked:s,slice:a}=this.texData.get(e),i=a&&a.origDataId||e,u=this.dataRefCount.get(i);u>1?this.dataRefCount.set(i,u-1):(this.dataRefCount.delete(i),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,o,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Ln){return(0,o.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&o.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){o.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Bn(e.shape,t)}packedUnaryOp(e,t,n){const r=new On(e.shape,t),s=this.compileAndRun(r,[e],n);return(0,o.SRH)().makeTensorFromTensorInfo(s)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=un(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,o.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,An,e.dtype);const t=new Nn(e.shape,An),n=this.compileAndRun(t,[e]);return(0,o.SRH)().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&o.D5U.isString(n[0])){const s=n.map((e=>o.D5U.encodeString(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return(0,o.SRH)().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new Fn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new $n(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[T(e.shape),...R(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},o=[T(t),...R(t)],s=new Sn(o,n),a=[n],i=this.runWebGLProgram(s,[r],e.dtype,a,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;if(null!=t){const e=o.D5U.sizeFromShape(s),n=t[0]*t[1]*4;o.D5U.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const i=_(s);let u;u=r?new q(i):new K(i);const l=[null!=t?t:h(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(u,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),l=this.texData.get(i.dataId);if(e.packedOutput&&(l.isPacked=!0),e.outPackingScheme===u.DENSE){const t=null!=a?a:h(e.outputShape);l.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(l.usage=e.outTexUsage),0===o.D5U.sizeFromShape(i.shape))return l.values=o.D5U.getTypedArrayFromDType(i.dtype,0),i;const c=[],d=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&o.D5U.sizeFromShape(t.shape)<=(0,o.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),c.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!A(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),c.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const p={shape:i.shape,texData:l,isUniform:!1},f=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:u,keptDims:l}=V.Tt(e.packedInputs,t.shape,a);let c="",d="",h="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];c=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=o.D5U.computeStrides(u);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else d=`${u[0]>1}_${u[1]>1}`;const p=t.shape.length,f=2===u.length&&o.D5U.arraysEqual(t.shape,a),g=1===o.D5U.sizeFromShape(t.shape),m=o.Wap.getBroadcastDims(t.shape,n.shape),x=!e.packedInputs&&p===n.shape.length&&o.D5U.arraysEqual(a,n.texData.texShape),b=e.packedInputs||u.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${x}_${i?l:""}_${u.length}_${g}_${m}_${f}_${c}_${d}_${h}_${b}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${(0,o.OBj)().getNumber("WEBGL_VERSION")}`,a}(e,d,p),g=this.getAndSaveBinary(f,(()=>G(this.gpgpu,e,d,p))),m=null!=this.activeTimers;let x;m&&(x=this.startTimer()),(0,o.OBj)().get("ENGINE_COMPILE_ONLY")||function(e,t,n,r,s){t.program.enableShapeUniforms||(H(t.inShapeInfos,n),H([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===(0,o.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],u=t.inShapesLocations[`${s}Shape`],l=t.inTexShapesLocations[`${s}TexShape`];if(u){const{uniformShape:r}=V.Tt(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(o.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=o.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const o=t.customUniformLocations[r],a=s[r];if("float"===n.type)e.gl.uniform1fv(o,a);else if("vec2"===n.type)e.gl.uniform2fv(o,a);else if("vec3"===n.type)e.gl.uniform3fv(o,a);else if("vec4"===n.type)e.gl.uniform4fv(o,a);else if("int"===n.type)e.gl.uniform1iv(o,a);else if("ivec2"===n.type)e.gl.uniform2iv(o,a);else if("ivec3"===n.type)e.gl.uniform3iv(o,a);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(o,a)}})),e.executeProgram()}(this.gpgpu,g,d,p,r),c.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(x=this.endTimer(x),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(x)}));const b=(0,o.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=o.D5U.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,o.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&l.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,o=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!(0,o.OBj)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,o.lub)((()=>{if(!(0,o.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,o.OBj)().getBool("DEBUG");(0,o.OBj)().set("DEBUG",!1);const t=this.abs((0,o.iD$)(1e-8)).dataSync()[0];if((0,o.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:u}=t;if(null!=a)return;const c=null!=this.activeTimers;let d;c&&(d=o.D5U.now());let h=t.texShape;if(null==h&&(h=function(e,t=!1){let n=(0,o.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=(0,o.OBj)().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(r===1/0&&(0,o.OBj)().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n*=2,r*=2,1===(e=e.map(((t,n)=>n>=e.length-2?o.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=o.D5U.squeezeShape(e);e=t.newShape}let s=o.D5U.sizeFromShape(e),a=null;e.length<=1&&s<=n?a=[1,s]:2===e.length&&e[0]<=n&&e[1]<=n?a=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?a=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?a=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?a=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(a=[e[0],e[1]*e[2]*e[3]]);const i=null!=a&&Math.max(...a)>r&&Math.min(...a)<=(t?2:1)&&Math.min(...a)>0;if(null==a||i)if(t){const t=T(e);let n=2,r=2;e.length&&([n,r]=R(e)),s=t*(n/2)*(r/2),a=o.D5U.sizeToSquarishShape(s).map((e=>2*e))}else a=o.D5U.sizeToSquarishShape(s);return a}(n,u),t.texShape=h),null!=s){const e=_(n);let a,i=h[1],f=h[0];const g=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!u&&g||([i,f]=p(h[0],h[1])),a=u?new J(e,g):new Q(e,g);const m=g?[f,i]:h,x=this.makeTensorInfo(m,r),b=this.texData.get(x.dataId);b.usage=g?l.PIXELS:l.UPLOAD,b.texShape=m,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),i,f,s);const y=[[f,i]],w=!0,v=this.runWebGLProgram(a,[x],r,y,w),k=this.texData.get(v.dataId);t.texShape=k.texShape,t.isPacked=k.isPacked,t.usage=k.usage,(0,o.OBj)().get("ENGINE_COMPILE_ONLY")?this.disposeData(v.dataId):(t.texture=k.texture,t.values=null,this.texData.delete(v.dataId)),this.disposeIntermediateTensorInfo(x),c&&(this.uploadWaitMs+=o.D5U.now()-d)}else{const e=this.acquireTexture(h,i,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*o.D5U.bytesPerElement(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await(0,o.glt)(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw y(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:n,infLoc:r,nanLoc:o,inShapesLocations:s,inTexShapesLocations:a,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:l}=z(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=o,e.inShapesLocations=s,e.inTexShapesLocations=a,e.outShapeLocation=i,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}}Wn.nextDataId=0,o.C2$.isBrowser()&&(0,o.jqO)("webgl",(()=>new Wn),2);class Mn{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=o.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=X(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class Un{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=o.Wap.assertAndGetBroadcastShape(t,n);const s=this.outputShape.length;this.enableShapeUniforms=X(s);let a="";if(r)if(0===s||1===o.D5U.sizeFromShape(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(a=`\n          ${(0,V.kW)(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=In("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function Vn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Gn={kernelName:o.iJz,backendName:"webgl",kernelFunc:Vn};function zn(e){const{inputs:t,backend:n}=e,{real:r,imag:o}=t,s=n.makeTensorInfo(r.shape,"complex64"),a=n.texData.get(s.dataId),i=Vn({inputs:{x:r},backend:n}),u=Vn({inputs:{x:o},backend:n});return a.complexTensorInfos={real:i,imag:u},s}const Hn={kernelName:o.Zz9,backendName:"webgl",kernelFunc:zn},Xn="return (a < 0.) ? b * a : a;",jn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Kn={kernelName:o.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",o.D5U.createScalarValue(a,"float32")),u=(0,o.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Un(jn,s.shape,i.shape):new Mn(Xn,s.shape,i.shape),l=n.runWebGLProgram(u,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},qn="return (a < 0.) ? b * a : a;",Yn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Zn={kernelName:o.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=(0,o.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Un(Yn,r.shape,s.shape):new Mn(qn,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function Qn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,u=a,l=r||i.dtype;if(u.shouldExecuteOnCPU([i])&&null!=n){const e=u.texData.get(i.dataId),t=n(e.values,l);return u.makeTensorInfo(i.shape,l,t)}let c;return c=(0,o.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new On(i.shape,t):new Nn(i.shape,e),u.runWebGLProgram(c,[i],l)}}function Jn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:u})=>{const{a:l,b:c}=i,d=u;if(r&&"complex64"===l.dtype){const t=d.texData.get(l.dataId),n=d.texData.get(c.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new Mn(e,l.shape,c.shape);return d.runWebGLProgram(i,[s,a],(0,o.x8V)(n.dtype,r.dtype))})),a=zn({inputs:{real:r,imag:s},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(s),a}const h=a||(0,o.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=s){const e=d.texData.get(l.dataId).values,t=d.texData.get(c.dataId).values,n="string"===l.dtype?o.Wap.fromUint8ToStringArray(e):e,r="string"===l.dtype?o.Wap.fromUint8ToStringArray(t):t,[a,i]=s(l.shape,c.shape,n,r,h),u=d.makeTensorInfo(i,h);return d.texData.get(u.dataId).values=a,u}let p;return p=(0,o.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Un(t,l.shape,c.shape,n):new Mn(e,l.shape,c.shape),d.runWebGLProgram(p,[l,c],h)}}function er(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?Yn:qn;if("leakyrelu"===e)return t?jn:Xn;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class tr{constructor(e,t,n,r=!1,o=!1,s=!1,a=null,i=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=X(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=o?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const x=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",y="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(y=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${y};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${x}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}const nr="return areal * breal - aimag * bimag;",rr="return areal * bimag + aimag * breal;";class or{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=o.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const sr="return a * b;";function ar(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=o.Wap.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),o=new or(nr,r.shape,s.shape),a=new or(rr,r.shape,s.shape),i=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(o,i,"float32"),l=n.runWebGLProgram(a,i,"float32"),c=zn({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[o,i]=Zt(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(i,a);return n.texData.get(u.dataId).values=o,u}let i;return i=(0,o.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Un(sr,r.shape,s.shape):new Mn(sr,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const ir={kernelName:o.wYn,backendName:"webgl",kernelFunc:ar};function ur(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,u=o.D5U.sizeFromShape(s.shape),l=o.D5U.inferFromImplicitShape(a,u),c=o.D5U.sizeFromShape(l);o.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${s.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=i.texData.get(s.dataId);return!d.isPacked||A(s.shape,l)||null!==d.texture&&A(d.shape,l)?(i.incRef(s.dataId),{dataId:s.dataId,shape:l,dtype:s.dtype}):function(e,t,n){const r=[T(e.shape),...R(e.shape)],o={dtype:e.dtype,shape:r,dataId:e.dataId},s=[T(t),...R(t)],a=new Sn(s,r),i=[r],u=n.runWebGLProgram(a,[o],e.dtype,i,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,l,i)}const lr={kernelName:o.HZH,backendName:"webgl",kernelFunc:ur};class cr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${o.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class dr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:o,outSize:s}=e;this.outputShape=[r,s];let a="0.0",i="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",i="min"):"max"===t&&(a="-1.0 / 1e-20",i="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${i}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${i}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(a="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(a="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";o%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function hr(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=o.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let o=0;o<s.length;o++){const{inSize:i,windowSize:u,outSize:l}=s[o];let c,d;c="mean"===n?0===o?new cr({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},i):new cr({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l}):new dr({windowSize:u,inSize:i,batchSize:e.shape[0],outSize:l},n),d=a,a=r.runWebGLProgram(c,[a],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return a}class pr{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const r=(0,V.kW)(this.rank),o=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let o=0;o<e.length;o++)r[e[o]]=n[o];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${o}));\n    }\n    `}}class fr{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let l=0;l<n.length;l++)n[l]=e[t[l]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=(0,V.kW)(this.rank),o=Cn("rc",this.rank),s=new Array(this.rank);for(let l=0;l<t.length;l++)s[t[l]]=o[l];const a=`vec2(${s.slice(-2).join()})`,i=`++${o[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${i}) {\n        result[1] = ${u};\n      }\n      --${o[this.rank-1]};\n      if(++${o[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${i}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function gr(e,t,n){const r=(0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fr(e.shape,t):new pr(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function mr(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=o.D5U.parseAxisParam(s,e.shape);let u=i;const l=o.Wap.getAxesPermutation(u,a),c=null!=l;let d=e;c&&(d=gr(e,l,r),u=o.Wap.getInnerMostAxes(u.length,a)),o.Wap.assertAxesAreInnerMostDims("sum",u,a);const[h,p]=o.Wap.computeOutAndReduceShapes(d.shape,u);let f=h;n&&(f=o.Wap.expandShapeToKeepDim(h,i));const g=o.D5U.sizeFromShape(p),m=ur({inputs:{x:d},attrs:{shape:[o.D5U.sizeFromShape(e.shape)/g,g]},backend:r}),x=hr(m,(0,o.z4k)(e.dtype),"sum",r),b=ur({inputs:{x:x},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(x),c&&r.disposeIntermediateTensorInfo(d),b}(s,a,i,n)}const xr={kernelName:o.GBy,backendName:"webgl",kernelFunc:mr};function br(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{perm:s}=r,a=n,i=o.shape.length,u=new Array(i);for(let c=0;c<u.length;c++)u[c]=o.shape[s[c]];let l;if(a.shouldExecuteOnCPU([o])){const e=a.texData.get(o.dataId).values,t=vn(e,o.shape,o.dtype,s,u);l=a.makeTensorInfo(u,o.dtype);a.texData.get(l.dataId).values=t}else l=gr(o,s,a);return l}const yr={kernelName:o.G3Y,backendName:"webgl",kernelFunc:br};function wr({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],g=r?t.shape[d-2]:t.shape[d-1],m=e.shape.slice(0,-2),x=t.shape.slice(0,-2),b=o.D5U.sizeFromShape(m),y=o.D5U.sizeFromShape(x),w=o.Jyw.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([f,g]);o.D5U.assert(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[b,h,f]:[b,f,h],k=r?[y,g,p]:[y,p,g],C=ur({inputs:{x:e},backend:s,attrs:{shape:v}}),I=ur({inputs:{x:t},backend:s,attrs:{shape:k}}),$=[C,I],S=Math.max(b,y),E=n?C.shape[1]:C.shape[2],T=null!=a,R=null!=i,_="leakyrelu"===l,N=null!=l?er(l,!0):null;let A;if((1===f||1===g)&&E>1e3&&!1===(T||R||_||null!=N)){let e=C,t=I;n&&(e=br({inputs:{x:C},backend:s,attrs:{perm:[0,2,1]}}),$.push(e)),r&&(t=br({inputs:{x:I},backend:s,attrs:{perm:[0,2,1]}}),$.push(t));const o=1===g;let a=e;1!==g&&(a=ur({inputs:{x:e},backend:s,attrs:{shape:[S,E,1]}}),$.push(a));const i=1===g?2:1;let u=t;o&&(u=ur({inputs:{x:t},backend:s,attrs:{shape:[S,1,E]}}),$.push(u));const l=ar({inputs:{a:a,b:u},backend:s});A=mr({inputs:{x:l},backend:s,attrs:{axis:i,keepDims:!0}}),$.push(l)}else{const l=(0,o.x8V)(e.dtype,t.dtype),c=new tr(v,k,[S,f,g],n,r,T,N,R,_),d=[C,I];if(null!=a&&d.push(a),R&&d.push(i),_){const e=s.makeTensorInfo([],"float32",o.D5U.createScalarValue(u,"float32"));d.push(e),$.push(e)}A=s.runWebGLProgram(c,d,l)}const D=ur({inputs:{x:A},backend:s,attrs:{shape:w}});$.push(A);for(const o of $)s.disposeIntermediateTensorInfo(o);return D}const vr={kernelName:o.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:o,b:s,bias:a,preluActivationWeights:i}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return wr({a:o,b:s,transposeA:u,transposeB:l,backend:n,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:c})}},kr="return abs(x);";const Cr={kernelName:o.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=un(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=(0,o.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new On(r.shape,kr):new Nn(r.shape,kr),n.runWebGLProgram(s,[r],r.dtype)}},Ir=Qn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),$r={kernelName:o.VGw,backendName:"webgl",kernelFunc:Ir},Sr=Qn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Er={kernelName:o.SpW,backendName:"webgl",kernelFunc:Sr},Tr="return a + b;",Rr=Jn({opSnippet:Tr,packedOpSnippet:Tr,supportsComplex:!0,cpuKernelImpl:_t}),_r={kernelName:o.mm_,backendName:"webgl",kernelFunc:Rr};class Nr{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Ar{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Dr={kernelName:o.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return Vn({inputs:{x:s[0]},backend:r});if(s.length>(0,o.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),o=e({inputs:s.slice(t),backend:r});return e({inputs:[n,o],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>(0,o.x8V)(e,t))),i=s.map((e=>e.shape)),u=(0,o.OBj)().getBool("WEBGL_PACK")?new Ar(s[0].shape,i):new Nr(s[0].shape,i);return r.runWebGLProgram(u,s,a)}};const Or={kernelName:o.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,u=s.shape.length,l=o.D5U.parseAxisParam(a,s.shape);let c=l;const d=o.Wap.getAxesPermutation(c,u);let h=s;null!=d&&(h=br({inputs:{x:s},backend:n,attrs:{perm:d}}),c=o.Wap.getInnerMostAxes(c.length,u)),o.Wap.assertAxesAreInnerMostDims("all",c,u);const[p,f]=o.Wap.computeOutAndReduceShapes(h.shape,c),g=ur({inputs:{x:h},backend:n,attrs:{shape:[-1,o.D5U.sizeFromShape(f)]}}),m=hr(g,g.dtype,"all",n);let x;if(i){x=ur({inputs:{x:m},backend:n,attrs:{shape:o.Wap.expandShapeToKeepDim(p,l)}})}else x=ur({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}};const Fr={kernelName:o.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,u=s.shape.length,l=o.D5U.parseAxisParam(a,s.shape);let c=l;const d=o.Wap.getAxesPermutation(c,u);let h=s;null!=d&&(h=br({inputs:{x:s},backend:n,attrs:{perm:d}}),c=o.Wap.getInnerMostAxes(c.length,u)),o.Wap.assertAxesAreInnerMostDims("any",c,u);const[p,f]=o.Wap.computeOutAndReduceShapes(h.shape,c),g=ur({inputs:{x:h},backend:n,attrs:{shape:[-1,o.D5U.sizeFromShape(f)]}}),m=hr(g,g.dtype,"any",n);let x;if(i){x=ur({inputs:{x:m},backend:n,attrs:{shape:o.Wap.expandShapeToKeepDim(p,l)}})}else x=ur({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}};class Br{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[o,s];const a="max"===t?">":"<",i=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${i};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Pr{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,o.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,u=i.length,l=(0,V.kW)(u),c=In("coords",u);let d,h;if(1===a){h=u+1;const e=(0,V.kW)(h);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else h=u,d=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],g=p.map((e=>"int "+e)),m=In("sourceLocR",h-1).concat("inIdx.r"),x=In("sourceLocG",h-1).concat("inIdx.g"),b=In("sourceLocB",h-1).concat("inIdx.b"),y=In("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${x.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${x.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,C=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${C}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${i[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${i[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Lr(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=o.Wap.computeOptimalWindowSize(a),u={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},l=new Br(u,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;const h=Lr(e,t,n,d);return e.disposeIntermediateTensorInfo(d),h}function Wr(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=s[s.length-1],i=o.Wap.computeOptimalWindowSize(a),u=new Pr(s,i,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=Wr(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Mr(e,t,n,r){const s=[n];if(o.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!(0,o.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[u,l]=o.Wap.computeOutAndReduceShapes(i.shape,s),c=o.D5U.sizeFromShape(l),d=ur({inputs:{x:i},backend:e,attrs:{shape:[-1,c]}});n.push(d);const h=Lr(e,d,r);n.push(h);const p=ur({inputs:{x:h},backend:e,attrs:{shape:u}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return Wr(e,t,r)}const Ur={kernelName:o.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=o.D5U.parseAxisParam(a,s.shape);const u=o.Wap.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=br({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=o.Wap.getInnerMostAxes(i.length,l.shape.length)),o.Wap.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);const d=Mr(n,l,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}};const Vr={kernelName:o.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=o.D5U.parseAxisParam(a,s.shape);const u=o.Wap.getAxesPermutation(i,s.shape.length);let l=s;const c=[];null!=u&&(l=br({inputs:{x:s},backend:n,attrs:{perm:u}}),c.push(l),i=o.Wap.getInnerMostAxes(i.length,l.shape.length)),o.Wap.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);const d=Mr(n,l,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Gr=Qn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),zr={kernelName:o.M2y,backendName:"webgl",kernelFunc:Gr},Hr=Qn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Xr={kernelName:o.qw7,backendName:"webgl",kernelFunc:Hr},jr=Qn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Kr={kernelName:o.jMg,backendName:"webgl",kernelFunc:jr},qr=Jn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Yr={kernelName:o.QCc,backendName:"webgl",kernelFunc:qr},Zr=Qn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Qr={kernelName:o.Oyi,backendName:"webgl",kernelFunc:Zr};class Jr{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,a=e.strideHeight,i=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(f||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${i});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?o?g:m:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const y=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${i});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${y}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${y};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class eo{constructor(e,t,n,r=!1,o=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,a=e.strideDepth,i=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let y="0.0";if(b||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${i}, ${u});\n        const ivec3 pads = ivec3(${g}, ${m}, ${x});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,C=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${i}, ${u});\n      const ivec3 pads = ivec3(${g}, ${m}, ${x});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const to={kernelName:o.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;W(s,"avgPool");const{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;o.D5U.assert(o.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=o.Wap.computePool2DInfo(s.shape,a,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&o.D5U.arraysEqual(c.inShape,c.outShape))return Vn({inputs:{x:s},backend:n});const d=new Jr(c,"avg",!1);return n.runWebGLProgram(d,[s],"float32")}};const no={kernelName:o._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=o.Wap.computePool3DInfo(s.shape,a,i,[1,1,1],u,l,c),h=new eo(d,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class ro{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,s=e.dilationHeight,a=e.dilationWidth,i=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=i-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oo{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,g=h-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${o}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const so={kernelName:o.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=o.Wap.computePool3DInfo(i.shape,u,l,[1,1,1],c,d),p=new oo(h);return n.runWebGLProgram(p,[s],i.dtype)}};const ao={kernelName:o.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;W([s,a],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,d=o.Wap.computePool2DInfo(i.shape,u,l,1,c),h=new ro(d);return n.runWebGLProgram(h,[s],i.dtype)}};const io={kernelName:o.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:o,b:s}=t,{transposeA:a,transposeB:i}=r;return wr({a:o,b:s,transposeA:a,transposeB:i,backend:n})}};class uo{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],o.Wap.assertAndGetBroadcastShape(e,t),o.Wap.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(o.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="1.0";null!=s&&(o.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class lo{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],o.Wap.assertAndGetBroadcastShape(e,t),o.Wap.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(o.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=s&&(o.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const co={kernelName:o.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:u}=e;o.D5U.assert(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),o.D5U.assert(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),o.D5U.assert(null==u||s.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,s,a];let d=null;null!=i&&(d=i.shape,c.push(i));let h=null;null!=u&&(h=u.shape,c.push(u));const p=(0,o.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new lo(r.shape,s.shape,a.shape,d,h,l):new uo(r.shape,s.shape,a.shape,d,h,l);return t.runWebGLProgram(p,c,c[0].dtype)}};class ho{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=(0,V.kW)(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return po.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${po[t]} = start[${t}] + coords.${po[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const po=["x","y","z","w","u","v"];class fo{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=(0,V.kW)(this.rank),n=In("coords",this.rank),r=In("sourceLoc",this.rank),o=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${o})`,a=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,i=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${a}\n        ${i}\n        setOutput(result);\n      }\n    `}}function go(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[u,l]=o.kuN.parseSliceParams(s,a,i);if(o.kuN.assertParamsValid(s,u,l),0===o.D5U.sizeFromShape(l))return n.makeTensorInfo(l,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=ln(e.values,u,l,s.shape,s.dtype);return n.makeTensorInfo(l,s.dtype,t)}const{isPacked:c}=n.texData.get(s.dataId),d=o.kuN.isSliceContinous(s.shape,u,l);if(c||!d){const e=(0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fo(l):new ho(l),t=[u];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let u=o.kuN.computeFlatOffset(t,o.D5U.computeStrides(e.shape));s.slice&&(u+=s.slice.flatOffset),i.slice={flatOffset:u,origDataId:s.slice&&s.slice.origDataId||e.dataId};const l=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,l+1),a}(s,u,l,n)}const mo={kernelName:o.p2w,backendName:"webgl",kernelFunc:go},xo={kernelName:o.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;o.D5U.assert(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=o.Wap.getReshaped(s.shape,a,u),c=o.Wap.getPermuted(l.length,a.length),d=o.Wap.getReshapedPermuted(s.shape,a,u),h=o.Wap.getSliceBeginCoords(i,a.length),p=o.Wap.getSliceSize(d,i,a.length),f=[],g=ur({inputs:{x:s},backend:n,attrs:{shape:l}}),m=br({inputs:{x:g},backend:n,attrs:{perm:c}}),x=ur({inputs:{x:m},backend:n,attrs:{shape:d}}),b=go({inputs:{x:x},backend:n,attrs:{begin:h,size:p}});return f.push(g),f.push(m),f.push(x),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const bo={kernelName:o.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:s}=t,{size:a}=r,i=n.readSync(o.dataId),u=n.readSync(s.dataId),l=Nt(i,u,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,l)}};const yo={kernelName:o.eEB,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),u=o.Wap.assertAndGetBroadcastShape(Array.from(a),Array.from(i));return n.makeTensorInfo([u.length],"int32",Int32Array.from(u))}},wo=Jn({opSnippet:"return float(a != b);",cpuKernelImpl:Jt,dtype:"bool"}),vo={kernelName:o.yQU,backendName:"webgl",kernelFunc:wo};function ko(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Co={kernelName:o.xJR,backendName:"webgl",kernelFunc:ko};const Io={kernelName:o.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return Vn({inputs:{x:a},backend:r});const t=o.lls(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=zn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=ko({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!o.D5U.hasEncodingLoss(a.dtype,i)){const e=Vn({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(r.shouldExecuteOnCPU([a])){const e=r.texData.get(a.dataId).values,[t,n,o]=Dt(e,a.shape,a.dtype,i);return r.makeTensorInfo(t,n,o)}if("int32"===i)return function(e,t){const n=new Nn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",o.D5U.getTypedArrayFromDType("bool",1)),t=wo({inputs:{a:a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},$o="return ceil(x);",So=Qn({opSnippet:$o,packedOpSnippet:$o,cpuKernelImpl:Ot}),Eo={kernelName:o.gJX,backendName:"webgl",kernelFunc:So};class To{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Ro{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const _o={kernelName:o.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let u;u=(0,o.OBj)().getBool("WEBGL_PACK_CLIP")?new Ro(s.shape):new To(s.shape);const l=[[a],[i]];return n.runWebGLProgram(u,[s],s.dtype,l)}};class No{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Ao(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Do={kernelName:o.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,o=n.texData.get(r.dataId),s=new No(r.shape),a=[Ao(r,o.complexTensorInfos.real),Ao(r,o.complexTensorInfos.imag)];return n.runWebGLProgram(s,a,a[0].dtype)}};class Oo{constructor(e){this.outputShape=[],this.outputShape=o.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let o=1;o<t.length;o++)t[o]=t[o-1]+e[o][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let o=1;o<t.length;o++){const e=t[o-1];n.push(`else if (yC < ${t[o]}) setOutput(getT${o}(yR, yC-${e}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Fo{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=o.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,s=(0,V.kW)(r),a=In("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let o=1;o<u.length;o++)u[o]=u[o-1]+e[o][t];const l=i[t],c=i.slice(-2),d=i.join();let h=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let o=1;o<u.length;o++){const e=u[o-1];h+=`\n        if (${l} < ${u[o]}  && ${l} >= ${u[o-1]}) {\n          return getChannel(\n            getT${o}(${Bo(i,l,e)}),\n            vec2(${Bo(c,l,e)}));\n        }`}const p=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${p}(${Bo(i,l,f)}),\n          vec2(${Bo(c,l,f)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function Bo(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Po(e){const{inputs:t,backend:n}=e,{input:r}=t;return Vn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Lo={kernelName:o.J_u,backendName:"webgl",kernelFunc:Po};function Wo(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>ko({inputs:{input:e},backend:n}))),o=e.map((e=>Po({inputs:{input:e},backend:n}))),s=Wo(r,t,n),a=Wo(o,t,n),i=zn({inputs:{real:s,imag:a},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),o.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=o.D5U.sizeFromShape(e.shape.slice(t));return ur({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=o.Wap.computeOutShape(s.map((e=>e.shape)),1),u=1===s[0].shape[0],l=Ft(a,i,r,u),c=o.Wap.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,l);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const a=(0,o.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(e.length>a){const r=[];for(let s=0;s<e.length;s+=a){const o=e.slice(s,s+a);r.push(Wo(o,t,n))}const o=Wo(r,t,n);for(const e of r)n.disposeIntermediateTensorInfo(e);return o}if((0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const o=new Fo(e.map((e=>e.shape)),t);return n.runWebGLProgram(o,e,r)}const{tensors2D:i,outShape:u}=function(e,t,n){const r=o.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>ur({inputs:{x:e},attrs:{shape:[-1,o.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new Oo(i.map((e=>e.shape))),c=n.runWebGLProgram(l,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=ur({inputs:{x:c},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(c),d}function Mo(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=o.D5U.parseAxisParam(s,t[0].shape)[0],i=t.map((e=>e.shape));o.Wap.assertParamsConsistent(i,a);const u=o.Wap.computeOutShape(t.map((e=>e.shape)),a);if(0===o.D5U.sizeFromShape(u))return n.makeTensorInfo(u,t[0].dtype,[]);const l=t.filter((e=>o.D5U.sizeFromShape(e.shape)>0));return 1===l.length?Vn({inputs:{x:l[0]},backend:n}):Wo(l,a,n)}const Uo={kernelName:o.Eh3,backendName:"webgl",kernelFunc:Mo};class Vo{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,a=e.padInfo.left,i=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,x=g?2:3,b=g?3:1;let y="",w="";n&&(y=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${i}, ${u});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${x}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class Go{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${o}, ${s}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${i};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zo{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=X(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<c;o++)h+=`\n           vec4 xTexelC${2*o};\n           int xTexelC${2*o}Ready;\n           vec4 xTexelC${2*o+1};\n           int xTexelC${2*o+1}Ready;\n           vec4 xC${o};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let o=0;o<c;o++)h+=`\n           xTexelC${2*o} = vec4(0.0);\n           xTexelC${2*o}Ready = 0;\n           xTexelC${2*o+1} = vec4(0.0);\n           xTexelC${2*o+1}Ready = 0;\n           xC${o} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(d+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*u};\n           `,1===i){if(t<c&&(a%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===u&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<c)){const e=a%2===0?o.D5U.nearestLargerEven(u):u;u%2===0&&a%2===1||u%2!==0&&a%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=u>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<c&&(a%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<c&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<c&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<c&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<c&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:s?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,f="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${p}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${g}\n         ${f}\n         setOutput(result);\n       }\n     `}}class Ho{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=X(this.outputShape.length);const{dataFormat:n}=t,r=(0,U.A)(),o="channelsLast"===n,s=o?1:2,a=o?2:3,i=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let e=0;e<=1;e++)u+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${l};\n\n          ${i}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${o}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*l+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function Xo(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function jo({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),d=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let g;const m=[];if(null!=a){const e=Xo(a.shape,f);null!=e&&(a=ur({inputs:{x:a},backend:r,attrs:{shape:e}}),m.push(a))}if(null!=s){const e=Xo(s.shape,f);null!=e&&(s=ur({inputs:{x:s},backend:r,attrs:{shape:e}}),m.push(s))}if(!((1===h||1===p)&&d>1e3)&&c.isPacked&&f&&null!=c.texture&&l[2]%2!==0&&o.D5U.arraysEqual(c.shape.slice(-3),l.slice(-3))){const d=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,o.D5U.assert(A(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const f=ur({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);const x=wr({a:h,b:f,backend:r,transposeA:false,transposeB:false,bias:s,activation:u,preluActivationWeights:a,leakyreluAlpha:i}),b=r.texData.get(x.dataId);o.D5U.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,b.shape=n.outShape,g=Vn({inputs:{x:x},backend:r}),g.shape=n.outShape,m.push(x)}else{const o=n.outHeight*n.outWidth,l=ur({inputs:{x:e},backend:r,attrs:{shape:f?[n.batchSize,o,n.inChannels]:[n.batchSize,n.inChannels,o]}}),c=ur({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=wr({a:f?l:c,b:f?c:l,transposeA:!f,transposeB:false,backend:r,bias:s,activation:u,preluActivationWeights:a,leakyreluAlpha:i});g=ur({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(d)}for(const o of m)r.disposeIntermediateTensorInfo(o);return g}function Ko({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:h,outHeight:p,dataFormat:f}=n,g="channelsLast"===f,m=l*c*d,x=p*h,b=[n.batchSize,m,x],y=[];if(null!=a){const e=Xo(a.shape,g);null!=e&&(a=ur({inputs:{x:a},backend:r,attrs:{shape:e}}),y.push(a))}if(null!=s){const e=Xo(s.shape,g);null!=e&&(s=ur({inputs:{x:s},backend:r,attrs:{shape:e}}),y.push(s))}const w=ur({inputs:{x:t},backend:r,attrs:{shape:[1,m,o.D5U.sizeFromShape(t.shape)/m]}});y.push(w);const v=new Ho(b,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],C=r.runWebGLProgram(v,[e],"float32",k),I=ur({inputs:{x:C},backend:r,attrs:{shape:b}});y.push(C),y.push(I);const $=null!=s,S=null!=a,E="leakyrelu"===u,T=u?er(u,!0):null,R=new tr(g?I.shape:w.shape,g?w.shape:I.shape,g?[n.batchSize,x,n.outChannels]:[n.batchSize,n.outChannels,x],!0,!1,$,T,S,E),_=g?[I,w]:[w,I];if(s&&_.push(s),S&&_.push(a),E){const e=r.makeTensorInfo([],"float32",o.D5U.createScalarValue(i,"float32"));_.push(e),y.push(e)}const N=r.runWebGLProgram(R,_,"float32"),A=ur({inputs:{x:N},backend:r,attrs:{shape:n.outShape}});y.push(N);for(const o of y)r.disposeIntermediateTensorInfo(o);return A}const qo={kernelName:o.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=r,h=o.Wap.convertConv2DDataFormat(l),p=o.Wap.computeConv2DInfo(s.shape,a.shape,i,c,u,d,!1,h);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(p.strideWidth<=2&&"channelsLast"===h&&(0,o.OBj)().getBool("WEBGL_EXP_CONV")){const e=new zo(p),t=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];f=n.runWebGLProgram(e,[s,a],"float32",t)}else if((0,o.OBj)().getBool("WEBGL_CONV_IM2COL"))f=Ko({x:s,filter:a,convInfo:p,backend:n});else{const e=new Vo(p);f=n.runWebGLProgram(e,[s,a],"float32")}else f=jo({x:s,filter:a,convInfo:p,backend:n});const g=ur({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),g}};class Yo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Zo{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,s="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Qo{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,s=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${o};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Jo{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,o=e.strideDepth,s=e.strideHeight,a=e.strideWidth,i=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${i}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${o}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const es={kernelName:o.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:d}=r,h=o.Wap.convertConv2DDataFormat(l),p=o.Wap.computeConv2DInfo(s.shape,d,i,1,u,c,!1,h),f=new Yo(p);return n.runWebGLProgram(f,[s,a],"float32")}};const ts={kernelName:o.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=r,h=o.Wap.convertConv2DDataFormat(c),p=o.Wap.computeConv2DInfo(i,a.shape,u,1,l,d,!1,h),f=new Zo(p);return n.runWebGLProgram(f,[s,a],"float32")}};const ns={kernelName:o.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:u,dilations:l}=r,c=o.Wap.computeConv3DInfo(s.shape,a.shape,i,l,u),d=new Go(c);return n.runWebGLProgram(d,[s,a],"float32")}};const rs={kernelName:o.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:u,filterShape:l}=r,c=o.Wap.computeConv3DInfo(s.shape,l,i,1,u),d=new Qo(c);return n.runWebGLProgram(d,[s,a],"float32")}};const os={kernelName:o.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:u,inputShape:l}=r,c=o.Wap.computeConv3DInfo(l,a.shape,u,1,i),d=new Jo(c);return n.runWebGLProgram(d,[s,a],"float32")}},ss=Qn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),as={kernelName:o.mc4,backendName:"webgl",kernelFunc:ss},is=Qn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),us={kernelName:o.TR1,backendName:"webgl",kernelFunc:is};class ls{constructor(e,t,n,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,a,i,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[a-1+".0",i-1+".0"],[g,m,x]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,y,w]=d>1?[""+(i-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${x};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${o}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${o}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const cs={kernelName:o.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:o,boxes:s,boxInd:a}=t,{cropSize:i,method:u,extrapolationValue:l}=r,c=new ls(o.shape,s.shape,i,u,l);return n.runWebGLProgram(c,[o,s,a],"float32")}};var ds;!function(e){e.Prod="*",e.Sum="+"}(ds||(ds={}));class hs{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,s=this.op===ds.Prod?"1.0":"0.0",a=n?s:`getX(${ps(o,"coords",this.op)})`,i=this.outputShape[this.outputShape.length-1];let u="",l="";n?(u=r?"end != "+(i-1):"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${i}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${(0,V.kW)(o)} coords = getOutputCoords();\n        int end = ${fs(o,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${u}) {\n          int idx = ${l};\n          ${fs(o,"coords",this.op)} = idx;\n          val ${this.op}= getX(${ps(o,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function ps(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function fs(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function gs(e,t,n,r,s,a){const i=t.shape.length,u=o.Wap.getAxesPermutation([r],i);let l=t;null!=u&&(l=br({inputs:{x:t},backend:n,attrs:{perm:u}}));const c=o.Wap.getInnerMostAxes(1,i)[0];if(c!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);const d=l.shape[c];let h=Vn({inputs:{x:l},backend:n});for(let o=0;o<=Math.ceil(Math.log2(d))-1;o++){const t=new hs(e,l.shape,!1,a),r=[[o]],s=h;h=n.runWebGLProgram(t,[h],h.dtype,r),n.disposeIntermediateTensorInfo(s)}if(s){const t=new hs(e,l.shape,s,a),r=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(r)}if(null!=u){const e=br({inputs:{x:h},backend:n,attrs:{perm:o.Wap.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}const ms={kernelName:o.Byc,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:s,exclusive:a,reverse:i}=r;return gs(ds.Prod,o,n,s,a,i)}};const xs={kernelName:o.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{axis:s,exclusive:a,reverse:i}=r;return gs(ds.Sum,o,n,s,a,i)}};const bs={kernelName:o.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o,weights:s}=t,{size:a,binaryOutput:i}=r;if(1===o.shape.length){const e=n.readSync(o.dataId),t=n.readSync(s.dataId),r=Nt(e,t,s.dtype,s.shape,a);return n.makeTensorInfo([a],s.dtype,r)}if(2===o.shape.length){const e=n.bufferSync(o),t=n.bufferSync(s),r=At(e,t,a,i);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}};class ys{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const ws={kernelName:o.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:o}=t,{blockSize:s,dataFormat:a}=r,i=o.shape[0],u=("NHWC"===a?o.shape[1]:o.shape[2])*s,l=("NHWC"===a?o.shape[2]:o.shape[3])*s,c=("NHWC"===a?o.shape[3]:o.shape[1])/(s*s),d=new ys("NHWC"===a?[i,u,l,c]:[i,c,u,l],s,a);return n.runWebGLProgram(d,[o],o.dtype)}};class vs{constructor(e,t=!1,n=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=X(this.outputShape.length);const s=e.filterHeight,a=e.filterWidth,i=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:o?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class ks{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=X(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,u=e.strideWidth,l=e.dilationWidth,c=e.filterHeight,d=e.filterWidth,h=d;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let o=0;o<d;o++)p+=`\n          vec4 xTexelC${2*o};\n          int xTexelC${2*o}Ready;\n          vec4 xTexelC${2*o+1};\n          int xTexelC${2*o+1}Ready;\n          vec4 xC${o};`;p+=`\n    for (int r = 0; r < ${c}; r++) {\n      `;for(let o=0;o<d;o++)p+=`\n          xTexelC${2*o} = vec4(0.0);\n          xTexelC${2*o}Ready = 0;\n          xTexelC${2*o+1} = vec4(0.0);\n          xTexelC${2*o+1}Ready = 0;\n          xC${o} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let x=0;x<(h+1)/2;x++){const e=2*x;if(p+=`\n          xC = xCCorner + ${e*l};\n          `,1===u){if(e<d&&(i%2===1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,p+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<d)){const t=i%2===0?o.D5U.nearestLargerEven(l):l;l%2===0&&i%2===1||l%2!==0&&i%2!==1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,p+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):p+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<d&&(i%2===1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<d&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<d&&(p+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<d&&(p+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<d&&(p+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let f="",g="";n&&(f=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,g="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${f}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${g}\n        setOutput(result);\n      }\n    `}}const Cs={kernelName:o.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:u,dilations:l,dimRoundingMode:c}=r;let d=l;null==d&&(d=[1,1]),o.D5U.assert(o.Wap.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));const h=o.Wap.computeConv2DInfo(s.shape,a.shape,i,d,u,c,!0);let p;p=(0,o.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new ks(h):new vs(h);const f=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",f)}};class Is{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${o};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class $s{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,o=e.strideWidth,s=t-1-e.padInfo.top,a=n-1-e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${o}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${i}; dm++) {\n              int d2 = d1 * ${i} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ss={kernelName:o.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,filterShape:d}=r,h=o.Wap.computeConv2DInfo(s.shape,d,i,u,l,c,!0),p=new Is(h);return n.runWebGLProgram(p,[s,a],"float32")}};const Es={kernelName:o.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=r,h=o.Wap.computeConv2DInfo(d,a.shape,i,u,l,c,!0),p=new $s(h);return n.runWebGLProgram(p,[s,a],"float32")}};class Ts{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Rs={kernelName:o.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=o.D5U.sizeFromShape(r.shape),i=ur({inputs:{x:r},backend:n,attrs:{shape:[a]}}),u=new Ts(a),l=n.runWebGLProgram(u,[i],i.dtype),c=ur({inputs:{x:l},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),c}};class _s{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:o,strideWidth:s,filterHeight:a,filterWidth:i,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${o}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${i}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Ns={kernelName:o.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:u,dilations:l}=r,c=o.Wap.computeDilation2DInfo(s.shape,a.shape,i,u,"NHWC",l);let d;const h=new _s(c);d=n.runWebGLProgram(h,[s,a],"float32");const p=ur({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),p}};const As={kernelName:o.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:u,idDims:l}=o.Wap.decodeEinsumEquation(s,a.length);o.Wap.checkEinsumDimSizes(i.length,l,a);const{path:c,steps:d}=o.Wap.getEinsumComputePath(u,l),h=d.length;let p=null,f=i.length;const g=[];for(let m=0;m<h;++m){for(const e of d[m]){const{permutationIndices:t,expandDims:r}=o.Wap.getEinsumPermutation(f,l[e]);let s;o.Wap.isIdentityPermutation(t)?s=a[e]:(s=br({inputs:{x:a[e]},backend:n,attrs:{perm:t}}),g.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);o.D5U.arraysEqual(s.shape,i)||(s=ur({inputs:{x:s},backend:n,attrs:{shape:i}}),g.push(s)),null===p?p=s:(p=ar({inputs:{a:s,b:p},backend:n}),g.push(p))}m<h-1&&(c[m]>=0&&(p=mr({inputs:{x:p},backend:n,attrs:{axis:c[m]-(i.length-f),keepDims:!1}}),g.push(p)),f--)}for(const o of g)o!==p&&n.disposeIntermediateTensorInfo(o);return p}},Ds=Qn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Os={kernelName:o.SX0,backendName:"webgl",kernelFunc:Ds},Fs={kernelName:o.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=(0,o.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Un("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new Mn("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},Bs=Jn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:Bt}),Ps={kernelName:o.hdR,backendName:"webgl",kernelFunc:Bs},Ls=Qn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${o.Wap.ERF_P};\n  float a1 = ${o.Wap.ERF_A1};\n  float a2 = ${o.Wap.ERF_A2};\n  float a3 = ${o.Wap.ERF_A3};\n  float a4 = ${o.Wap.ERF_A4};\n  float a5 = ${o.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ws={kernelName:o.Omj,backendName:"webgl",kernelFunc:Ls},Ms=Qn({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:Pt,dtype:"float32"}),Us={kernelName:o.NEP,backendName:"webgl",kernelFunc:Ms};function Vs(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,u=a.shape.slice();let l=s;return s<0&&(o.D5U.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),u.splice(l,0,1),ur({inputs:{x:a},backend:r,attrs:{shape:u}})}const Gs={kernelName:o.YFo,backendName:"webgl",kernelFunc:Vs},zs="return exp(x) - 1.0;",Hs=Qn({opSnippet:zs,packedOpSnippet:zs,cpuKernelImpl:Lt}),Xs={kernelName:o.Y0y,backendName:"webgl",kernelFunc:Hs};class js{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${o};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Ks(e,t,n){const r=n.texData.get(e.dataId),s=o.D5U.sizeFromShape(e.shape),a=e.shape[e.shape.length-1],i=ur({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),u=i.shape,l=new js("real",u,t),c=new js("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,d,"float32"),p=n.runWebGLProgram(c,d,"float32"),f=zn({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const g=ur({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(f),g}const qs={kernelName:o.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ks(r,!1,n)}};class Ys{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function Zs(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||o.D5U.inferDtype(s),"string"===a){const e=o.D5U.getArrayFromDType(a,o.D5U.sizeFromShape(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new Ys(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const Qs={kernelName:o.deh,backendName:"webgl",kernelFunc:Zs};class Js{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ea={kernelName:o.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,o=new Js(n.shape);return r.runWebGLProgram(o,[n],n.dtype)}},ta="return floor(x);",na=Qn({opSnippet:ta,packedOpSnippet:ta,cpuKernelImpl:Wt}),ra={kernelName:o.OR,backendName:"webgl",kernelFunc:na},oa=Jn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),sa={kernelName:o.jeX,backendName:"webgl",kernelFunc:oa};class aa{constructor(e){this.variableNames=["A"];const t=(0,U.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ia{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=(0,U.A)(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const ua={kernelName:o.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!==typeof HTMLVideoElement&&s instanceof HTMLVideoElement,u="undefined"!==typeof HTMLImageElement&&s instanceof HTMLImageElement,[c,d]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],h=[d,c],p=[d,c,a];if(u||i){const e=(0,o.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=la&&e===ca||(ca=e,la=document.createElement("canvas").getContext("2d",{willReadFrequently:ca})),la.canvas.width=c,la.canvas.height=d,la.drawImage(s,0,0,c,d),s=la.canvas}const f=n.makeTensorInfo(h,"int32");n.texData.get(f.dataId).usage=l.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),s);const g=(0,o.OBj)().getBool("WEBGL_PACK")?new ia(p):new aa(p),m=n.runWebGLProgram(g,[f],"int32");return n.disposeData(f.dataId),m}};let la,ca=(0,o.OBj)().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");const da={kernelName:o._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:h,dimRoundingMode:p,activation:f,leakyreluAlpha:g}=r,m=o.Wap.convertConv2DDataFormat(d),x=o.Wap.computeConv2DInfo(s.shape,a.shape,l,h,c,p,!1,m);let b;const y=[],w=null!=i,v=null!=u,k="leakyrelu"===f,C=()=>{const e=[s,a],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=ur({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return y.push(t),t}return e};if(w&&e.push(t(i,d)),v&&e.push(t(u,d)),k){const t=n.makeTensorInfo([],"float32",o.D5U.createScalarValue(g,"float32"));e.push(t),y.push(t)}return e};if(1!==x.filterHeight||1!==x.filterWidth||1!==x.dilationHeight||1!==x.dilationWidth||1!==x.strideHeight||1!==x.strideWidth||"SAME"!==x.padInfo.type&&"VALID"!==x.padInfo.type)if(x.strideWidth<=2&&"channelsLast"===m&&(0,o.OBj)().getBool("WEBGL_EXP_CONV")){const e=f?er(f,!0):null,t=new zo(x,w,e,v,k),r=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],o=C();b=n.runWebGLProgram(t,o,"float32",r)}else if((0,o.OBj)().getBool("WEBGL_CONV_IM2COL"))b=Ko({x:s,filter:a,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:g});else{const e=f?er(f,!1):null,t=new Vo(x,w,e,v,k),r=C();b=n.runWebGLProgram(t,r,"float32")}else b=jo({x:s,filter:a,convInfo:x,backend:n,bias:i,activation:f,preluActivationWeights:u,leakyreluAlpha:g});const I=ur({inputs:{x:b},backend:n,attrs:{shape:x.outShape}});return y.push(b),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}};const ha={kernelName:o.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,g=[];let m=d;null==m&&(m=[1,1]),o.D5U.assert(o.Wap.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const x=o.Wap.computeConv2DInfo(s.shape,a.shape,l,m,c,h,!0),b=(0,o.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&x.strideWidth<=2&&x.outChannels/x.inChannels===1,y=p?er(p,b):null,w=[s,a],v=null!=i,k=null!=u,C="leakyrelu"===p;if(v&&w.push(i),k&&w.push(u),C){const e=n.makeTensorInfo([],"float32",o.D5U.createScalarValue(f,"float32"));w.push(e),g.push(e)}let I;I=b?new ks(x,v,y,k,C):new vs(x,v,y,k,C);const $=[[x.padInfo.top,x.padInfo.left],[x.strideHeight,x.strideWidth],[x.dilationHeight,x.dilationWidth],[x.inHeight,x.inWidth]],S=n.runWebGLProgram(I,w,"float32",$);return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class pa{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;const o=(0,V.kW)(n.length);let s="\n    int index;";for(let a=0;a<this.sliceDim;a++)s+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${o} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}const fa={kernelName:o.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],u=o.D5U.sizeFromShape(r.shape),[l,c,d,h]=o.Wap.prepareAndValidate(r,s),p=ur({inputs:{x:s},backend:n,attrs:{shape:[c,i]}}),f=ur({inputs:{x:r},backend:n,attrs:{shape:[o.D5U.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),o=Mt(e,t,r.dtype,c,i,d,h,r.shape,u);return n.makeTensorInfo(l,r.dtype,o.values)}const g=new pa(i,h,[c,d],r.shape),m=n.runWebGLProgram(g,[f,p],f.dtype),x=ur({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),x}};class ga{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=(0,V.kW)(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let o=0;o<e.length;o++)2===o?r.push("index"):r.push(`${n[o]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function ma(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:u}=r,l=o.D5U.parseAxisParam(i,s.shape)[0];if((0,o.OBj)().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[l];for(let n=0;n<e.length;++n){const r=e[n];o.D5U.assert(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const c=o.Wap.segment_util.collectGatherOpShapeInfo(s,a,l,u),d=o.D5U.sizeFromShape(a.shape),h=[],p=ur({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=ur({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});h.push(p),h.push(f);const g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=Ut(t,e,g);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new ga(p.shape,g),x=n.runWebGLProgram(m,[p,f],p.dtype);h.push(x);const b=ur({inputs:{x:x},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const xa={kernelName:o.qi_,backendName:"webgl",kernelFunc:ma},ba=Jn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:Vt,dtype:"bool"}),ya={kernelName:o.iZT,backendName:"webgl",kernelFunc:ba},wa=Jn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:Gt}),va={kernelName:o.Acj,backendName:"webgl",kernelFunc:wa};const ka={kernelName:o.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ks(r,!0,n)}},Ca=Qn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ia={kernelName:o.avt,backendName:"webgl",kernelFunc:Ca},$a=Qn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Sa={kernelName:o.iWB,backendName:"webgl",kernelFunc:$a},Ea=Qn({opSnippet:"return float(isnan(x));",dtype:"bool"}),Ta={kernelName:o.r7n,backendName:"webgl",kernelFunc:Ea},Ra=Jn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:zt,dtype:"bool"}),_a={kernelName:o.vtC,backendName:"webgl",kernelFunc:Ra},Na=Jn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:Ht,dtype:"bool"}),Aa={kernelName:o.CAk,backendName:"webgl",kernelFunc:Na};const Da={kernelName:o.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:o,num:s}=n,a=Xt(r,o,s);return t.makeTensorInfo([a.length],"float32",a)}},Oa=Qn({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:jt}),Fa={kernelName:o.ZbH,backendName:"webgl",kernelFunc:Oa},Ba=Qn({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),Pa={kernelName:o.kU,backendName:"webgl",kernelFunc:Ba},La=Jn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Wa={kernelName:o.PYm,backendName:"webgl",kernelFunc:La},Ma=Qn({opSnippet:"return float(!(x >= 1.0));"}),Ua={kernelName:o.VfG,backendName:"webgl",kernelFunc:Ma},Va=Jn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ga={kernelName:o.MZg,backendName:"webgl",kernelFunc:Va};class za{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[];const s=t,a=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${i};\n        setOutput(val);\n      }\n    `}}class Ha{constructor(e,t,n,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,a=e[3]-1;let i;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;i=.5===o?`inversesqrt(${u})`:1===o?`1.0/(${u})`:`exp(log(${u}) * float(-${o}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${i};\n        setOutput(result);\n      }\n    `}}const Xa={kernelName:o.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:u,beta:l}=r,c=(0,o.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ha(s.shape,a,i,u,l):new za(s.shape,a,i,u,l);return n.runWebGLProgram(c,[s],s.dtype)}};class ja{constructor(e,t,n,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=o,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${o})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${o});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Ka={kernelName:o.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:o,y:s,dy:a}=t,{depthRadius:i,bias:u,alpha:l,beta:c}=r,d=new ja(o.shape,i,u,l,c);return n.runWebGLProgram(d,[o,s,a],o.dtype)}};function qa(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,u=s.shape.length,l=o.D5U.parseAxisParam(a,s.shape);let c=l;const d=o.Wap.getAxesPermutation(c,u),h=null!=d,p=n.shouldExecuteOnCPU([s]);let f=s;if(h){if(p){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let n=0;n<t.length;n++)t[n]=s.shape[d[n]];const r=vn(e,s.shape,s.dtype,d,t);f=n.makeTensorInfo(t,s.dtype);n.texData.get(f.dataId).values=r}else f=gr(s,d,n);c=o.Wap.getInnerMostAxes(c.length,u)}o.Wap.assertAxesAreInnerMostDims("max",c,u);const[g,m]=o.Wap.computeOutAndReduceShapes(f.shape,c);let x,b=g;if(i&&(b=o.Wap.expandShapeToKeepDim(g,l)),p){const e=n.texData.get(f.dataId).values,t=Kt(e,o.D5U.sizeFromShape(m),b,s.dtype);x=n.makeTensorInfo(b,s.dtype);n.texData.get(x.dataId).values=t}else x=function(e,t,n,r){const s=o.D5U.sizeFromShape(t),a=ur({inputs:{x:e},attrs:{shape:[o.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=hr(a,e.dtype,"max",r),u=ur({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),u}(f,m,b,n);return h&&n.disposeIntermediateTensorInfo(f),x}const Ya={kernelName:o.YoZ,backendName:"webgl",kernelFunc:qa},Za=Jn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:qt}),Qa={kernelName:o.BMI,backendName:"webgl",kernelFunc:Za};const Ja={kernelName:o.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;W(s,"maxPool");const{filterSize:a,strides:i,pad:u,dimRoundingMode:l}=r;o.D5U.assert(o.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=o.Wap.computePool2DInfo(s.shape,a,i,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&o.D5U.arraysEqual(c.inShape,c.outShape))return Vn({inputs:{x:s},backend:n});const d=new Jr(c,"max",!1);return n.runWebGLProgram(d,[s],s.dtype)}};const ei={kernelName:o.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=o.Wap.computePool3DInfo(s.shape,a,i,[1,1,1],u,c,l),h=new eo(d,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class ti{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,s=e.effectiveFilterWidth,a=o-1-e.padInfo.top,i=s-1-e.padInfo.left,u=o*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ni{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,s=e.dilationHeight,a=e.dilationWidth,i=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=i-1-e.padInfo.front,d=u-1-e.padInfo.top,h=l-1-e.padInfo.left,p=i*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${i};\n           wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ri={kernelName:o.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=o.Wap.computePool3DInfo(i.shape,u,l,[1,1,1],c,d),p=new eo(h,"max",!0),f=n.runWebGLProgram(p,[i],i.dtype),g=new ni(h),m=n.runWebGLProgram(g,[s,f],i.dtype);return n.disposeIntermediateTensorInfo(f),m}};const oi={kernelName:o.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,u=a;W([a,i],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:h}=r,p=o.Wap.computePool2DInfo(u.shape,l,c,1,d,h),f=new Jr(p,"max",!0),g=n.runWebGLProgram(f,[u],u.dtype),m=new ti(p),x=n.runWebGLProgram(m,[s,g],u.dtype);return n.disposeIntermediateTensorInfo(g),x}};const si={kernelName:o.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:u}=t,l=n;o.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];o.D5U.assert(o.Wap.eitherStridesOrDilationsAreOne(a,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const d=o.Wap.computePool2DInfo(r.shape,s,a,c,i),[h,p]=function(e,t,n,r){let o=new Jr(n,"max",!1);const s=r.runWebGLProgram(o,[e],"float32");return o=new Jr(n,"max",!0,!0,t),[s,r.runWebGLProgram(o,[e],"float32")]}(r,u,d,l);return[h,p]}};const ai={kernelName:o.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,u=r.shape.length,l=o.D5U.parseAxisParam(a,r.shape);let c=l;const d=o.Wap.getAxesPermutation(c,u),h=null!=d,p=i.shouldExecuteOnCPU([r]),f=[];let g=r;if(h){if(p){const e=i.texData.get(g.dataId).values,t=new Array(u);for(let o=0;o<t.length;o++)t[o]=r.shape[d[o]];const n=vn(e,r.shape,r.dtype,d,t);g=i.makeTensorInfo(t,r.dtype);i.texData.get(g.dataId).values=n}else g=gr(r,d,i);f.push(g),c=o.Wap.getInnerMostAxes(c.length,u)}o.Wap.assertAxesAreInnerMostDims("sum",c,u);const[m,x]=o.Wap.computeOutAndReduceShapes(g.shape,c);let b=m;s&&(b=o.Wap.expandShapeToKeepDim(m,l));const y=function(e,t,n,r){const s=o.D5U.sizeFromShape(t),a=ur({inputs:{x:e},attrs:{shape:[o.D5U.sizeFromShape(e.shape)/s,s]},backend:r}),i=hr(a,"float32","mean",r),u=ur({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),u}(g,x,b,i);for(const o of f)i.disposeIntermediateTensorInfo(o);return y}};const ii={kernelName:o.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,u=s.shape.length,l=o.D5U.parseAxisParam(a,s.shape);let c=l;const d=o.Wap.getAxesPermutation(c,u);let h=s;null!=d&&(h=br({inputs:{x:s},backend:n,attrs:{perm:d}}),c=o.Wap.getInnerMostAxes(c.length,s.shape.length)),o.Wap.assertAxesAreInnerMostDims("min",c,u);const[p,f]=o.Wap.computeOutAndReduceShapes(h.shape,c),g=ur({inputs:{x:h},backend:n,attrs:{shape:[-1,o.D5U.sizeFromShape(f)]}}),m=hr(g,g.dtype,"min",n);let x;if(i){x=ur({inputs:{x:m},backend:n,attrs:{shape:o.Wap.expandShapeToKeepDim(p,l)}})}else x=ur({inputs:{x:m},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=d&&n.disposeIntermediateTensorInfo(h),x}},ui=Jn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:Yt}),li={kernelName:o.q8u,backendName:"webgl",kernelFunc:ui};class ci{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,o=(0,V.kW)(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${o} start = ${o}(${s});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${o} coords = outC - start;\n        setOutput(getX(${i}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class di{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,o=(0,V.kW)(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),i=In("rc",r),u=In("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${o} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${o} source = rc;\n        ${o} lt = ${o}(lessThan(source, start));\n        ${o} gte = ${o}(greaterThanEqual(source, end));\n        ${o} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${o} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${i[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${i[r-2]} += 1;\n        if(${i[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${i[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${o} start = ${o}(${s});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const hi={kernelName:o.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=(0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new di(r.shape,s,a):new ci(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},pi=Jn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),fi={kernelName:o.Vbg,backendName:"webgl",kernelFunc:pi};class gi{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const mi=Jn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),xi={kernelName:o.oHH,backendName:"webgl",kernelFunc:mi},bi="return a - b;",yi=Jn({opSnippet:bi,packedOpSnippet:bi,supportsComplex:!0,cpuKernelImpl:bn}),wi={kernelName:o.Tr8,backendName:"webgl",kernelFunc:yi};function vi(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=o.D5U.parseAxisParam([a],s.shape),u=qa({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=o.Wap.expandShapeToKeepDim(u.shape,i),c=ur({inputs:{x:u},backend:n,attrs:{shape:l}}),d=yi({inputs:{a:s,b:c},backend:n}),h=Ms({inputs:{x:d},backend:n}),p=mr({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),f=ur({inputs:{x:p},backend:n,attrs:{shape:l}}),g=mi({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}const ki={kernelName:o.Gcp,backendName:"webgl",kernelFunc:vi};const Ci={kernelName:o.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:o}=t,{numSamples:s,seed:a,normalized:i}=r,u=i?o:vi({inputs:{logits:o},backend:n,attrs:{dim:o.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new gi(l,c,s),h=[[a]],p=n.runWebGLProgram(d,[u],"int32",h);return i||n.disposeIntermediateTensorInfo(u),p}};const Ii={kernelName:o.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,o]=Qt(e.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,t)}let s;return s=(0,o.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new On(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new Nn(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},$i=o.GDt.GP;const Si={kernelName:o.uv1,backendName:"webgl",kernelFunc:function(e){o.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(s.dataId),d=n.readSync(a.dataId),{selectedIndices:h}=$i(c,d,i,u,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Ei=o.GDt.qP;const Ti={kernelName:o.cye,backendName:"webgl",kernelFunc:function(e){o.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,d=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:f}=Ei(d,h,i,u,l,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Ri=o.GDt.pA;const _i={kernelName:o.W0H,backendName:"webgl",kernelFunc:function(e){o.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,d=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,f=u,g=l,m=c,{selectedIndices:x,selectedScores:b}=Ri(d,h,p,f,g,m);return[n.makeTensorInfo([x.length],"int32",new Int32Array(x)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Ni{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Ai={kernelName:o.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{dtype:a,depth:i,onValue:u,offValue:l}=r,c=o.D5U.sizeFromShape(s.shape),d=new Ni(c,i,u,l),h=ur({inputs:{x:s},backend:n,attrs:{shape:[c]}}),p=n.runWebGLProgram(d,[h],a);n.disposeIntermediateTensorInfo(h);const f=ur({inputs:{x:p},backend:n,attrs:{shape:[...s.shape,i]}});return n.disposeIntermediateTensorInfo(p),f}};function Di(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=ko({inputs:{input:r},backend:n}),t=Di({inputs:{x:e},backend:n}),o=Po({inputs:{input:r},backend:n}),s=Di({inputs:{x:o},backend:n}),a=zn({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),a}return Zs({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Oi={kernelName:o.RuY,backendName:"webgl",kernelFunc:Di};const Fi={kernelName:o.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:o}=n;if("string"===o.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===o.dtype){const t=ko({inputs:{input:o},backend:r}),n=e({inputs:{x:t},backend:r}),s=Po({inputs:{input:o},backend:r}),a=Di({inputs:{x:s},backend:r}),i=zn({inputs:{real:n,imag:a},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(a),i}return Zs({attrs:{shape:o.shape,dtype:o.dtype,value:1},backend:r})}};const Bi={kernelName:o.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return Vs({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{o.D5U.assertShapesMatch(a,e.shape,"All tensors passed to stack must have matching shapes"),o.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Mo({inputs:t.map((e=>{const t=Vs({inputs:{input:e},backend:n,attrs:{dim:s}});return u.push(t),t})),backend:n,attrs:{axis:s}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class Pi{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,o=(0,V.kW)(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),i=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${o} start = ${o}(${s});\n      ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${o} coords = outC - start;\n          setOutput(getX(${i}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Li{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,o=(0,V.kW)(r),s=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),i=In("rc",r),u=In("source",r),l=`${i[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${o} rc = outputLoc;`,`${i[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${i[r-2]} += 1;\n       if(${i[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${i[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===r?2:4;f<g;f++)p+=`\n        ${d[f]}\n        if (${h}) {\n          result[${f}] = float(value);\n        } else {\n          ${o} source = rc - start;\n          result[${f}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${o} start = ${o}(${s});\n      const ${o} end = ${o}(${a});\n\n      void main() {\n        ${o} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Wi=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===o.D5U.sizeFromShape(s.shape)){return Zs({backend:n,attrs:{shape:a.map(((e,t)=>e[0]+s.shape[t]+e[1])),value:i,dtype:s.dtype}})}const u=(0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Li(s.shape,a,i):new Pi(s.shape,a,i),l=[[i]];return n.runWebGLProgram(u,[s],s.dtype,l)},Mi={kernelName:o.lyA,backendName:"webgl",kernelFunc:Wi},Ui=Jn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  \n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n\n  return result;\n"}),Vi={kernelName:o.pe_,backendName:"webgl",kernelFunc:Ui};const Gi={kernelName:o.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,u=s.shape.length,l=[],c=o.D5U.parseAxisParam(a,s.shape);let d=c;const h=o.Wap.getAxesPermutation(d,u);let p,f=s;if(null!=h&&(f=br({inputs:{x:s},backend:n,attrs:{perm:h}}),d=o.Wap.getInnerMostAxes(d.length,u),l.push(f)),o.Wap.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:o}=en(f.shape,f.dtype,e,d);p=n.makeTensorInfo(r,o,t)}else{const[e,t]=o.Wap.computeOutAndReduceShapes(f.shape,d),r=o.D5U.sizeFromShape(t),a=ur({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),i=hr(a,(0,o.z4k)(s.dtype),"prod",n);p=ur({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=o.Wap.expandShapeToKeepDim(p.shape,c);p=ur({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}};const zi={kernelName:o.dDz,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:o,paramsDenseValues:s,indices:a}=t,{outputRaggedRank:i}=r,u=o.map((e=>n.readSync(e.dataId))),l=o.map((e=>e.shape)),c=n.readSync(s.dataId),d=n.readSync(a.dataId),[h,p,f]=tn(u,l,c,s.shape,s.dtype,d,a.shape,i),g=h.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,s.dtype,p);return g.concat([m])}};const Hi={kernelName:o.BiW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{shape:o,values:s,defaultValue:a,rowPartitionTensors:i}=t,{rowPartitionTypes:u}=r,l=n.readSync(o.dataId),c=n.readSync(s.dataId),d=n.readSync(a.dataId),h=i.map((e=>n.readSync(e.dataId))),p=i.map((e=>e.shape)),[f,g]=nn(l,o.shape,c,s.shape,s.dtype,d,a.shape,h,p,u);return n.makeTensorInfo(f,s.dtype,g)}},Xi=e=>{const{backend:t,attrs:n}=e,{start:r,stop:o,step:s,dtype:a}=n,i=rn(r,o,s,a);return t.makeTensorInfo([i.length],a,i)},ji={kernelName:o.e6w,backendName:"webgl",kernelFunc:Xi},Ki=Qn({opSnippet:"return 1.0 / x;"}),qi={kernelName:o.$HU,backendName:"webgl",kernelFunc:Ki},Yi=Qn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Zi={kernelName:o.qkr,backendName:"webgl",kernelFunc:Yi},Qi=Qn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Ji={kernelName:o.SbG,backendName:"webgl",kernelFunc:Qi};class eu{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[s,a,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=o?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class tu{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=o?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const nu={kernelName:o._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:u}=r,[l,c]=u,d=(0,o.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tu(s.shape,l,c,a,i):new eu(s.shape,l,c,a,i);return n.runWebGLProgram(d,[s],"float32")}};class ru{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,s,a]=e,i=[n&&s>1?r-1:r,n&&a>1?o-1:o],u=[n&&s>1?s-1:s,n&&a>1?a-1:a],l=i[0]/u[0],c=i[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const ou={kernelName:o.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:s}=t,{alignCorners:a}=r,i=new ru(s.shape,o.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}};class su{constructor(e,t,n,r,o){this.variableNames=["A"],this.outputShape=[];const[s,a,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=o?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${i}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class au{constructor(e,t,n,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,a,i,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?a-1:a,r&&n>1?i-1:i],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=o?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${i}.0,\n                                     ${i}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const iu={kernelName:o.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:u}=r,[l,c]=u,d=(0,o.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new au(s.shape,l,c,a,i):new su(s.shape,l,c,a,i);return n.runWebGLProgram(d,[s],s.dtype)}};class uu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,s,a]=e,i=[n&&s>1?r-1:r,n&&a>1?o-1:o],u=[n&&s>1?s-1:s,n&&a>1?a-1:a],l=i[0]/u[0],c=i[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${i[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${i[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${o}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const lu={kernelName:o.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:o,dy:s}=t,{alignCorners:a}=r,i=new uu(s.shape,o.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}};class cu{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),o=(0,V.kW)(n);this.userCode=`\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class du{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=In("rc",n),o=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,a=(0,V.kW)(n);function i(n){const r=e.map(((r,o)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(o,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${o}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return i(e)}(r.slice())};\n          if(${o}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",i(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            if(${o}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",i(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const hu={kernelName:o.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,u=o.D5U.parseAxisParam(a,s.shape);if(0===i)return Vn({inputs:{x:s},backend:n});const l=(0,o.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new du(s.shape,u):new cu(s.shape,u);return n.runWebGLProgram(l,[s],s.dtype)}};class pu{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let o="";o="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${o}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const fu={kernelName:o.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,u=n,l=new pu(r.shape,a),[c,d]=o.Wap.getImageCenter(i,r.shape[1],r.shape[2]),h=[[c,d,Math.sin(s),Math.cos(s)]];return u.runWebGLProgram(l,[r],r.dtype,h)}},gu=Qn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),mu={kernelName:o.e07,backendName:"webgl",kernelFunc:gu},xu=Qn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:on}),bu={kernelName:o.bV0,backendName:"webgl",kernelFunc:xu};class yu{constructor(e,t,n,r,o,s,a=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const i=(0,V.kW)(o.length),u=(0,V.kW)(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${i} strides = ${i}(${o});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const wu={kernelName:o.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=o.Wap.calculateShapes(a,s,i),p=[h/c,c];if(0===h)return n.makeTensorInfo(i,s.dtype);const f=ur({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),g=ur({inputs:{x:a},backend:n,attrs:{shape:[l,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),x=new yu(l,u,f.shape.length,g.shape.length,d,p),b=n.runWebGLProgram(x,[g,f,m],g.dtype),y=ur({inputs:{x:b},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(m),y}};class vu{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===(0,o.OBj)().getNumber("WEBGL_VERSION")?"while (left < right) {":s,i="left"===r?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}const ku={kernelName:o.nr8,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sortedSequence:o,values:s}=t,{side:a}=r,i=new vu(o.shape[0],o.shape[1],s.shape[1],a),u=[[o.shape[1]]];return n.runWebGLProgram(i,[o,s],"int32",u)}};class Cu{constructor(e,t,n){let r,o;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)o="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],a=[];for(let r=0;r<t.length;r++)a.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),o=a.join()}const s=(0,V.kW)(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${o}));\n        } else {\n          setOutput(getB(${o}));\n        }\n      }\n    `}}const Iu={kernelName:o.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new Cu(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],(0,o.x8V)(s.dtype,a.dtype))}},$u=Qn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${o.Wap.SELU_SCALEALPHA};\n  float scale = ${o.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Su={kernelName:o.oFR,backendName:"webgl",kernelFunc:$u},Eu=Qn({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:an}),Tu={kernelName:o.a5O,backendName:"webgl",kernelFunc:Eu},Ru=Qn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),_u={kernelName:o.i5y,backendName:"webgl",kernelFunc:Ru},Nu=Qn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Au={kernelName:o.RQH,backendName:"webgl",kernelFunc:Nu},Du=Qn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Ou={kernelName:o.wYB,backendName:"webgl",kernelFunc:Du},Fu=Qn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Bu={kernelName:o.MRv,backendName:"webgl",kernelFunc:Fu},Pu={kernelName:o.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;o.D5U.assert(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let o=1+a.length;o<s.shape.length;++o)l.push([0,0]);const c=[],d=Wi({inputs:{x:s},backend:n,attrs:{paddings:l,constantValue:0}}),h=o.Wap.getReshaped(d.shape,a,u,!1),p=o.Wap.getPermuted(h.length,a.length,!1),f=o.Wap.getReshapedPermuted(d.shape,a,u,!1),g=ur({inputs:{x:d},backend:n,attrs:{shape:h}}),m=br({inputs:{x:g},backend:n,attrs:{perm:p}}),x=ur({inputs:{x:m},backend:n,attrs:{shape:f}});return c.push(d),c.push(g),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}};const Lu={kernelName:o.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:o,denseShape:s,defaultValue:a}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==o.shape.length)throw new Error(`Values must be a vector, saw:\n         ${o.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const i=n.readSync(r.dataId),u=n.readSync(o.dataId),l=n.readSync(s.dataId),c=n.readSync(a.dataId)[0],[d,h,p,f,g]=cn(i,r.shape,r.dtype,u,o.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],o.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}};const Wu={kernelName:o.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:o,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==o.shape.length)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const a=Array.from(n.readSync(o.dataId)),i=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=dn(i,r.shape,r.dtype,a,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};const Mu={kernelName:o.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:o,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${o.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const a=n.readSync(r.dataId),i=n.readSync(o.dataId),u=n.readSync(s.dataId),[l,c]=hn(a,r.shape,r.dtype,i,u,!0);return n.makeTensorInfo(c,r.dtype,l)}};const Uu={kernelName:o.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:o,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==o.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${o.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const a=n.readSync(r.dataId),i=n.readSync(o.dataId),u=n.readSync(s.dataId),[l,c]=hn(a,r.shape,r.dtype,i,u);return n.makeTensorInfo(c,r.dtype,l)}};const Vu={kernelName:o.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,sliceSize:d,strides:h,outputSize:p}=o.Wap.calculateShapes(a,s,u);if("string"===a.dtype){const e=n.bufferSync(s),t=n.bufferSync(a),r=o.D5U.decodeString(n.readSync(i.dataId)[0]),f=sn(e,t,u,p,d,c,l,h,r,false);return n.makeTensorInfo(u,f.dtype,f.values)}const f=new yu(c,l,s.shape.length,a.shape.length,h,[p,1],false),g=n.runWebGLProgram(f,[a,s,i],a.dtype),m=ur({inputs:{x:g},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(g),m}};const Gu={kernelName:o.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,u=o.D5U.parseAxisParam(i,s.shape)[0],l=o.Wap.prepareSplitSize(s,a,u),c=s.shape.length,d=new Array(c).fill(0),h=s.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=go({inputs:{x:s},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},zu="return sqrt(x);",Hu=Qn({opSnippet:zu,packedOpSnippet:zu,cpuKernelImpl:pn}),Xu={kernelName:o.FKq,backendName:"webgl",kernelFunc:Hu},ju=Qn({opSnippet:"return x * x;"}),Ku={kernelName:o.bK0,backendName:"webgl",kernelFunc:ju},qu="return (a - b) * (a - b);",Yu=Jn({opSnippet:qu,packedOpSnippet:qu}),Zu={kernelName:o._tC,backendName:"webgl",kernelFunc:Yu};const Qu={kernelName:o.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,o=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Nn(r.shape,o);return n.runWebGLProgram(s,[r],r.dtype)}};class Ju{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,o=(0,V.kW)(n.length),s=(0,V.kW)(n.length);let a="";if(1===r)a="coords * strides + begin";else{let e=0;a=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${o} begin = ${o}(${e});\n      ${o} strides = ${o}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}const el={kernelName:o.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:f,finalShape:g,isIdentity:m,sliceDim0:x,isSimpleSlice:b,begin:y,end:w,strides:v}=o.kuN.sliceInfo(s.shape,a,i,u,l,c,d,h,p);let k;if(m)k=ur({inputs:{x:s},backend:n,attrs:{shape:g}});else if(x||b){o.D5U.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=o.kuN.computeOutShape(y,w,v),t=go({inputs:{x:s},backend:n,attrs:{begin:y,size:e}});k=ur({inputs:{x:t},backend:n,attrs:{shape:g}}),n.disposeIntermediateTensorInfo(t)}else{if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=(0,o.f3b)(s.shape,s.dtype,e),r=fn(f,t,v,y);k=n.makeTensorInfo(g,s.dtype,r.values)}else{const e=new Ju(y,v,f);k=n.runWebGLProgram(e,[s],s.dtype)}}const C=ur({inputs:{x:k},backend:n,attrs:{shape:g}});return n.disposeIntermediateTensorInfo(k),C}};const tl={kernelName:o._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:o,nGramWidths:s,leftPad:a,rightPad:i,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,g]=gn(h,p,o,s,a,i,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",g)]}};const nl={kernelName:o.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:o}=r,{input:s,delimiter:a}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=n.readSync(s.dataId),u=n.readSync(a.dataId)[0],[l,c,d]=mn(i,u,o),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};const rl={kernelName:o.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:o}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(s.dataId),i=xn(a,o);return n.makeTensorInfo(s.shape,"int32",i)}},ol=Qn({opSnippet:"return tan(x);"}),sl={kernelName:o.sEM,backendName:"webgl",kernelFunc:ol},al=Qn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),il={kernelName:o.MIZ,backendName:"webgl",kernelFunc:al};class ul{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const r=(0,V.kW)(this.rank),o=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let o=0;o<e.length;o++)r.push(`imod(${n[o]}, ${e[o]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}function ll(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>o.D5U.decodeString(e))):e,r=(0,o.f3b)(s.shape,s.dtype,t),i=yn(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new ul(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const cl={kernelName:o.n9L,backendName:"webgl",kernelFunc:ll};class dl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class hl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function pl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function fl(e){let t=1;for(;t<e;)t*=2;return t}const gl={kernelName:o.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,u=(0,o.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,o.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=s.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([s])||d<u||a>l){const e=n.readSync(s.dataId),[t,r]=wn(e,c,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return c[c.length-1]=0,[n.makeTensorInfo(c,s.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[s,Zs({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,f=p?n.unpackTensor(s):s,g=o.D5U.sizeFromShape(c)/d,m=ur({inputs:{x:f},attrs:{shape:[g,d]},backend:n});p&&pl(n,f);const x=fl(a),b=fl(d);let y=null;const w=()=>null===y?[m,m]:[m,y],v=(e,t,r)=>{const o=w(),s=new dl(r),a=[[d],[null===y?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],i=y;y=n.runWebGLProgram(s,o,"int32",a),pl(n,i)};for(let o=1;o<x;o*=2){const e=2*o;for(let t=o;t>=1;t/=2)v(e,t,[g,b])}for(let o=b;o>x;o/=2){const e=w(),t=new hl([g,o/2]),r=[[d],[null===y?1:0],[x]],s=y;y=n.runWebGLProgram(t,e,"int32",r),pl(n,s);const a=x/2,i=2*a;for(let n=a;n>=1;n/=2)v(i,n,y.shape)}let k=y;y=go({inputs:{x:y},backend:n,attrs:{begin:0,size:[g,a]}}),pl(n,k);let C=ma({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});pl(n,m);const I=c.slice(0,-1);I.push(a),k=y,y=ur({inputs:{x:y},attrs:{shape:I},backend:n}),pl(n,k);const $=C;return C=ur({inputs:{x:C},attrs:{shape:I},backend:n}),pl(n,$),[C,y]}};class ml{constructor(e,t,n,r,o,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const a="nearest"===n?1:2;let i;switch(r){case"constant":i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4;break;default:i=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${o});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${o});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const xl={kernelName:o.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:o,transforms:s}=t,{interpolation:a,fillMode:i,fillValue:u,outputShape:l}=r,[c,d,h,p]=o.shape,[f,g]=null!=l?l:[d,h],m=new ml(d,h,a,i,u,[c,f,g,p]);return n.runWebGLProgram(m,[o,s],"float32")}};const bl={kernelName:o.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:o}=n,{x:s}=t;W(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=r.readSync(s.dataId),{outputValues:i,outputShape:u,indices:l}=kn(a,o,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,i),r.makeTensorInfo([l.length],"int32",l)]}};const yl={kernelName:o.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:o}=t;let{axis:s}=r;s<0&&(s+=o.shape.length);const a=o,i=a.shape.length,u=o.shape[s],l=new Array(i-1);let c=0;for(let g=0;g<i;g++)g!==s&&(l[c++]=a.shape[g]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[s]=1;const f=new Array(u);for(let g=0;g<f.length;g++){h[s]=g;const e=go({inputs:{x:a},backend:n,attrs:{begin:h,size:p}}),t=ur({inputs:{x:e},backend:n,attrs:{shape:l}});f[g]=t,d.push(e)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class wl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,o=e.inSize,s=e.numSegments,a=s*Math.ceil(o/n);this.outputShape=[r,a];const i=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";o%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return initializationValue;\n        }\n      `);let d="";o%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const vl=[vr,Cr,$r,Er,_r,Dr,Or,Fr,Ur,Vr,zr,Xr,Kr,Yr,Qr,to,no,so,ao,io,co,xo,bo,yo,Io,Eo,_o,Hn,Do,Uo,qo,es,ts,ns,rs,os,as,us,cs,ms,xs,bs,ws,Cs,Ss,Es,Rs,Ns,As,Os,Fs,Ps,Ws,Us,Gs,Xs,qs,Qs,ea,ra,sa,ua,da,ha,fa,xa,ya,va,Gn,ka,Lo,Ia,Sa,Ta,Kn,_a,Aa,Da,Fa,Pa,Wa,Ua,Ga,Xa,Ka,Ya,Qa,Ja,ei,ri,oi,si,ai,ii,li,hi,fi,Ci,ir,Ii,Si,Ti,_i,vo,Ai,Fi,Bi,Mi,Vi,Zn,Gi,zi,Hi,ji,Co,xi,qi,Zi,Ji,lr,nu,ou,iu,lu,hu,fu,mu,bu,wu,ku,Iu,Su,Tu,_u,Au,Ou,mo,ki,Bu,Pu,Lu,Wu,Mu,Uu,Vu,Gu,Xu,Ku,Zu,Qu,el,tl,nl,rl,wi,xr,sl,il,cl,gl,xl,yr,bl,yl,{kernelName:o.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,u=s.shape.length,l=[];let c=0;const d=o.Wap.getAxesPermutation([c],u);let h=s;null!=d&&(h=br({inputs:{x:s},backend:n,attrs:{perm:d}}),l.push(h),c=o.Wap.getInnerMostAxes(1,u)[0]);const p=o.Wap.segment_util.computeOutShape(h.shape,c,i),f=o.D5U.sizeFromShape([h.shape[c]]),g=ur({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(g);const m=(0,o.z4k)(s.dtype),x=(e,t,r,s,a)=>{const i=e.shape[0],u=e.shape[1],c=o.Wap.segment_util.segOpComputeOptimalWindowSize(u,a),d=new wl({windowSize:c,inSize:u,batchSize:i,numSegments:a},t),h=n.compileAndRun(d,[e,r],s);if(l.push(h),h.shape[1]===a)return h;const p=Xi({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),f=ll({inputs:{x:p},backend:n,attrs:{reps:[u/c]}});l.push(p),l.push(f);return x(h,t,f,s,a)},b=ur({inputs:{x:x(g,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let y=b;if(null!=d){l.push(b);const e=o.Wap.getUndoAxesPermutation(d);y=br({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Oi];for(const kl of vl)(0,o.wCN)(kl)},8110:function(e,t,n){"use strict";n.d(t,{RW:function(){return o},Kn:function(){return s},al:function(){return a},ku:function(){return i},nc:function(){return u},ye:function(){return l}});var r=n(9185);function o(e,t,n="index"){const o=r.D5U.computeStrides(t);return o.map(((t,r)=>`${`int ${e[r]} = ${n} / ${t}`}; ${r===o.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function s(e,t,n="index"){const o=r.D5U.computeStrides(t);return o.map(((t,r)=>`${`int ${e[r]} = ${n} / outShapeStrides[${r}]`}; ${r===o.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function a(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),o=new Array(n-1);o[n-2]=r[n-1];for(let s=n-3;s>=0;--s)o[s]=`(${o[s+1]} * ${r[s+1]})`;return o}(e.map(((e,t)=>t)),t);return r.map(((t,o)=>`${`int ${e[o]} = ${n} / ${r[o]}`}; ${o===r.length-1?`int ${e[o+1]} = ${n} - ${e[o]} * ${r[o]}`:`index -= ${e[o]} * ${r[o]}`};`)).join("")}function i(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function u(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}const l="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n"},2073:function(e,t,n){"use strict";n.d(t,{JL:function(){return r},Zu:function(){return o}});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class o{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}readToGPU(e,t){return s("readToGPU")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,o){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,o=e.length,s=0,a=!1;for(;r<o;){s=r+(o-r>>>1);const i=n(t,e[s]);i>0?r=s+1:(o=s,a=!i)}return a?r:-r-1}(e,t,n||o)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function o(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,o){return u(e,t,n,r,o,0)}function a(e,t,n,r,o,s){return u(e,t,n,r,o,0,!1,s,!0)}function i(e,t,n,r,o,s){return u(e,t,n,r,o,s,!0)}function u(e,t,n,o,s,a,i=!1,u=!1,h=!1){const p=[];for(let r=0;r<t.length;r++)t[r]>s&&p.push({score:t[r],boxIndex:r,suppressBeginIndex:0});p.sort(d);const f=a>0?-.5/a:0,g=[],m=[];for(;g.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let u=!1;for(let r=g.length-1;r>=i;--r){const n=l(e,a,g[r]);if(n>=o){u=!0;break}if(t.score=t.score*c(o,f,n),t.score<=s)break}t.suppressBeginIndex=g.length,u||(t.score===n?(g.push(a),m.push(t.score)):t.score>s&&r(p,t,d))}const x=g.length,b=n-x;u&&b>0&&(g.push(...new Array(b).fill(0)),m.push(...new Array(b).fill(0)));const y={selectedIndices:g};return i&&(y.selectedScores=m),h&&(y.validOutputs=x),y}function l(e,t,n){const r=e.subarray(4*t,4*t+4),o=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),a=Math.min(r[1],r[3]),i=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),h=Math.max(o[1],o[3]),p=(i-s)*(u-a),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const g=Math.max(s,l),m=Math.max(a,c),x=Math.min(i,d),b=Math.min(u,h),y=Math.max(x-g,0)*Math.max(b-m,0);return y/(p+f-y)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:function(){return s},qP:function(){return a},pA:function(){return i}})},8333:function(e,t,n){"use strict";n.d(t,{Z:function(){return o}});var r=n(2657);function o(e,t){const n=[];for(let r=0;r<t.length;r++)t[r]&&n.push(r);const o=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let r=0;r<n.length;r++){const t=o.indexToLoc(n[r]),a=r*e.length;s.values.set(t,a)}return s.toTensor()}},7097:function(e,t,n){"use strict";n.d(t,{BV:function(){return w},wv:function(){return y}});var r=n(2073),o=n(2885),s=n(5938),a=n(9121),i=n(6151),u=n(4706),l=n(9122),c=n(569);class d{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=l.now();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:l.now()-i})}if((0,o.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){const t=r[o];t.data().then((n=>{h(n,t.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:o,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],o,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let r=0;r<e.length;r++){const t=e[r];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,o,s){const a="number"===typeof r?c.oj(`${r}ms`,9):r.error,i=c.oj(e,25),u=t.rank,l=t.size,d=c.oj(t.shape.toString(),14);let h="";for(const c in o){const e=o[c];if(null!=e){const n=e.shape||t.shape,r=n.length;h+=`${c}: ${r}D ${r>0?n:""} `}}console.log(`%c${i}\t%c${a}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var f=n(4077),g=n(747);function m(e){return null!=e.kernelName}class x{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new x}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void(await this.setBackend(n))}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(u.Z(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new d(this.backendInstance),!0}setupRegisteredKernels(){(0,i.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,i.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(n){return u.Z(`Initialization of backend ${e} failed`),u.Z(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:o}=this.initializeBackend(n);if(o||r)return{name:n,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,o=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,o,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(r){throw t(),r}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=w.runKernel(a.iJz,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return w.runKernel(a.RFZ,t,n)}})),[],{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;if(!(null!=(0,i.pI)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let o=0;n.forEach((e=>{o+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=r-t-o-s;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),o=this.state.numBytes,s=this.state.numTensors;let a,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:o,attrs:s}=e;null==this.backendName&&this.backend;const l=(0,i.pI)(t,this.backendName);c.hu(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:o,attrs:s,backend:this.backend});const a=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const i=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){const e=this.getTensorsForGradient(t,o,i);n=this.saveTensorsForBackwardMode(e)}return i}}else{const{forwardFunc:t}=e,o=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,o)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=a()})),r&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,i.uk)(e);if(null!=r){const e=r.inputsToSave||[],o=r.outputsToSave||[];let s;r.saveAllInputs?(c.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const a=n.filter(((e,t)=>o[t]));return s.concat(a)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let o=e;"string"===n&&c.HD(e[0])&&(o=e.map((e=>l.encodeString(e))));const s=r.write(o,t,n),a=new f.es(t,n,s,this.nextTensorId());if(this.trackTensor(a,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,c.Ub)(o);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,r){const o={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:r,dtype:o}=e,s=new f.es(r,o,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const o=new f._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[o.name])throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof f._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,o,s){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:o},u=(0,i.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],o,s))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,g.Vu)(e),n=new Set(t.map((e=>e.id)));for(let o=0;o<this.state.activeScope.track.length;o++){const e=this.state.activeScope.track[o];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const o=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.hu(o instanceof f.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},o={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){const n=e[u],s=n.inputs;for(const e in s){const a=s[e];let i=!1;for(let e=0;e<t.length;e++)if(r[a.id]){n.outputs.forEach((e=>r[e.id]=!0)),i=!0,o[n.id]=!0;break}if(i)break}}const s={};s[n.id]=!0;const a={};for(let u=e.length-1;u>=0;u--){const t=e[u],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(s[t.outputs[e].id]){for(const e in n)s[n[e].id]=!0,a[t.id]=!0;break}}const i=[];for(let u=0;u<e.length;u++){const t=e[u];if(o[t.id]&&a[t.id]){const e={};for(const o in t.inputs){const n=t.inputs[o];r[n.id]&&(e[o]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,i.push(n)}}return i}(this.state.activeTape,t,o);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[o.id]=null==n?function(e){const t=(0,c.p8)((0,c.NA)(e),"float32");return w.makeTensor(t,e,"float32")}(o.shape):n,function(e,t,n,r){for(let o=t.length-1;o>=0;o--){const s=t[o],a=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const i=s.gradient(a);for(const t in s.inputs){if(!(t in i))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(i)}.`);const o=n((()=>i[t]()));if("float32"!==o.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${o.dtype}'`);const a=s.inputs[t];if(!c.cO(o.shape,a.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${o.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=o;else{const t=e[a.id];e[a.id]=r(t,o),t.dispose()}}}}(e,s,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:o,grads:r}}))}customGrad(e){return c.hu(c.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.hu(t.every((e=>e instanceof f.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,o)=>(n=e(...t,o),c.hu(n.value instanceof f.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.hu(c.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const o=n.gradFunc(e,r),s=Array.isArray(o)?o:[o];c.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.hu(s.every((e=>e instanceof f.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return s.forEach(((e,t)=>{a[t]=()=>e})),a},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new x;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,s.D)();if(null==e._tfengine){const t=new o.qA(e);e._tfengine=new b(t)}return(0,o.iG)(e._tfengine.ENV),(0,f.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const w=y();function v(e,t){const n={a:e,b:t};return w.runKernel(a.mm_,n)}},2885:function(e,t,n){"use strict";n.d(t,{qA:function(){return s},OB:function(){return i},iG:function(){return l}});var r=n(569);const o="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=a,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];i().getBool("IS_TEST")||i().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(o in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function a(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return u}let u=null;function l(e){u=e}},5938:function(e,t,n){"use strict";n.d(t,{D:function(){return s},R:function(){return a}});var r=n(4155);let o;function s(){if(null==o){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof r)e=r;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}o=e}return o}function a(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}},4368:function(e,t,n){"use strict";n.d(t,{SR:function(){return i},lu:function(){return u},B9:function(){return l},Cn:function(){return c},jq:function(){return d}});var r=n(7097),o=n(2885),s=n(4077),a=n(747);function i(){return r.BV}function u(e,t){return r.BV.tidy(e,t)}function l(e){(0,a.Vu)(e).forEach((e=>e.dispose()))}function c(e){return r.BV.keep(e)}function d(e,t,n=1){return r.BV.registerBackend(e,t,n)}(0,s.FZ)((function(e){(0,o.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}))},9185:function(e,t,n){"use strict";n.d(t,{SYM:function(){return Ke.SYM},VGw:function(){return Ke.VGw},SpW:function(){return Ke.SpW},mm_:function(){return Ke.mm_},Xze:function(){return Ke.Xze},oT6:function(){return Ke.oT6},IKK:function(){return Ke.IKK},sJF:function(){return Ke.sJF},aJk:function(){return Ke.aJk},M2y:function(){return Ke.M2y},qw7:function(){return Ke.qw7},jMg:function(){return Ke.jMg},QCc:function(){return Ke.QCc},Oyi:function(){return Ke.Oyi},JhU:function(){return Ke.JhU},_k9:function(){return Ke._k9},IMb:function(){return Ke.IMb},ROF:function(){return Ke.ROF},XLW:function(){return Ke.XLW},zws:function(){return Ke.zws},zvY:function(){return Ke.zvY},eEB:function(){return Ke.eEB},RFZ:function(){return Ke.RFZ},gJX:function(){return Ke.gJX},xnO:function(){return Ke.xnO},Zz9:function(){return Ke.Zz9},yj2:function(){return Ke.yj2},Eh3:function(){return Ke.Eh3},mhS:function(){return Ke.mhS},wUP:function(){return Ke.wUP},wm:function(){return Ke.wm},x12:function(){return Ke.x12},o2y:function(){return Ke.o2y},ik2:function(){return Ke.ik2},mc4:function(){return Ke.mc4},TR1:function(){return Ke.TR1},VcC:function(){return Ke.VcC},Byc:function(){return Ke.Byc},iHb:function(){return Ke.iHb},JLz:function(){return Mn.JL},QRR:function(){return Ke.QRR},T0n:function(){return Ke.T0n},cie:function(){return Ke.cie},sL$:function(){return Ke.sL$},y7R:function(){return Ke.y7R},$w:function(){return Ke.$w},p4S:function(){return Ke.p4S},$g6:function(){return Ke.$g6},SX0:function(){return Ke.SX0},HEU:function(){return Ke.HEU},hdR:function(){return Ke.hdR},Omj:function(){return Ke.Omj},NEP:function(){return Ke.NEP},YFo:function(){return Ke.YFo},Y0y:function(){return Ke.Y0y},vwp:function(){return Ke.vwp},deh:function(){return Ke.deh},Uyb:function(){return Ke.Uyb},OR:function(){return Ke.OR},jeX:function(){return Ke.jeX},eBW:function(){return Ke.eBW},sHE:function(){return Ke.sHE},_V0:function(){return Ke._V0},luS:function(){return Ke.luS},q1x:function(){return Ke.q1x},qi_:function(){return Ke.qi_},iZT:function(){return Ke.iZT},Acj:function(){return Ke.Acj},Qg5:function(){return Ke.Qg5},iJz:function(){return Ke.iJz},J_u:function(){return Ke.J_u},avt:function(){return Ke.avt},iWB:function(){return Ke.iWB},r7n:function(){return Ke.r7n},Zuw:function(){return Mn.Zu},eZ0:function(){return Ke.eZ0},Hhh:function(){return Ke.Hhh},J$2:function(){return Ke.J$2},vtC:function(){return Ke.vtC},CAk:function(){return Ke.CAk},e7N:function(){return Ke.e7N},ZbH:function(){return Ke.ZbH},kU:function(){return Ke.kU},PYm:function(){return Ke.PYm},VfG:function(){return Ke.VfG},MZg:function(){return Ke.MZg},YoZ:function(){return Ke.YoZ},mTV:function(){return Ke.mTV},OAf:function(){return Ke.OAf},OU7:function(){return Ke.OU7},OV7:function(){return Ke.OV7},vFR:function(){return Ke.vFR},BMI:function(){return Ke.BMI},q2K:function(){return Ke.q2K},c17:function(){return Ke.c17},q8u:function(){return Ke.q8u},jQs:function(){return Ke.jQs},Vbg:function(){return Ke.Vbg},NZg:function(){return Ke.NZg},wYn:function(){return Ke.wYn},kuV:function(){return Ke.kuV},uv1:function(){return Ke.uv1},cye:function(){return Ke.cye},W0H:function(){return Ke.W0H},yQU:function(){return Ke.yQU},we_:function(){return Ke.we_},qWM:function(){return Ke.qWM},QiL:function(){return Ke.QiL},lyA:function(){return Ke.lyA},pe_:function(){return Ke.pe_},o0g:function(){return Ke.o0g},DlI:function(){return Ke.DlI},dDz:function(){return Ke.dDz},BiW:function(){return Ke.BiW},e6w:function(){return Ke.e6w},xJR:function(){return Ke.xJR},oHH:function(){return Ke.oHH},$HU:function(){return Ke.$HU},qkr:function(){return Ke.qkr},SbG:function(){return Ke.SbG},HZH:function(){return Ke.HZH},_Yw:function(){return Ke._Yw},zbQ:function(){return Ke.zbQ},dpD:function(){return Ke.dpD},Hmb:function(){return Ke.Hmb},mKl:function(){return Ke.mKl},b9H:function(){return Ke.b9H},e07:function(){return Ke.e07},bV0:function(){return Ke.bV0},xQA:function(){return Ke.xQA},nr8:function(){return Ke.nr8},PhF:function(){return Ke.PhF},oFR:function(){return Ke.oFR},a5O:function(){return Ke.a5O},i5y:function(){return Ke.i5y},RQH:function(){return Ke.RQH},wYB:function(){return Ke.wYB},p2w:function(){return Ke.p2w},Gcp:function(){return Ke.Gcp},MRv:function(){return Ke.MRv},TQc:function(){return Ke.TQc},O3z:function(){return Ke.O3z},nhH:function(){return Ke.nhH},w3H:function(){return Ke.w3H},ZjV:function(){return Ke.ZjV},D2d:function(){return Ke.D2d},L8s:function(){return Ke.L8s},FKq:function(){return Ke.FKq},bK0:function(){return Ke.bK0},_tC:function(){return Ke._tC},h8e:function(){return Ke.h8e},jQk:function(){return Ke.jQk},_JP:function(){return Ke._JP},s1s:function(){return Ke.s1s},XkS:function(){return Ke.XkS},Tr8:function(){return Ke.Tr8},GBy:function(){return Ke.GBy},sEM:function(){return Ke.sEM},MIZ:function(){return Ke.MIZ},esB:function(){return $e.es},YDk:function(){return $e.YD},n9L:function(){return Ke.n9L},cWu:function(){return Ke.cWu},wx7:function(){return Ke.wx7},G3Y:function(){return Ke.G3Y},kpP:function(){return Ke.kpP},ToN:function(){return Ke.ToN},Qvg:function(){return Ke.Qvg},RuY:function(){return Ke.RuY},usg:function(){return Ke.usg},IHx:function(){return It.IHx},Wap:function(){return u},UFq:function(){return It.UFq},Jyw:function(){return je},Xhn:function(){return s},f3b:function(){return It.f3b},pju:function(){return It.pju},iUl:function(){return It.iUl},d9v:function(){return It.d9v},zoF:function(){return It.zoF},C2$:function(){return r},B90:function(){return $t.B9},hiC:function(){return It.hiC},SRH:function(){return $t.SR},OBj:function(){return g.OB},Qqt:function(){return It.Qqt},dt4:function(){return It.dt4},BHj:function(){return It.BHj},io:function(){return o},CnY:function(){return $t.Cn},GDt:function(){return l},dC7:function(){return It.dC7},glt:function(){return Et},jqO:function(){return $t.jq},wCN:function(){return qe.wC},XLQ:function(){return It.XLQ},iD$:function(){return It.iD$},XD2:function(){return It.XD2},tPi:function(){return It.tPi},kuN:function(){return a},L9e:function(){return It.L9e},knu:function(){return It.knu},luU:function(){return It.luU},z4k:function(){return Ct.z4},XeE:function(){return It.XeE},RRF:function(){return It.RRF},odF:function(){return It.odF},lub:function(){return $t.lu},HHK:function(){return It.HHK},x8V:function(){return Ct.x8},D5U:function(){return kt},lls:function(){return It.lls}});var r={};n.r(r),n.d(r,{isBrowser:function(){return f},isMobile:function(){return p},mockIsMobile:function(){return h}});var o={};n.r(o),n.d(o,{browserFiles:function(){return _e},browserHTTPRequest:function(){return We},concatenateArrayBuffers:function(){return T},copyModel:function(){return fe},decodeWeights:function(){return I},encodeWeights:function(){return C},fromMemory:function(){return Ge},fromMemorySync:function(){return ze},getLoadHandlers:function(){return M},getModelArtifactsForJSON:function(){return A},getModelArtifactsForJSONSync:function(){return N},getModelArtifactsInfoForJSON:function(){return D},getSaveHandlers:function(){return W},getWeightSpecs:function(){return O},http:function(){return Le},isHTTPScheme:function(){return Be},listModels:function(){return he},loadWeights:function(){return De},moveModel:function(){return ge},registerLoadRouter:function(){return L},registerSaveRouter:function(){return P},removeModel:function(){return pe},weightsLoaderFactory:function(){return Oe},withSaveHandler:function(){return He},withSaveHandlerSync:function(){return Xe}});var s={};n.r(s),n.d(s,{fromPixels:function(){return ot},fromPixelsAsync:function(){return nt},toPixels:function(){return rt}});var a={};n.r(a),n.d(a,{assertParamsValid:function(){return st},computeFlatOffset:function(){return bt},computeOutShape:function(){return it},getNormalizedAxes:function(){return dt},isSliceContinous:function(){return xt},maskToAxes:function(){return at},parseSliceParams:function(){return yt},sliceInfo:function(){return wt},startForAxis:function(){return gt},startIndicesWithElidedDims:function(){return ht},stopForAxis:function(){return mt},stopIndicesWithElidedDims:function(){return pt},stridesForAxis:function(){return ft},stridesWithElidedDims:function(){return ut}});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:function(){return Fn},computeOutShape:function(){return On},segOpComputeOptimalWindowSize:function(){return Dn}});var u={};n.r(u),n.d(u,{ERF_A1:function(){return Zt},ERF_A2:function(){return Qt},ERF_A3:function(){return Jt},ERF_A4:function(){return en},ERF_A5:function(){return tn},ERF_P:function(){return Yt},PARALLELIZE_THRESHOLD:function(){return Lt},RowPartitionType:function(){return Nt},SELU_SCALE:function(){return qt},SELU_SCALEALPHA:function(){return Kt},applyActivation:function(){return Dt.QH},assertAndGetBroadcastShape:function(){return je.assertAndGetBroadcastShape},assertAxesAreInnerMostDims:function(){return Tt.lB},assertParamsConsistent:function(){return Rt},assignToTypedArray:function(){return ln},axesAreInnerMostDims:function(){return Tt.YB},calculateShapes:function(){return jt.SU},checkEinsumDimSizes:function(){return mn},checkPadOnDimRoundingMode:function(){return At.m},combineLocations:function(){return Tt.Vh},combineRaggedTensorToTensorShapes:function(){return Ot},complexWithEvenIndex:function(){return sn},complexWithOddIndex:function(){return an},computeConv2DInfo:function(){return At.Ix},computeConv3DInfo:function(){return At.jw},computeDefaultPad:function(){return At.aO},computeDilation2DInfo:function(){return At.Rf},computeOptimalWindowSize:function(){return Wt},computeOutAndReduceShapes:function(){return Tt.kz},computeOutShape:function(){return _t},computePool2DInfo:function(){return At.Xw},computePool3DInfo:function(){return At.pl},convertConv2DDataFormat:function(){return At.sl},decodeEinsumEquation:function(){return fn},eitherStridesOrDilationsAreOne:function(){return At.jT},expandShapeToKeepDim:function(){return Tt.rv},exponent:function(){return dn},exponents:function(){return cn},fromStringArrayToUint8:function(){return Pn},fromUint8ToStringArray:function(){return Bn},getAxesPermutation:function(){return Tt.Q3},getBroadcastDims:function(){return je.getBroadcastDims},getComplexWithIndex:function(){return un},getEinsumComputePath:function(){return xn},getEinsumPermutation:function(){return gn},getFusedBiasGradient:function(){return Dt.pf},getFusedDyActivation:function(){return Dt.Fr},getImageCenter:function(){return Mt},getInnerMostAxes:function(){return Tt.sY},getPermuted:function(){return Vt},getRaggedRank:function(){return Bt},getReductionAxes:function(){return je.getReductionAxes},getReshaped:function(){return Ut},getReshapedPermuted:function(){return Gt},getRowPartitionTypesHelper:function(){return Ft},getSliceBeginCoords:function(){return zt},getSliceSize:function(){return Ht},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return vn},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return kn},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return Cn},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return Sn},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Tn},getSparseReshapeInputOutputMultipleErrorMessage:function(){return En},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return In},getSparseReshapeNegativeOutputDimErrorMessage:function(){return $n},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return An},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return Rn},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return _n},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return Nn},getUndoAxesPermutation:function(){return Tt.LJ},isIdentityPermutation:function(){return bn},log:function(){return nn.c},mergeRealAndImagArrays:function(){return rn},prepareAndValidate:function(){return Xt},prepareSplitSize:function(){return wn},segment_util:function(){return i},shouldFuse:function(){return Dt.uy},slice_util:function(){return a},splitRealAndImagArrays:function(){return on},tupleValuesAreOne:function(){return At.I0},upcastType:function(){return Ct.x8},validateDefaultValueShape:function(){return Pt},validateInput:function(){return jt.b0},validateUpdateShape:function(){return jt.l5},warn:function(){return nn.Z}});var l={};n.r(l),n.d(l,{GP:function(){return Ln.GP},qP:function(){return Ln.qP},pA:function(){return Ln.pA},ZA:function(){return Wn.Z}});var c=n(7097);let d;function h(e){d=e}function p(e){if(void 0!==d)return d;if(e||"undefined"!==typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function f(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}var g=n(2885),m=n(4155);const x=(0,g.OB)();x.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),x.registerFlag("IS_BROWSER",(()=>f())),x.registerFlag("IS_NODE",(()=>"undefined"!==typeof m&&"undefined"!==typeof m.versions&&"undefined"!==typeof m.versions.node)),x.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),x.registerFlag("PROD",(()=>!1)),x.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>x.getBool("DEBUG"))),x.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),x.registerFlag("IS_TEST",(()=>!1)),x.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),x.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),x.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1)),x.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),x.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var b=n(1661),y=n(701),w=n(569);const v={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};var k=n(8764).Buffer;async function C(e,t){const n=[],r=[],o=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<o.length;++s){const a=o[s],i=Array.isArray(e)?e[s].tensor:e[a];if("float32"!==i.dtype&&"int32"!==i.dtype&&"bool"!==i.dtype&&"string"!==i.dtype&&"complex64"!==i.dtype)throw new Error(`Unsupported dtype in weight '${a}': ${i.dtype}`);const u={name:a,shape:i.shape,dtype:i.dtype};if("string"===i.dtype){const e=new Promise((async e=>{const t=await i.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let o=0;for(let s=0;s<t.length;s++){const e=t[s],n=new Uint8Array(new Uint32Array([e.length]).buffer);r.set(n,o),o+=4,r.set(e,o),o+=e.length}e(r)}));r.push(e)}else r.push(i.data());null!=t&&(u.group=t),n.push(u)}return{data:$(await Promise.all(r)),specs:n}}function I(e,t){const n={};let r,o=0;for(const s of t){const t=s.name,a=s.dtype,i=s.shape,u=(0,w.NA)(i);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==a)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${a}.`)}const i=v[n.dtype],c=e.slice(o,o+u*i),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===a)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=F()),l=r(d)}else{if("int32"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}o+=u*i}else if("string"===a){const t=(0,w.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(o,o+4))[0];o+=4;const n=new Uint8Array(e.slice(o,o+t));l.push(n),o+=t}}else{const r=v[a],s=e.slice(o,o+u*r);if("float32"===a)l=new Float32Array(s);else if("int32"===a)l=new Int32Array(s);else if("bool"===a)l=new Uint8Array(s);else{if("complex64"!==a)throw new Error(`Unsupported dtype in weight '${t}': ${a}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const o=(0,y.X)(e,i,"float32"),a=(0,y.X)(r,i,"float32");n[t]=(0,b.P)(o,a),o.dispose(),a.dispose()}}o+=u*r}"complex64"!==a&&(n[t]=(0,y.X)(l,i,a))}return n}function $(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let o=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),o),o+=e.byteLength})),r.buffer}const S="undefined"!==typeof k&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function E(e){return S?k.byteLength(e):new Blob([e]).size}function T(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function R(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function _(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function N(e,t,n){const r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(r.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),r}async function A(e,t){let n,r;return null!=e.weightsManifest&&([n,r]=await t(e.weightsManifest)),N(e,n,r)}function D(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:E(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:E(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function O(e){const t=[];for(const n of e)t.push(...n.weights);return t}function F(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0===(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const o=new ArrayBuffer(4*r.length),s=new Uint32Array(o);for(let a=0;a<r.length;a++){const o=r[a],i=e[n[o>>10]+(1023&o)]+t[o>>10];s[a]=i}return new Float32Array(o)}}class B{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==B.instance&&(B.instance=new B),B.instance}static registerSaveRouter(e){B.getInstance().saveRouters.push(e)}static registerLoadRouter(e){B.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return B.getHandlers(e,"save")}static getLoadHandlers(e,t){return B.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?B.getInstance().loadRouters:B.getInstance().saveRouters).forEach((t=>{const o=t(e,n);null!==o&&r.push(o)})),r}}const P=e=>B.registerSaveRouter(e),L=e=>B.registerLoadRouter(e),W=e=>B.getSaveHandlers(e),M=(e,t)=>B.getLoadHandlers(e,t),U="tensorflowjs",V="models_store",G="model_info_store";function z(){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function H(e){const t=e.result;t.createObjectStore(V,{keyPath:"modelPath"}),t.createObjectStore(G,{keyPath:"modelPath"})}class X{constructor(e){if(this.indexedDB=z(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const o=r.result;if(null==t){const t=o.transaction(V,"readonly"),r=t.objectStore(V).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return o.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(o.close(),n(r.error)),t.oncomplete=()=>o.close()}else{const r=D(t),s=o.transaction(G,"readwrite");let a=s.objectStore(G);const i=a.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;i.onsuccess=()=>{u=o.transaction(V,"readwrite");const i=u.objectStore(V).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});i.onsuccess=()=>e({modelArtifactsInfo:r}),i.onerror=e=>{a=s.objectStore(G);const t=a.delete(this.modelPath);t.onsuccess=()=>(o.close(),n(i.error)),t.onerror=e=>(o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}}},r.onerror=e=>n(r.error)}))}}X.URL_SCHEME="indexeddb://";const j=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(X.URL_SCHEME)?(t=e.slice(X.URL_SCHEME.length),new X(t)):null;var t};B.registerSaveRouter(j),B.registerLoadRouter(j);class K{constructor(){this.indexedDB=z()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(U,1);n.onupgradeneeded=()=>H(n),n.onsuccess=()=>{const r=n.result,o=r.transaction(G,"readonly"),s=o.objectStore(G).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),o.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(X.URL_SCHEME)?t.slice(X.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(U,1);r.onupgradeneeded=()=>H(r),r.onsuccess=()=>{const o=r.result,s=o.transaction(G,"readwrite"),a=s.objectStore(G),i=a.get(e);let u;i.onsuccess=()=>{if(null==i.result)return o.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=a.delete(e),s=()=>{u=o.transaction(V,"readwrite");const r=u.objectStore(V).delete(e);r.onsuccess=()=>t(i.result.modelArtifactsInfo),r.onerror=e=>n(i.error)};r.onsuccess=s,r.onerror=e=>(s(),o.close(),n(i.error))}},i.onerror=e=>(o.close(),n(i.error)),s.oncomplete=()=>{null==u?o.close():u.oncomplete=()=>o.close()}},r.onerror=e=>n(r.error)}))}}const q="/",Y="tensorflowjs_models",Z="info",Q="model_topology",J="weight_specs",ee="weight_data",te="model_metadata";function ne(e){return{info:[Y,e,Z].join(q),topology:[Y,e,Q].join(q),weightSpecs:[Y,e,J].join(q),weightData:[Y,e,ee].join(q),modelMetadata:[Y,e,te].join(q)}}function re(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function oe(e){const t=e.split(q);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(q)}class se{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ne(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),r=JSON.stringify(e.weightSpecs),o=D(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,r),this.LS.setItem(this.keys.weightData,function(e){if(S)return k.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let r=0,o=t.length;r<o;r++)n+=String.fromCharCode(t[r]);return btoa(n)}(e.weightData));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:o}}catch(t){throw re(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(null!=o){const e=JSON.parse(o);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(S){const t=k.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}(s),t}}se.URL_SCHEME="localstorage://";const ae=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(se.URL_SCHEME)?(t=e.slice(se.URL_SCHEME.length),new se(t)):null;var t};B.registerSaveRouter(ae),B.registerLoadRouter(ae);class ie{constructor(){(0,w.hu)((0,g.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,w.hu)("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Y+q,n=q+Z;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(n)){e[oe(o)]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){var t;const n=ne(e=(t=e).startsWith(se.URL_SCHEME)?t.slice(se.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return re(n),r}}const ue="://";class le{constructor(){this.managers={}}static getInstance(){return null==le.instance&&(le.instance=new le),le.instance}static registerManager(e,t){(0,w.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(ue)&&(e=e.slice(0,e.indexOf(ue))),(0,w.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=le.getInstance();(0,w.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=le.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(le.getInstance().managers)}}function ce(e){if(-1===e.indexOf(ue))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${le.getSchemes().join(",")}`);return{scheme:e.split(ue)[0],path:e.split(ue)[1]}}async function de(e,t,n=!1){(0,w.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=B.getLoadHandlers(e);(0,w.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,w.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const o=r[0],s=B.getSaveHandlers(t);(0,w.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,w.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const a=s[0],i=ce(e).scheme,u=ce(e).path,l=i===ce(e).scheme,c=await o.load();n&&l&&await le.getManager(i).removeModel(u);const d=await a.save(c);return n&&!l&&await le.getManager(i).removeModel(u),d.modelArtifactsInfo}async function he(){const e=le.getSchemes(),t={};for(const n of e){const e=await le.getManager(n).listModels();for(const r in e){t[n+ue+r]=e[r]}}return t}async function pe(e){const t=ce(e);return le.getManager(t.scheme).removeModel(t.path)}async function fe(e,t){return de(e,t,!1)}async function ge(e,t){return de(e,t,!0)}class me{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){window&&(0,g.OB)().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}}if((0,g.OB)().get("IS_BROWSER")){(0,g.OB)().setPlatform("browser",new me);try{le.registerManager(se.URL_SCHEME,new ie)}catch(Un){}try{le.registerManager(X.URL_SCHEME,new K)}catch(Un){}}var xe=n(4155);const be=()=>n(5410);let ye;class we{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,g.OB)().global.fetch?(0,g.OB)().global.fetch(e,t):(null==ye&&(ye=be()),ye(e,t))}now(){const e=xe.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}(0,g.OB)().get("IS_NODE")&&!(0,g.OB)().get("IS_BROWSER")&&(0,g.OB)().setPlatform("node",new we);var ve=n(2657),ke=n(2271),Ce=n(8723),Ie=n(9798),$e=n(4077);(0,c.wv)();const Se={buffer:ve.f,cast:ke.p,clone:Ce.d,print:Ie.S};(0,$e.Vp)(Se);function Ee(e){return new Promise((e=>setTimeout(e))).then(e)}class Te{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Te.URL_SCHEME)&&(e=e.slice(Te.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=_(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),o=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(o.download=this.modelJsonFileName,o.href=r,await Ee((()=>o.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ee((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:D(e)}}}}Te.URL_SCHEME="downloads://";class Re{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),o=r.modelTopology;if(null==o)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:o});const s=A(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const r=this.checkManifestAndWeightFiles(e),o=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(o).then((e=>[t,T(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const o=new FileReader;o.onload=e=>{const t=e.target.result;n(t)},o.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),o.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>R(e.name))),r={};for(const o of e)o.paths.forEach((e=>{const o=R(e);if(-1!==t.indexOf(o))throw new Error(`Duplicate file basename found in weights manifest: '${o}'`);if(t.push(o),-1===n.indexOf(o))throw new Error(`Weight file with basename '${o}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(o)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function _e(e){return new Re(e)}function Ne(e,t,n,r){!function(e){(0,w.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,w.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,w.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,w.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let o=0;return Promise.all(e.map((s=>(s.then((s=>{const a=n+ ++o/e.length*(r-n);return t(a),s})),s))))}async function Ae(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,g.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),o=(null==t.onProgress?await Promise.all(r):await Ne(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(o):await Ne(o,t.onProgress,.5,1)}async function De(e,t="",n,r){return Oe((e=>Ae(e,{requestInit:r})))(e,t,n)}function Oe(e){return async(t,n="",r)=>{const o=t.map((()=>!1)),s={},a=null!=r?r.map((()=>!1)):[],i=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=v[u]*w.NA(e.shape),c=()=>{o[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),a[n]=!0)})):c(),i.push(e.name),n+=l}))})),!a.every((e=>e))){const e=r.filter(((e,t)=>!a[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${i.join(", ")}.`)}const u=o.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let t=0;t<n;t++)r+=c[h+t].byteLength;const o=new ArrayBuffer(r),a=new Uint8Array(o);let i=0;for(let t=0;t<n;t++){const e=new Uint8Array(c[h+t]);a.set(e,i),i+=e.byteLength}s[e].forEach((e=>{const t=I(o.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const n in t)d[n]=t[n]})),h+=n})),d}}B.registerSaveRouter((e=>(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Te.URL_SCHEME)?function(e="model"){return new Te(e)}(e.slice(Te.URL_SCHEME.length)):null));class Fe{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,w.hu)("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,g.OB)().platform.fetch,(0,w.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,w.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=_(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:D(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(o){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return A(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),o=n>t?e.substring(n):"";return[r+"/",o]}(t),o=this.weightPathPrefix||n,s=O(e),a=[],i=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?i.push(this.weightUrlConverter(e)):a.push(o+e+r);this.weightUrlConverter&&a.push(...await Promise.all(i));return[s,T(await Ae(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Be(e){return null!=e.match(Fe.URL_SCHEME_REGEX)}Fe.URL_SCHEME_REGEX=/^https?:\/\//;const Pe=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Be(e))):Be(e),n)return Le(e,t)}return null};function Le(e,t){return new Fe(e,t)}function We(e,t){return Le(e,t)}B.registerSaveRouter(Pe),B.registerLoadRouter(Pe);class Me{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}}class Ue{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}}class Ve{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}}function Ge(e,t,n,r){const o=arguments;return new Ve(ze(...o))}function ze(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new Me(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Me({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Me({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function He(e){return new Ue(e)}function Xe(e){return new Ue(e)}var je=n(2200),Ke=n(9121),qe=n(6151),Ye=n(3740),Ze=n(2668),Qe=n(9906);let Je;function et(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,o=!1,s=!1,a=!1,i=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)o=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);i=!0}if(null!=(0,qe.pI)(Ke.eBW,c.BV.backendName)){const n={pixels:e},r={numChannels:t};return c.BV.runKernel(Ke.eBW,n,r)}const[u,l]=o?[e.videoWidth,e.videoHeight]:[e.width,e.height];let d,h;if(a)d=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)d=e.data;else if(s||o||i){if(null==Je)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Je=new OffscreenCanvas(1,1).getContext("2d")}else Je=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Je.canvas.width=u,Je.canvas.height=l,Je.drawImage(e,0,0,u,l),d=Je.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(d);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=d[4*n+e]}const p=[l,u,t];return(0,Qe.w)(h,p,"int32")}function tt(e){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function nt(e,t=3){let n=null;if((0,g.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&tt(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(r){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return et(n,t)}async function rt(e,t){let n=(0,Ye._1)(e,"img","toPixels");if(!(e instanceof $e.es)){const e=n;n=(0,ke.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,o]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const a=await n.data(),i="float32"===n.dtype?255:1,u=new Uint8ClampedArray(o*r*4);for(let l=0;l<r*o;++l){const e=[0,0,0,255];for(let r=0;r<s;r++){const t=a[l*s+r];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===s?(e[0]=t*i,e[1]=t*i,e[2]=t*i):e[r]=t*i}const t=4*l;u[t+0]=Math.round(e[0]),u[t+1]=Math.round(e[1]),u[t+2]=Math.round(e[2]),u[t+3]=Math.round(e[3])}if(null!=t){t.width=o,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,o,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const ot=(0,Ze.op)({fromPixels_:et});function st(e,t,n){const r=e.shape.length;w.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),w.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let o=0;o<r;++o)w.hu(t[o]+n[o]<=e.shape[o],(()=>`Error in slice${r}D: begin[${o}] + size[${o}] (${t[o]+n[o]}) would overflow input.shape[${o}] (${e.shape[o]})`))}function at(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function it(e,t,n){const r=[];for(let o=0;o<e.length;o++)r[o]=Math.ceil((t[o]-e[o])/n[o]);return r}function ut(e,t,n,r){const o=[...e];for(let s=o.length;s<r.length;s++)o.push(1);for(let s=0;s<n;s++)0===s?o[t]=1:(o.splice(t,0,1),o.pop());return o}function lt(e,t,n){return n<=e?n:n-(t-1)}function ct(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function dt(e,t,n,r,o,s,a,i,u){const l=e.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=ht(a,u,l,r,e),d=pt(i,u,l,o,e),h=ut(s,u,l,e)}else for(let p=0;p<l;p++)c[p]=gt(a,r,s,e,p,u),d[p]=mt(i,o,s,e,p,u),h[p]=ft(s,p,u);return{begin:c,end:d,strides:h}}function ht(e,t,n,r,o){const s=[...o],a=ct(n,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=0;else{const o=lt(t,n,i);let a=r[o];e&1<<o&&(a=0),s[i]=a}return s}function pt(e,t,n,r,o){const s=[...o],a=ct(n,t);for(let i=0;i<s.length;i++)if(a.indexOf(i)>-1)s[i]=Number.MAX_SAFE_INTEGER;else{const o=lt(t,n,i);let a=r[o];e&1<<o&&(a=Number.MAX_SAFE_INTEGER),s[i]=a}for(let i=0;i<s.length;i++){const e=o[i];s[i]<0&&(s[i]+=e),s[i]=w.uZ(0,s[i],o[i])}return s}function ft(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function gt(e,t,n,r,o,s){let a=t[o];const i=n[o]||1;(e&1<<o||s&1<<o||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[o];return a<0&&(a+=u),a=w.uZ(0,a,u-1),a}function mt(e,t,n,r,o,s){let a=t[o];const i=n[o]||1;(e&1<<o||s&1<<o||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[o];return a<0&&(a+=u),a=i>0?w.uZ(0,a,u):w.uZ(-1,a,u-1),a}function xt(e,t,n){let r=n.length;for(let o=0;o<n.length;o++)if(n[o]>1){r=o;break}for(let o=r+1;o<n.length;o++)if(t[o]>0||n[o]!==e[o])return!1;return!0}function bt(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function yt(e,t,n){let r;const o=e.shape.length;let s;return r="number"===typeof t?[t,...new Array(o-1).fill(0)]:t.length<o?t.concat(new Array(o-t.length).fill(0)):t.slice(),r.forEach((e=>{w.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(o).fill(-1):"number"===typeof n?[n,...new Array(o-1).fill(-1)]:n.length<o?n.concat(new Array(o-n.length).fill(-1)):n,s=s.map(((t,n)=>t>=0?t:(w.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,s]}function wt(e,t,n,r,o,s,a,i,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:o,endMask:s,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:u};for(let b=0;b<d.dims;b++)c&&0!==(1<<b&i)&&d.numAddAxisAfterEllipsis++,1<<b&a&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const o=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<o;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,g=!0;const m=[],x=[];for(let b=0;b<e.length;++b){if(0===h.strides[b])throw Error(`strides[${b}] must be non-zero`);const t=!!(h.shrinkAxisMask&1<<b),n=e[b];if(-1===n){m.push(t?1:-1);continue}const r=[h.beginMask&1<<b,h.endMask&1<<b],o=[h.strides[b]>0?0:-1,h.strides[b]>0?n:n-1];if(t&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===h.strides[b];const s=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(t){const e=h.begin[b]<0?n+h.begin[b]:h.begin[b];if(h.begin[b]=e,h.end[b]=h.begin[b]+1,e<0||e>=n)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=vt(h.begin[b],0,h.strides[b],n,r,o),h.end[b]=vt(h.end[b],1,h.strides[b],n,r,o);const e=1===h.strides[b]&&0===h.begin[b]&&h.end[b]===n;p=p&&e,f=f&&(0===b&&1===h.strides[b]||e)}else p=p&&1===h.strides[b]&&s,f=f&&(0===b&&1===h.strides[b]||s);let a,i=!1;if(h.beginValid&&h.endValid?(a=h.end[b]-h.begin[b],i=!0):t?(a=1,i=!0):s&&n>=0&&(a=h.strides[b]<0?-n:n,i=!0),i){let e;e=0===a||a<0!==h.strides[b]<0?0:Math.trunc(a/h.strides[b])+(a%h.strides[b]!==0?1:0),m.push(e)}else m.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){const e=h.finalShapeGatherIndices[b];e>=0?x.push(m[e]):-2===e&&x.push(1)}return{finalShapeSparse:x.filter(((e,t)=>-2!==h.finalShapeGatherIndices[t])),finalShape:x,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:h.begin,end:h.end,strides:h.strides}}function vt(e,t,n,r,o,s){if(o[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var kt=n(9122),Ct=n(1221),It=n(8989),$t=n(4368);const St="undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e();function Et(){return new Promise((e=>St((()=>e()))))}var Tt=n(3591);function Rt(e,t){const n=e[0].length;e.forEach(((e,t)=>{w.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),w.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,o)=>{for(let s=0;s<n;s++)w.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${o}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${o}.`))}))}function _t(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Nt,At=n(2582),Dt=n(9323);function Ot(e,t,n){let r=new Array;if(null==n&&null==t)return r;if(null==t)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(null==n)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let o=1;o<n.length;++o){const s=n[o],a=r[r.length-n.length+o],i=r[a];if(s>=0)if(i>=0){if(i!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${o+e}] = ${s} but shape[${o+e}] = ${i}`)}else r[a]=s}return r}function Ft(e){const t={FIRST_DIM_SIZE:Nt.FIRST_DIM_SIZE,VALUE_ROWIDS:Nt.VALUE_ROWIDS,ROW_LENGTHS:Nt.ROW_LENGTHS,ROW_SPLITS:Nt.ROW_SPLITS,ROW_LIMITS:Nt.ROW_LIMITS,ROW_STARTS:Nt.ROW_STARTS},n=[];for(const r of e){if(!(r in t))break;n.push(t[r])}return n}function Bt(e){return 0===e.length?0:e[0]===Nt.FIRST_DIM_SIZE?e.length-1:e.length}function Pt(e,t){if(null==e||null==t)return;const n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let o=0;o<Math.min(n,r-1);++o){const n=e[o],r=t[o+1];if(n>=0&&r>=0&&1!==n&&n!==r)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${o-e.length}] = ${n} but ragged tensor input.flatValues.shape[${o-e.length}] = ${r}`)}}!function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Nt||(Nt={}));const Lt=30;function Wt(e){return e<=Lt?e:(0,w.jP)(e,Math.floor(Math.sqrt(e)))}function Mt(e,t,n){return[n*("number"===typeof e?e:e[0]),t*("number"===typeof e?e:e[1])]}function Ut(e,t,n,r=!0){let o=[];if(r)o=o.concat(t.slice(0)),o.push(e[0]/n),o=o.concat(e.slice(1));else{o=o.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)o=o.concat([e[r+1]/t[r],t[r]]);o=o.concat(e.slice(n+1))}return o}function Vt(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],o=[];for(let r=1;r<e;++r)r>=2*t+1||r%2===1?o.push(r):n.push(r);r.push(...n),r.push(0),r.push(...o)}return r}function Gt(e,t,n,r=!0){const o=[];r?o.push(e[0]/n):o.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?o.push(t[s-1]*e[s]):o.push(e[s]/t[s-1]):o.push(e[s]);return o}function zt(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Ht(e,t,n){const r=e.slice(0,1);for(let o=0;o<n;++o)r.push(e[o+1]-t[o][0]-t[o][1]);return r}function Xt(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,w.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const o=t.shape,s=o[o.length-1];let a=1;for(let d=0;d<o.length-1;++d)a*=o[d];const i=e.shape,u=o.slice();u.pop();let l=1;for(let d=s;d<n;++d)l*=i[d],u.push(i[d]);const c=[...(0,w.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,a,l,c]}var jt=n(3028);const Kt=1.7580993408473768,qt=1.0507009873554805,Yt=.3275911,Zt=.254829592,Qt=-.284496736,Jt=1.421413741,en=-1.453152027,tn=1.061405429;var nn=n(4706);function rn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function on(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function sn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=0;o<e.length;o+=4)n[Math.floor(o/4)]=e[o],r[Math.floor(o/4)]=e[o+1];return{real:n,imag:r}}function an(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let o=2;o<e.length;o+=4)n[Math.floor(o/4)]=e[o],r[Math.floor(o/4)]=e[o+1];return{real:n,imag:r}}function un(e,t){return{real:e[2*t],imag:e[2*t+1]}}function ln(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function cn(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let o=0;o<Math.ceil(e/2);o++){const s=(t?2:-2)*Math.PI*(o/e);n[o]=Math.cos(s),r[o]=Math.sin(s)}return{real:n,imag:r}}function dn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const hn="->",pn=/->/g;function fn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(pn,"").length)/hn.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,o]=e.split(hn);(0,w.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),a=s.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let d=0;d<o.length;++d){const e=o[d];if(!s.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===i.indexOf(e)&&i.push(e)}for(let d=0;d<r.length;++d){const e=r[d];-1===i.indexOf(e)&&","!==e&&i.push(e)}const u=new Array(s.length);for(let d=0;d<a;++d){if(new Set(s[d].split("")).size!==s[d].length)throw new Error(`Found duplicate axes in input component ${s[d]}. Support for duplicate axes in input is not implemented yet.`);u[d]=[];for(let e=0;e<s[d].length;++e)u[d].push(i.indexOf(s[d][e]))}const l=i.length,c=[];for(let d=o.length;d<l;++d)c.push(d);return{allDims:i,summedDims:c,idDims:u}}function gn(e,t){let n=new Array(e);n.fill(-1);for(let o=0;o<t.length;++o)n[t[o]]=o;const r=[];for(let o=0;o<e;++o)-1===n[o]&&r.push(o);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function mn(e,t,n){const r=new Array(e);for(let o=0;o<n.length;++o){const e=n[o].shape;for(let n=0;n<t[o].length;++n)void 0===r[t[o][n]]?r[t[o][n]]=e[n]:(0,w.hu)(r[t[o][n]]===e[n],(()=>`Expected dimension ${r[t[o][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function xn(e,t){const n=e,r=[];let o=0;0===e.length&&n.push(-1),o=e.length+1;for(let a=0;a<o;++a)r.push([]);const s=[];for(let a=0;a<n.length;++a){const e=yn(t,n[a]);for(const t of e)-1===s.indexOf(t)&&(r[a].push(t),s.push(t))}return{path:n,steps:r}}function bn(e){return e.every(((e,t)=>e===t))}function yn(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function wn(e,t,n=0){let r=[];if("number"===typeof t)(0,w.hu)(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const o=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,w.hu)(o<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,w.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function vn(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function kn(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function Cn(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function In(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function $n(e,t){return`size ${e} must be non-negative, not ${t}`}function Sn(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function En(e,t){return`Input to reshape is a SparseTensor with ${(0,w.NA)(e)}\n  dense values, but the requested shape requires a multiple of ${(0,w.NA)(t)}. inputShape=${e} outputShape= ${t}`}function Tn(e,t){return`Input to reshape is a tensor with ${(0,w.NA)(e)} dense values, but the requested shape has ${(0,w.NA)(t)}. inputShape=${e} outputShape=${t}`}function Rn(){return"segment ids must be >= 0"}function _n(){return"segment ids are not increasing"}function Nn(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function An(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Dn(e,t){let n,r=!1;for(e<=Lt?(n=e,r=!0):n=(0,w.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,w.jP)(e,n+1);return n}function On(e,t,n){const r=[],o=e.length;for(let s=0;s<o;s++)s!==t?r.push(e[s]):r.push(n);return r}function Fn(e,t,n,r){const o=t.shape.length,s=e.shape.length;if(0!==r&&(r<-o||r>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${r}`);if(r<0&&(r+=o),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);const a=e.shape[n],i=[];let u=1,l=1,c=1;for(let d=0;d<r;++d)i.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)i.push(e.shape[d]),l*=e.shape[d];for(let d=r;d<o;d++)i.push(t.shape[d]);for(let d=n+1;d<s;d++)i.push(e.shape[d]),c*=e.shape[d];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:a,outputShape:i}}function Bn(e){try{return e.map((e=>(0,kt.decodeString)(e)))}catch(Un){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${Un}`)}}function Pn(e){return e.map((e=>(0,kt.encodeString)(e)))}var Ln=n(3337),Wn=n(8333),Mn=n(2073)},9121:function(e,t,n){"use strict";n.d(t,{SYM:function(){return r},VGw:function(){return o},SpW:function(){return s},mm_:function(){return a},Xze:function(){return i},oT6:function(){return u},IKK:function(){return l},sJF:function(){return c},aJk:function(){return d},M2y:function(){return h},qw7:function(){return p},jMg:function(){return f},Oyi:function(){return g},QCc:function(){return m},JhU:function(){return x},ROF:function(){return b},_k9:function(){return y},IMb:function(){return w},XLW:function(){return v},zws:function(){return k},zvY:function(){return C},eEB:function(){return I},RFZ:function(){return $},gJX:function(){return S},xnO:function(){return E},Zz9:function(){return T},yj2:function(){return R},Eh3:function(){return _},mhS:function(){return N},wUP:function(){return A},wm:function(){return D},x12:function(){return O},o2y:function(){return F},ik2:function(){return B},mc4:function(){return P},TR1:function(){return L},Byc:function(){return W},iHb:function(){return M},VcC:function(){return U},QRR:function(){return V},T0n:function(){return G},cie:function(){return z},sL$:function(){return H},y7R:function(){return X},$w:function(){return j},p4S:function(){return K},oHH:function(){return q},$g6:function(){return Y},SX0:function(){return Z},HEU:function(){return Q},Omj:function(){return J},hdR:function(){return ee},NEP:function(){return te},YFo:function(){return ne},Y0y:function(){return re},vwp:function(){return oe},deh:function(){return se},Uyb:function(){return ae},OR:function(){return ie},jeX:function(){return ue},sHE:function(){return le},qi_:function(){return ce},q1x:function(){return de},iZT:function(){return he},Acj:function(){return pe},iJz:function(){return fe},Qg5:function(){return ge},J_u:function(){return me},avt:function(){return xe},iWB:function(){return be},r7n:function(){return ye},J$2:function(){return we},vtC:function(){return ve},CAk:function(){return ke},e7N:function(){return Ce},ZbH:function(){return Ie},kU:function(){return $e},PYm:function(){return Se},VfG:function(){return Ee},MZg:function(){return Te},eZ0:function(){return Re},Hhh:function(){return _e},YoZ:function(){return Ne},BMI:function(){return Ae},mTV:function(){return De},OV7:function(){return Oe},OAf:function(){return Fe},OU7:function(){return Be},vFR:function(){return Pe},q2K:function(){return Le},c17:function(){return We},q8u:function(){return Me},jQs:function(){return Ue},Vbg:function(){return Ve},NZg:function(){return Ge},wYn:function(){return ze},kuV:function(){return He},yQU:function(){return Xe},uv1:function(){return je},cye:function(){return Ke},W0H:function(){return qe},qWM:function(){return Ye},we_:function(){return Ze},QiL:function(){return Qe},lyA:function(){return Je},pe_:function(){return et},o0g:function(){return tt},DlI:function(){return nt},dDz:function(){return rt},BiW:function(){return ot},e6w:function(){return st},xJR:function(){return at},$HU:function(){return it},qkr:function(){return ut},HZH:function(){return lt},dpD:function(){return ct},Hmb:function(){return dt},_Yw:function(){return ht},zbQ:function(){return pt},SbG:function(){return ft},mKl:function(){return gt},e07:function(){return mt},bV0:function(){return xt},xQA:function(){return bt},nr8:function(){return yt},PhF:function(){return wt},oFR:function(){return vt},p2w:function(){return kt},RQH:function(){return Ct},wYB:function(){return It},i5y:function(){return $t},a5O:function(){return St},MRv:function(){return Et},FKq:function(){return Tt},GBy:function(){return Rt},TQc:function(){return _t},L8s:function(){return Nt},Gcp:function(){return At},O3z:function(){return Dt},nhH:function(){return Ot},w3H:function(){return Ft},ZjV:function(){return Bt},D2d:function(){return Pt},_tC:function(){return Lt},bK0:function(){return Wt},jQk:function(){return Mt},_JP:function(){return Ut},s1s:function(){return Vt},XkS:function(){return Gt},Tr8:function(){return zt},sEM:function(){return Ht},MIZ:function(){return Xt},n9L:function(){return jt},cWu:function(){return Kt},wx7:function(){return qt},G3Y:function(){return Yt},kpP:function(){return Zt},ToN:function(){return Qt},Qvg:function(){return Jt},RuY:function(){return en},h8e:function(){return tn},eBW:function(){return nn},b9H:function(){return rn},usg:function(){return on},_V0:function(){return sn},luS:function(){return an}});const r="Abs",o="Acos",s="Acosh",a="Add",i="AddN",u="All",l="Any",c="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",g="Atanh",m="Atan2",x="AvgPool",b="AvgPoolGrad",y="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",C="Bincount",I="BroadcastArgs",$="Cast",S="Ceil",E="ClipByValue",T="Complex",R="ComplexAbs",_="Concat",N="Conv2D",A="Conv2DBackpropFilter",D="Conv2DBackpropInput",O="Conv3D",F="Conv3DBackpropFilterV2",B="Conv3DBackpropInputV2",P="Cos",L="Cosh",W="Cumprod",M="Cumsum",U="CropAndResize",V="DenseBincount",G="DepthToSpace",z="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",X="DepthwiseConv2dNativeBackpropInput",j="Diag",K="Dilation2D",q="RealDiv",Y="Einsum",Z="Elu",Q="EluGrad",J="Erf",ee="Equal",te="Exp",ne="ExpandDims",re="Expm1",oe="FFT",se="Fill",ae="FlipLeftRight",ie="Floor",ue="FloorDiv",le="FusedBatchNorm",ce="GatherV2",de="GatherNd",he="Greater",pe="GreaterEqual",fe="Identity",ge="IFFT",me="Imag",xe="IsFinite",be="IsInf",ye="IsNan",we="LeakyRelu",ve="Less",ke="LessEqual",Ce="LinSpace",Ie="Log",$e="Log1p",Se="LogicalAnd",Ee="LogicalNot",Te="LogicalOr",Re="LRN",_e="LRNGrad",Ne="Max",Ae="Maximum",De="MaxPool",Oe="MaxPoolGrad",Fe="MaxPool3D",Be="MaxPool3DGrad",Pe="MaxPoolWithArgmax",Le="Mean",We="Min",Me="Minimum",Ue="MirrorPad",Ve="Mod",Ge="Multinomial",ze="Multiply",He="Neg",Xe="NotEqual",je="NonMaxSuppressionV3",Ke="NonMaxSuppressionV4",qe="NonMaxSuppressionV5",Ye="OnesLike",Ze="OneHot",Qe="Pack",Je="PadV2",et="Pow",tt="Prelu",nt="Prod",rt="RaggedGather",ot="RaggedTensorToTensor",st="Range",at="Real",it="Reciprocal",ut="Relu",lt="Reshape",ct="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",ht="ResizeBilinear",pt="ResizeBilinearGrad",ft="Relu6",gt="Reverse",mt="Round",xt="Rsqrt",bt="ScatterNd",yt="SearchSorted",wt="Select",vt="Selu",kt="Slice",Ct="Sin",It="Sinh",$t="Sign",St="Sigmoid",Et="Softplus",Tt="Sqrt",Rt="Sum",_t="SpaceToBatchND",Nt="SplitV",At="Softmax",Dt="SparseFillEmptyRows",Ot="SparseReshape",Ft="SparseSegmentMean",Bt="SparseSegmentSum",Pt="SparseToDense",Lt="SquaredDifference",Wt="Square",Mt="StridedSlice",Ut="StringNGrams",Vt="StringSplit",Gt="StringToHashBucketFast",zt="Sub",Ht="Tan",Xt="Tanh",jt="Tile",Kt="TopK",qt="Transform",Yt="Transpose",Zt="Unique",Qt="Unpack",Jt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",on="_FusedMatMul",sn="FusedConv2D",an="FusedDepthwiseConv2D"},6151:function(e,t,n){"use strict";n.d(t,{pI:function(){return i},uk:function(){return u},tr:function(){return l},wC:function(){return c}});var r=n(5938),o=n(4706);const s=(0,r.R)("kernelRegistry",(()=>new Map)),a=(0,r.R)("gradRegistry",(()=>new Map));function i(e,t){const n=d(e,t);return s.get(n)}function u(e){return a.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:o}=t.next();if(r)break;const[s,a]=o,[i]=s.split("_");i===e&&n.push(a)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=d(t,n);s.has(r)&&o.Z(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e,t){return`${t}_${e}`}},4706:function(e,t,n){"use strict";n.d(t,{Z:function(){return o},c:function(){return s}});var r=n(2885);function o(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.warn(...e)}function s(...e){(0,r.OB)().getBool("IS_TEST")||(0,r.OB)().getBool("PROD")||console.log(...e)}},3591:function(e,t,n){"use strict";n.d(t,{YB:function(){return o},Vh:function(){return s},kz:function(){return a},rv:function(){return i},lB:function(){return u},Q3:function(){return l},LJ:function(){return c},sY:function(){return d}});var r=n(569);function o(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,o=[];let s=0,a=0;for(let i=0;i<r;i++)-1===n.indexOf(i)?o.push(e[s++]):o.push(t[a++]);return o}function a(e,t){const n=[],r=e.length;for(let o=0;o<r;o++)-1===t.indexOf(o)&&n.push(e[o]);return[n,t.map((t=>e[t]))]}function i(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(o(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(o(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},2200:function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let o=0;o<n;o++){const s=n-1-o,a=e[s]||1;(t[t.length-1-o]||1)>1&&1===a&&r.unshift(s)}return r}function o(e,t){const n=[];for(let r=0;r<t.length;r++){const o=e[e.length-r-1],s=t.length-r-1,a=t[s];(null==o||1===o&&a>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let o=0;o<r;o++){let r=e[e.length-o-1];null==r&&(r=1);let s=t[t.length-o-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.r(t),n.d(t,{getBroadcastDims:function(){return r},getReductionAxes:function(){return o},assertAndGetBroadcastShape:function(){return s}})},2657:function(e,t,n){"use strict";n.d(t,{f:function(){return s}});var r=n(4077),o=n(569);function s(e,t="float32",n){return t=t||"float32",o.Mu(e),new r.YD(e,t,n)}},2271:function(e,t,n){"use strict";n.d(t,{p:function(){return i}});var r=n(7097),o=n(9121),s=n(3740),a=n(569);const i=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!a.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const i={x:n},u={dtype:t};return r.BV.runKernel(o.RFZ,i,u)}})},8723:function(e,t,n){"use strict";n.d(t,{d:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(o.iJz,t)}})},1661:function(e,t,n){"use strict";n.d(t,{P:function(){return i}});var r=n(7097),o=n(9121),s=n(3740),a=n(569);const i=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),i=(0,s._1)(t,"imag","complex");a.k5(n.shape,i.shape,`real and imag shapes, ${n.shape} and ${i.shape}, must match in call to tf.complex().`);const u={real:n,imag:i};return r.BV.runKernel(o.Zz9,u)}})},2582:function(e,t,n){"use strict";n.d(t,{Rf:function(){return o},Xw:function(){return s},pl:function(){return a},Ix:function(){return i},jw:function(){return u},aO:function(){return l},I0:function(){return f},jT:function(){return g},sl:function(){return m},m:function(){return x}});var r=n(569);function o(e,t,n,r,o="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(o))}function s(e,t,n,r,o,s,a="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===a)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);d=[u,l,e[1],e[1]]}return i(e,d,n,r,o,s,!1,a)}function a(e,t,n,r,o,s,a="NDHWC"){const[i,l,c]=d(t);let h,p;if("NDHWC"===a)p="channelsLast",h=[i,l,c,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);p="channelsFirst",h=[i,l,c,e[1],e[1]]}return u(e,h,n,r,o,!1,p,s)}function i(e,t,n,r,o,s,a=!1,i="channelsLast"){let[u,d,f,g]=[-1,-1,-1,-1];if("channelsLast"===i)[u,d,f,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,d,f]=e}const[m,x,,b]=t,[y,w]=c(n),[v,k]=c(r),C=h(m,v),I=h(x,k),{padInfo:$,outHeight:S,outWidth:E}=function(e,t,n,r,o,s,a,i,u){let c,d,h;if("number"===typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const o=function(e,t,n,r,o){null==r&&(r=l(e,t,n));const s=e[0],a=e[1],i=p((s-t+2*r)/n+1,o),u=p((a-t+2*r)/n+1,o);return[i,u]}([t,n],s,r,e,i);d=o[0],h=o[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/o);const e=Math.max(0,(d-1)*r+s-t),i=Math.max(0,(h-1)*o+a-n),u=Math.floor(e/2),l=e-u,p=Math.floor(i/2);c={top:u,bottom:l,left:p,right:i-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-a+1)/o);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],g="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:g,right:m,type:0===l&&0===f&&0===g&&0===m?"VALID":"EXPLICIT"},d=p((t-s+l+f)/r+1,i),h=p((n-a+g+m)/o+1,i)}}return{padInfo:c,outHeight:d,outWidth:h}}(o,d,f,y,w,C,I,s,i),T=a?b*g:b;let R;return"channelsFirst"===i?R=[u,T,S,E]:"channelsLast"===i&&(R=[u,S,E,T]),{batchSize:u,dataFormat:i,inHeight:d,inWidth:f,inChannels:g,outHeight:S,outWidth:E,outChannels:T,padInfo:$,strideHeight:y,strideWidth:w,filterHeight:m,filterWidth:x,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function u(e,t,n,r,o,s=!1,a="channelsLast",i){let[u,c,f,g,m]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[u,c,f,g,m]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[u,m,c,f,g]=e}const[x,b,y,,w]=t,[v,k,C]=d(n),[I,$,S]=d(r),E=h(x,I),T=h(b,$),R=h(y,S),{padInfo:_,outDepth:N,outHeight:A,outWidth:D}=function(e,t,n,r,o,s,a,i,u,c,d){let h,f,g,m;if("number"===typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,o,s){null==o&&(o=l(e,t,r));const a=e[0],i=e[1],u=e[2],c=p((a-t+2*o)/r+1,s),d=p((i-t+2*o)/r+1,s),h=p((u-t+2*o)/r+1,s);return[c,d,h,n]}([t,n,r,1],i,1,o,e,d);f=s[0],g=s[1],m=s[2]}else if("same"===e){f=Math.ceil(t/o),g=Math.ceil(n/s),m=Math.ceil(r/a);const e=(f-1)*o+i-t,l=(g-1)*s+u-n,d=(m-1)*a+c-r,p=Math.floor(e/2),x=e-p,b=Math.floor(l/2),y=l-b,w=Math.floor(d/2);h={top:b,bottom:y,left:w,right:d-w,front:p,back:x,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-i+1)/o),g=Math.ceil((n-u+1)/s),m=Math.ceil((r-c+1)/a)}return{padInfo:h,outDepth:f,outHeight:g,outWidth:m}}(o,c,f,g,v,k,C,E,T,R,i),O=s?w*m:w;let F;return"channelsFirst"===a?F=[u,O,N,A,D]:"channelsLast"===a&&(F=[u,N,A,D,O]),{batchSize:u,dataFormat:a,inDepth:c,inHeight:f,inWidth:g,inChannels:m,outDepth:N,outHeight:A,outWidth:D,outChannels:O,padInfo:_,strideDepth:v,strideHeight:k,strideWidth:C,filterDepth:x,filterHeight:b,filterWidth:y,effectiveFilterDepth:E,effectiveFilterHeight:T,effectiveFilterWidth:R,dilationDepth:I,dilationHeight:$,dilationWidth:S,inShape:e,outShape:F,filterShape:t}}function l(e,t,n,r=1){const o=h(t,r);return Math.floor((e[0]*(n-1)-n+o)/2)}function c(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function d(e){return"number"===typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function f(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function g(e,t){return f(e)||f(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function x(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{r.hu(r.GN(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}},3233:function(e,t,n){"use strict";n.d(t,{p:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu","float32")};return r.BV.runKernel(o.SX0,t)}})},9323:function(e,t,n){"use strict";n.d(t,{Fr:function(){return f},pf:function(){return g},QH:function(){return m},uy:function(){return x}});var r=n(2200),o=n(3233),s=n(9133),a=n(4841),i=n(8151),u=n(7409),l=n(3582),c=n(4968),d=n(625),h=n(1901),p=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,a.d)(e,(0,h.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function g(e,t){let n=t;const o=r.getReductionAxes(e.shape,t.shape);return o.length>0&&(n=(0,p.S)(n,o)),(0,c.X)(n,e.shape)}function m(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,o.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,i.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,d.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const x=(e,t)=>!(e>0)||"linear"===t},9133:function(e,t,n){"use strict";n.d(t,{h:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},a={alpha:t};return r.BV.runKernel(o.J$2,n,a)}})},4841:function(e,t,n){"use strict";n.d(t,{d:function(){return i}});var r=n(7097),o=n(9121),s=n(747),a=n(3740);const i=(0,n(2668).op)({mul_:function(e,t){let n=(0,a._1)(e,"a","mul"),i=(0,a._1)(t,"b","mul");[n,i]=(0,s.T_)(n,i);const u={a:n,b:i};return r.BV.runKernel(o.wYn,u)}})},2668:function(e,t,n){"use strict";n.d(t,{z:function(){return s},op:function(){return a}});var r=n(7097),o=n(569);const s="__op";function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const i=(...e)=>{r.BV.startScope(n);try{const t=a(...e);return(0,o.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},8989:function(e,t,n){"use strict";n.d(t,{zvA:function(){return i.z},WnP:function(){return u},Khb:function(){return l},__u:function(){return c},IHx:function(){return h},QBD:function(){return f},$6P:function(){return g},YjB:function(){return m},NqF:function(){return x},vHJ:function(){return b},ZRM:function(){return y},VfV:function(){return w},z4N:function(){return v},fvJ:function(){return k},C80:function(){return C},wS1:function(){return E},uR5:function(){return T},zEQ:function(){return B},tgs:function(){return L},Dxk:function(){return W},JY5:function(){return M},p3b:function(){return U},E4h:function(){return P},yE8:function(){return V},anm:function(){return nr},XsQ:function(){return G},UFq:function(){return z},f3b:function(){return H.f},pju:function(){return I.p},mDi:function(){return X},iUl:function(){return K},d9v:function(){return R.d},PYB:function(){return q.P},zoF:function(){return _},gME:function(){return Y},Izb:function(){return Z},MNy:function(){return Q},ZaL:function(){return J},PAt:function(){return te},Tek:function(){return ee},bc:function(){return re},pdZ:function(){return oe},$QV:function(){return ae},mCk:function(){return ie},f9Y:function(){return ue},mew:function(){return hr},$Gn:function(){return le},zbp:function(){return ce},ppE:function(){return de},nTT:function(){return he},B10:function(){return pe},Ka3:function(){return fe},WmZ:function(){return ge},hiC:function(){return xe},NTj:function(){return ke},AKD:function(){return Ce},rvX:function(){return cr},WYO:function(){return Ie},pyx:function(){return $e.p},GRh:function(){return dr},DgJ:function(){return ye},qNN:function(){return Se},d2q:function(){return Pe},Qqt:function(){return Le},dt4:function(){return We},t$B:function(){return Me},iyy:function(){return Ve},kp_:function(){return Tn},hlL:function(){return j},GWj:function(){return Ge},qPi:function(){return me},imm:function(){return r},Iqj:function(){return ze},dbB:function(){return lr},pjt:function(){return He},brS:function(){return Xe},Sxn:function(){return Rn},asL:function(){return je},BHj:function(){return co},V3u:function(){return pr},wx0:function(){return _n},xVT:function(){return Ke},UWc:function(){return qe},i2d:function(){return Ye},hi7:function(){return Ze.h},d9m:function(){return Qe},zN1:function(){return Je},$r2:function(){return ho},SX3:function(){return et},G9k:function(){return tt},cM7:function(){return nt},Krr:function(){return rt},e_t:function(){return ut},CmS:function(){return ct},l_t:function(){return dt},HvI:function(){return ht},hJK:function(){return pt},K5V:function(){return ft},egP:function(){return gt},MB5:function(){return po},eab:function(){return bt},OI3:function(){return N},Fp7:function(){return Te},_sB:function(){return yt},YQQ:function(){return wt},Ip$:function(){return vt},gWQ:function(){return kt},J69:function(){return Ct},ry_:function(){return St},VV$:function(){return Re},LTh:function(){return Et},VdP:function(){return Tt},wQq:function(){return Rt},Gi7:function(){return _t},p_:function(){return sr},dC7:function(){return A.d},rq4:function(){return Nt},SJ_:function(){return At},W76:function(){return at},KOy:function(){return Be},Quu:function(){return Dt},lfX:function(){return Ot},iUs:function(){return $t},JpU:function(){return Ft},op:function(){return i.op},N2O:function(){return Bt},vku:function(){return Pt},pNR:function(){return Lt},koy:function(){return Wt},t1L:function(){return Mt},lGY:function(){return Ut},d_R:function(){return Gt},sQ3:function(){return _e},AL3:function(){return zt.A},S0v:function(){return Ht.S},WVs:function(){return Xt},$gW:function(){return jt},N89:function(){return Kt},TN_:function(){return qt},wzB:function(){return en},nGf:function(){return tn},ruB:function(){return nn},LGj:function(){return rn},w6H:function(){return on},kwC:function(){return sn},M25:function(){return an},UYe:function(){return un.U},btT:function(){return ln.b},XLQ:function(){return S.X},GYS:function(){return cn},SDf:function(){return dn},diP:function(){return hn},sx7:function(){return pn},mG2:function(){return fn},QEs:function(){return An},NMM:function(){return gn},bp0:function(){return mn},iD$:function(){return Ne.i},snQ:function(){return ir},zcT:function(){return xt},U8D:function(){return xn},U_I:function(){return bn},ODp:function(){return yn},XD2:function(){return D.X},Xxe:function(){return wn},tdS:function(){return lo},O$l:function(){return vn},R_K:function(){return kn},tPi:function(){return O},jZU:function(){return Cn},SmN:function(){return In},CnO:function(){return $n},p0P:function(){return Sn},XAC:function(){return En},Wvh:function(){return it},fBT:function(){return Vt},rVs:function(){return fo},ers:function(){return ur},uN7:function(){return uo},Vl2:function(){return Nn},_b3:function(){return Ae},h62:function(){return De},$i:function(){return Dn},L9e:function(){return On},knu:function(){return Fn},Nbs:function(){return Bn.N},NXj:function(){return Pn},Z_8:function(){return go},luU:function(){return lt},Smz:function(){return Oe.S},ORZ:function(){return Ln},AEp:function(){return F},XeE:function(){return Wn.X},RRF:function(){return Un},odF:function(){return Vn},wOQ:function(){return Gn.w},yXz:function(){return zn},Bfx:function(){return Hn},xZs:function(){return Xn},Gg6:function(){return Ue},hg7:function(){return jn},p4s:function(){return or},Xu6:function(){return Kn},Two:function(){return qn},pUJ:function(){return Yn},HHK:function(){return Zn},GaM:function(){return Qn},VD$:function(){return Jn},arb:function(){return we},itS:function(){return tr},lls:function(){return It},P84:function(){return ve}});var r={};n.r(r),n.d(r,{conv2d:function(){return mr},depthwiseConv2d:function(){return yr},matMul:function(){return wr}});var o=n(7097),s=n(9121),a=n(3740),i=n(2668);const u=(0,i.op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return o.BV.runKernel(s.yj2,e)}{const e={x:t};return o.BV.runKernel(s.SYM,e)}}});const l=(0,i.op)({acos_:function(e){const t={x:(0,a._1)(e,"x","acos")};return o.BV.runKernel(s.VGw,t)}});const c=(0,i.op)({acosh_:function(e){const t={x:(0,a._1)(e,"x","acosh")};return o.BV.runKernel(s.SpW,t)}});var d=n(747);const h=(0,i.op)({add_:function(e,t){let n=(0,a._1)(e,"a","add"),r=(0,a._1)(t,"b","add");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.mm_,i)}});var p=n(569);const f=(0,i.op)({addN_:function(e){p.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),p.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,a._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!p.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return o.BV.runKernel(s.Xze,r)}});const g=(0,i.op)({all_:function(e,t=null,n=!1){const r={x:(0,a._1)(e,"x","all","bool")},i={axis:t,keepDims:n};return o.BV.runKernel(s.oT6,r,i)}});const m=(0,i.op)({any_:function(e,t=null,n=!1){const r={x:(0,a._1)(e,"x","any","bool")},i={axis:t,keepDims:n};return o.BV.runKernel(s.IKK,r,i)}});const x=(0,i.op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},r={axis:t};return o.BV.runKernel(s.sJF,n,r)}});const b=(0,i.op)({argMin_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMin")},r={axis:t};return o.BV.runKernel(s.aJk,n,r)}});const y=(0,i.op)({asin_:function(e){const t={x:(0,a._1)(e,"x","asin")};return o.BV.runKernel(s.M2y,t)}});const w=(0,i.op)({asinh_:function(e){const t={x:(0,a._1)(e,"x","asinh")};return o.BV.runKernel(s.qw7,t)}});const v=(0,i.op)({atan_:function(e){const t={x:(0,a._1)(e,"x","atan")};return o.BV.runKernel(s.jMg,t)}});const k=(0,i.op)({atan2_:function(e,t){let n=(0,a._1)(e,"a","atan2"),r=(0,a._1)(t,"b","atan2");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.QCc,i)}});const C=(0,i.op)({atanh_:function(e){const t={x:(0,a._1)(e,"x","atanh")};return o.BV.runKernel(s.Oyi,t)}});var I=n(2271),$=n(2582),S=n(4968);const E=(0,i.op)({avgPool_:function(e,t,n,r,i){const u=(0,a._1)(e,"x","avgPool","float32");p.hu($.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,S.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu(4===l.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`)),$.m("avgPool",r,i);const d={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:i};let f=o.BV.runKernel(s.JhU,d,h);return f=(0,I.p)(f,u.dtype),c?(0,S.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const T=(0,i.op)({avgPool3d_:function(e,t,n,r,i,u="NDHWC"){const l=(0,a._1)(e,"x","avgPool3d","float32");let c=l,d=!1;4===l.rank&&(d=!0,c=(0,S.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===c.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.hu("NDHWC"===u,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,$.m)("avgPool3d",r,i);const h={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:u};let g=o.BV.runKernel(s._k9,h,f);return g=(0,I.p)(g,c.dtype),d?(0,S.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});var R=n(8723);const _=(0,i.op)({concat_:function(e,t=0){(0,p.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,R.d)(n[0]);const r=n,i={axis:t};return o.BV.runKernel(s.Eh3,r,i)}});const N=(0,i.op)({matMul_:function(e,t,n=!1,r=!1){let i=(0,a._1)(e,"a","matMul"),u=(0,a._1)(t,"b","matMul");[i,u]=(0,d.T_)(i,u);const l={a:i,b:u},c={transposeA:n,transposeB:r};return o.BV.runKernel(s.XLW,l,c)}});var A=n(4841),D=n(625);const O=(0,i.op)({slice_:function(e,t,n){const r=(0,a._1)(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const i={x:r},u={begin:t,size:n};return o.BV.runKernel(s.p2w,i,u)}});const F=(0,i.op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh","float32")};return o.BV.runKernel(s.MIZ,t)}});const B=(0,i.op)({basicLSTMCell_:function(e,t,n,r,o,s){const i=(0,a._1)(e,"forgetBias","basicLSTMCell"),u=(0,a._1)(t,"lstmKernel","basicLSTMCell"),l=(0,a._1)(n,"lstmBias","basicLSTMCell"),c=(0,a._1)(r,"data","basicLSTMCell"),d=(0,a._1)(o,"c","basicLSTMCell"),p=(0,a._1)(s,"h","basicLSTMCell"),f=_([c,p],1),g=N(f,u),m=h(g,l),x=m.shape[0],b=m.shape[1]/4,y=[x,b],w=O(m,[0,0],y),v=O(m,[0,b],y),k=O(m,[0,2*b],y),C=O(m,[0,3*b],y),I=h((0,A.d)((0,D.X)(w),F(v)),(0,A.d)(d,(0,D.X)(h(i,k))));return[I,(0,A.d)(F(I),(0,D.X)(C))]}});const P=(0,i.op)({batchToSpaceND_:function(e,t,n){const r=(0,a._1)(e,"x","batchToSpaceND"),i=t.reduce(((e,t)=>e*t));p.hu(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),p.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),p.hu(r.shape[0]%i===0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${i}`));const u={x:r},l={blockShape:t,crops:n};return o.BV.runKernel(s.zws,u,l)}});const L=(0,i.op)({batchNorm_:function(e,t,n,r,i,u){null==u&&(u=.001);const l=(0,a._1)(e,"x","batchNorm"),c=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let h,f;null!=i&&(h=(0,a._1)(i,"scale","batchNorm")),null!=r&&(f=(0,a._1)(r,"offset","batchNorm")),p.hu(c.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),p.hu(null==f||c.rank===f.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),p.hu(null==h||c.rank===h.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,S.X)(e,[1,1,1,e.size]):2===e.rank?(0,S.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,S.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(l),scale:h,offset:f,mean:c,variance:d},m={varianceEpsilon:u},x=o.BV.runKernel(s.sHE,g,m);return(0,S.X)(x,l.shape)}});const W=(0,i.op)({batchNorm2d_:function(e,t,n,r,o,s){const i=(0,a._1)(e,"x","batchNorm"),u=(0,a._1)(t,"mean","batchNorm"),l=(0,a._1)(n,"variance","batchNorm");let c,d;return null!=o&&(c=(0,a._1)(o,"scale","batchNorm")),null!=r&&(d=(0,a._1)(r,"offset","batchNorm")),p.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),p.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),p.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(2===d.rank||1===d.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${d.rank}.`)),L(i,u,l,d,c,s)}});const M=(0,i.op)({batchNorm3d_:function(e,t,n,r,o,s){const i=(0,a._1)(e,"x","batchNorm"),u=(0,a._1)(t,"mean","batchNorm"),l=(0,a._1)(n,"variance","batchNorm");let c,d;return null!=o&&(c=(0,a._1)(o,"scale","batchNorm")),null!=r&&(d=(0,a._1)(r,"offset","batchNorm")),p.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),p.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),p.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(3===d.rank||1===d.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${d.rank}.`)),L(i,u,l,d,c,s)}});const U=(0,i.op)({batchNorm4d_:function(e,t,n,r,o,s){const i=(0,a._1)(e,"x","batchNorm"),u=(0,a._1)(t,"mean","batchNorm"),l=(0,a._1)(n,"variance","batchNorm");let c,d;return null!=o&&(c=(0,a._1)(o,"scale","batchNorm")),null!=r&&(d=(0,a._1)(r,"offset","batchNorm")),p.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),p.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),p.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&p.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=d&&p.hu(4===d.rank||1===d.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${d.rank}.`)),L(i,u,l,d,c,s)}});const V=(0,i.op)({bincount_:function(e,t,n){const r=(0,a._1)(e,"x","bincount"),i=(0,a._1)(t,"weights","bincount");p.hu("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),p.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.hu(i.size===r.size||0===i.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${i.shape}.`));const u={x:r,weights:i},l={size:n};return o.BV.runKernel(s.zvY,u,l)}});const G=(0,i.op)({broadcastArgs_:function(e,t){const n=(0,a._1)(e,"s0","broadcastArgs","int32"),r=(0,a._1)(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const i={s0:n,s1:r};return o.BV.runKernel(s.eEB,i)}});const z=(0,i.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!==0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,S.X)(n,e)}const i=n.shape,u=Array.from(t);for(let o=t.length-1;o>=0;o--)if(i[o]===t[o])u[o]=1;else if(1!==n.shape[o])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===u.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,R.d)(n);const l={x:n},c={reps:u};return o.BV.runKernel(s.n9L,l,c)}});var H=n(2657);const X=(0,i.op)({ceil_:function(e){const t={x:(0,a._1)(e,"x","ceil","float32")};return o.BV.runKernel(s.gJX,t)}});function j(e,t,n){const r={shape:e,value:t,dtype:n};return o.BV.runKernel(s.deh,{},r)}const K=(0,i.op)({clipByValue_:function(e,t,n){const r=(0,a._1)(e,"x","clipByValue");if(p.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return j(r.shape,t,r.dtype);const i={x:r},u={clipValueMin:t,clipValueMax:n};return o.BV.runKernel(s.xnO,i,u)}});var q=n(1661);const Y=(0,i.op)({concat1d_:function(e){return _(e,0)}});const Z=(0,i.op)({concat2d_:function(e,t){return _(e,t)}});const Q=(0,i.op)({concat3d_:function(e,t){return _(e,t)}});const J=(0,i.op)({concat4d_:function(e,t){return _(e,t)}});const ee=(0,i.op)({conv2d_:function(e,t,n,r,i="NHWC",u=[1,1],l){const c=(0,a._1)(e,"x","conv2d","float32"),d=(0,a._1)(t,"filter","conv2d","float32");let h=c,f=!1;3===c.rank&&(f=!0,h=(0,S.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.hu(4===h.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`)),p.hu(4===d.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${d.rank}.`)),$.m("conv2d",r,l);const g="NHWC"===i?h.shape[3]:h.shape[1];p.hu(g===d.shape[2],(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),p.hu($.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const m={x:h,filter:d},x={strides:n,pad:r,dataFormat:i,dilations:u,dimRoundingMode:l},b=o.BV.runKernel(s.mhS,m,x);return f?(0,S.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const te=(0,i.op)({conv1d_:function(e,t,n,r,o="NWC",s=1,i){const u=(0,a._1)(e,"x","conv1d"),l=(0,a._1)(t,"filter","conv1d");let c=u,d=!1;2===u.rank&&(d=!0,c=(0,S.X)(u,[1,u.shape[0],u.shape[1]])),p.hu(3===c.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${c.rank}.`)),p.hu(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),$.m("conv1d",r,i),p.hu(c.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${c.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),p.hu($.jT(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),p.hu("NWC"===o,(()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`));const h=(0,S.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),f=(0,S.X)(c,[c.shape[0],1,c.shape[1],c.shape[2]]),g=ee(f,h,[1,n],r,"NHWC",[1,s],i);return d?(0,S.X)(g,[g.shape[2],g.shape[3]]):(0,S.X)(g,[g.shape[0],g.shape[2],g.shape[3]])}});const ne=(0,i.op)({conv2DBackpropInput_:function(e,t,n,r,a,i="NHWC",u){p.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,d=!1;3===t.rank&&(d=!0,c=(0,S.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,e[0],e[1],e[2]]),p.hu(4===l.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`)),p.hu(4===c.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`)),p.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const h="NHWC"===i?l[3]:l[1],f="NHWC"===i?c.shape[3]:c.shape[1];p.hu(h===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[2]}.`)),p.hu(f===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${f}) must match output depth for filter ${n.shape[3]}.`)),$.m("conv2dDerInput",a,u);const g={dy:c,filter:n},m={strides:r,pad:a,dataFormat:i,dimRoundingMode:u,inputShape:l},x=o.BV.runKernel(s.wm,g,m);return d?(0,S.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const re=(0,i.op)({conv2dTranspose_:function(e,t,n,r,o,s){const i=(0,a._1)(e,"x","conv2dTranspose"),u=(0,a._1)(t,"filter","conv2dTranspose");return ne(n,i,u,r,o,"NHWC",s)}});const oe=(0,i.op)({conv3d_:function(e,t,n,r,i="NDHWC",u=[1,1,1]){const l=(0,a._1)(e,"x","conv3d"),c=(0,a._1)(t,"filter","conv3d");let d=l,h=!1;4===l.rank&&(h=!0,d=(0,S.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===d.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${d.rank}.`)),p.hu(5===c.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${c.rank}.`)),p.hu(d.shape[4]===c.shape[3],(()=>`Error in conv3d: depth of input (${d.shape[4]}) must match input depth for filter ${c.shape[3]}.`)),p.hu((0,$.jT)(n,u),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),p.hu("NDHWC"===i,(()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`));const f={x:d,filter:c},g={strides:n,pad:r,dataFormat:i,dilations:u},m=o.BV.runKernel(s.x12,f,g);return h?(0,S.X)(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}});const se=(0,i.op)({conv3DBackpropInput_:function(e,t,n,r,a){p.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,u=t,l=!1;4===t.rank&&(l=!0,u=(0,S.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const c=i[4],d=u.shape[4];p.hu(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),p.hu(5===u.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${u.rank}`)),p.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),p.hu(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),p.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const h={dy:u,filter:n},f={pad:a,strides:r,inputShape:i},g=o.BV.runKernel(s.ik2,h,f);return l?(0,S.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});const ae=(0,i.op)({conv3dTranspose_:function(e,t,n,r,o){const s=(0,a._1)(e,"x","conv3dTranspose"),i=(0,a._1)(t,"filter","conv3dTranspose");return se(n,s,i,r,o)}});const ie=(0,i.op)({cos_:function(e){const t={x:(0,a._1)(e,"x","cos","float32")};return o.BV.runKernel(s.mc4,t)}});const ue=(0,i.op)({cosh_:function(e){const t={x:(0,a._1)(e,"x","cosh","float32")};return o.BV.runKernel(s.TR1,t)}});const le=(0,i.op)({cumprod_:function(e,t=0,n=!1,r=!1){const i={x:(0,a._1)(e,"x","cumprod")},u={axis:t,exclusive:n,reverse:r};return o.BV.runKernel(s.Byc,i,u)}});const ce=(0,i.op)({cumsum_:function(e,t=0,n=!1,r=!1){const i={x:(0,a._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:r};return o.BV.runKernel(s.iHb,i,u)}});const de=(0,i.op)({denseBincount_:function(e,t,n,r=!1){const i=(0,a._1)(e,"x","denseBincount"),u=(0,a._1)(t,"weights","denseBincount");p.hu("int32"===i.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${i.dtype}`)),p.hu(i.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${i.rank}.`)),p.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),p.hu(u.size===i.size||0===u.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${i.shape}, weights shape: ${u.shape}.`));const l={x:i,weights:u},c={size:n,binaryOutput:r};return o.BV.runKernel(s.QRR,l,c)}});const he=(0,i.op)({depthToSpace_:function(e,t,n="NHWC"){const r=(0,a._1)(e,"x","depthToSpace","float32"),i="NHWC"===n?r.shape[1]:r.shape[2],u="NHWC"===n?r.shape[2]:r.shape[3],l="NHWC"===n?r.shape[3]:r.shape[1];p.hu(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),p.hu(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),p.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),p.hu(l%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${r.shape}`));const c={x:r},d={blockSize:t,dataFormat:n};return o.BV.runKernel(s.T0n,c,d)}});const pe=(0,i.op)({depthwiseConv2d_:function(e,t,n,r,i="NHWC",u=[1,1],l){const c=(0,a._1)(e,"x","depthwiseConv2d","float32"),d=(0,a._1)(t,"filter","depthwiseConv2d","float32");let h=c,f=!1;3===c.rank&&(f=!0,h=(0,S.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]])),p.hu(4===h.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`)),p.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`));const g="NHWC"===i?h.shape[3]:h.shape[1];p.hu(g===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${g}) must match the inChannels dimension in filter ${d.shape[2]}.`)),$.m("depthwiseConv2d",r,l);const m={x:h,filter:d},x={strides:n,pad:r,dataFormat:i,dilations:u,dimRoundingMode:l},b=o.BV.runKernel(s.cie,m,x);return f?(0,S.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}});const fe=(0,i.op)({diag_:function(e){const t={x:(0,a._1)(e,"x","diag")};return o.BV.runKernel(s.$w,t)}});const ge=(0,i.op)({dilation2d_:function(e,t,n,r,i=[1,1],u="NHWC"){const l=(0,a._1)(e,"x","dilation2d"),c=(0,a._1)(t,"filter","dilation2d");p.hu(3===l.rank||4===l.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${l.rank}.`)),p.hu(3===c.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${c.rank}.`)),p.hu("NHWC"===u,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${u}`));let d=l,h=!1;3===l.rank&&(d=(0,S.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]),h=!0);const f={x:d,filter:c},g={strides:n,pad:r,dilations:i},m=o.BV.runKernel(s.p4S,f,g);return h?(0,S.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}});const me=(0,i.op)({floorDiv_:function(e,t){let n=(0,a._1)(e,"a","floorDiv"),r=(0,a._1)(t,"b","floorDiv");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.jeX,i)}});const xe=(0,i.op)({div_:function(e,t){let n=(0,a._1)(e,"a","div"),r=(0,a._1)(t,"b","div");if([n,r]=(0,d.T_)(n,r),"int32"===n.dtype&&"int32"===r.dtype)return me(n,r);const i={a:n,b:r};return o.BV.runKernel(s.oHH,i,{})}});var be=n(2200);const ye=(0,i.op)({equal_:function(e,t){let n=(0,a._1)(e,"a","equal","string_or_numeric"),r=(0,a._1)(t,"b","equal","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.hdR,i)}});const we=(0,i.op)({where_:function(e,t,n){const r=(0,a._1)(t,"a","where"),i=(0,a._1)(n,"b","where"),u=(0,a._1)(e,"condition","where","bool"),l=(0,be.assertAndGetBroadcastShape)((0,be.assertAndGetBroadcastShape)(u.shape,r.shape),i.shape),c={condition:z(u,l),t:z(r,l),e:z(i,l)};return o.BV.runKernel(s.PhF,c)}});const ve=(0,i.op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return o.BV.runKernel(s.RuY,t)}});const ke=(0,i.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),r=(0,a._1)(t,"b","div");[n,r]=(0,d.T_)(n,r);const o=xe(n,r),s=ve(o),i=ye(r,s);return we(i,s,o)}});const Ce=(0,i.op)({dot_:function(e,t){const n=(0,a._1)(e,"t1","dot"),r=(0,a._1)(t,"t2","dot");p.hu((1===n.rank||2===n.rank)&&(1===r.rank||2===r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const o=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(p.hu(o===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${s}.`)),1===n.rank&&1===r.rank){const e=(0,S.X)(n,[1,-1]),t=(0,S.X)(r,[-1,1]),o=N(e,t);return(0,S.X)(o,[])}if(1===n.rank&&2===r.rank){const e=(0,S.X)(n,[1,-1]),t=(0,S.X)(r,[r.shape[0],r.shape[1]]),o=N(e,t);return(0,S.X)(o,[o.size])}if(2===n.rank&&1===r.rank){const e=(0,S.X)(r,[-1,1]),t=N(n,e);return(0,S.X)(t,[t.size])}{const e=(0,S.X)(r,[r.shape[0],r.shape[1]]);return N(n,e)}}});const Ie=(0,i.op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,a._1)(e,`tensors${t}`,"einsum"))),r={equation:e};return o.BV.runKernel(s.$g6,n,r)}});var $e=n(3233);const Se=(0,i.op)({erf_:function(e){let t=(0,a._1)(e,"x","erf");p.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,I.p)(t,"float32"));const n={x:t};return o.BV.runKernel(s.Omj,n)}});var Ee=n(3591);const Te=(0,i.op)({max_:function(e,t=null,n=!1){const r={x:(0,a._1)(e,"x","max")},i={reductionIndices:t,keepDims:n};return o.BV.runKernel(s.YoZ,r,i)}});const Re=(0,i.op)({min_:function(e,t=null,n=!1){const r={x:(0,a._1)(e,"x","min")},i={axis:t,keepDims:n};return o.BV.runKernel(s.c17,r,i)}});const _e=(0,i.op)({pow_:function(e,t){let n=(0,a._1)(e,"base","pow"),r=(0,a._1)(t,"exp","pow");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.pe_,i)}});var Ne=n(9494);const Ae=(0,i.op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt","float32")};return o.BV.runKernel(s.FKq,t)}});const De=(0,i.op)({square_:function(e){const t=(0,a._1)(e,"x","square");return o.BV.runKernel("Square",{x:t},{})}});var Oe=n(5475);function Fe(e,t,n=null){if(0===e.rank)return u(e);if(1!==e.rank&&null===n)return Fe((0,S.X)(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,Oe.S)(u(e),n);if(t===1/0)return Te(u(e),n);if(t===-1/0)return Re(u(e),n);if("euclidean"===t||2===t)return Ae((0,Oe.S)(_e(u(e),(0,Ne.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Te((0,Oe.S)(u(e),n[0]),n[1]-1);if(t===1/0)return Te((0,Oe.S)(u(e),n[1]),n[0]);if(t===-1/0)return Re((0,Oe.S)(u(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ae((0,Oe.S)(De(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Be=(0,i.op)({norm_:function(e,t="euclidean",n=null,r=!1){const o=Fe(e=(0,a._1)(e,"x","norm"),t,n);let s=o.shape;if(r){const t=(0,p.EC)(n,e.shape);s=Ee.rv(o.shape,t)}return(0,S.X)(o,s)}});const Pe=(0,i.op)({euclideanNorm_:function(e,t=null,n=!1){return Be(e,"euclidean",t,n)}});const Le=(0,i.op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return o.BV.runKernel(s.NEP,t)}});const We=(0,i.op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");p.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},i={dim:t};return o.BV.runKernel(s.YFo,r,i)}});const Me=(0,i.op)({expm1_:function(e){const t={x:(0,a._1)(e,"x","expm1")};return o.BV.runKernel(s.Y0y,t)}});const Ue=(0,i.op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");p.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},i={reps:t};return o.BV.runKernel(s.n9L,r,i)}});const Ve=(0,i.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const o=(0,H.f)([e,t],r),s=e<=t?e:t;for(let i=0;i<s;++i)o.set(1,i,i);const a=(0,S.X)(o.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Ue(We(a,0),[n[0],1,1]);if(2===n.length)return Ue(We(We(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ue(We(We(We(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});const Ge=(0,i.op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor","float32")};return o.BV.runKernel(s.OR,t)}});const ze=(0,i.op)({gather_:function(e,t,n=0,r=0){const i={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},u={axis:n,batchDims:r};return o.BV.runKernel(s.qi_,i,u)}});const He=(0,i.op)({greater_:function(e,t){let n=(0,a._1)(e,"a","greater","string_or_numeric"),r=(0,a._1)(t,"b","greater","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.iZT,i)}});const Xe=(0,i.op)({greaterEqual_:function(e,t){let n=(0,a._1)(e,"a","greaterEqual","string_or_numeric"),r=(0,a._1)(t,"b","greaterEqual","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.Acj,i)}});const je=(0,i.op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return o.BV.runKernel(s.J_u,t)}});const Ke=(0,i.op)({isFinite_:function(e){const t={x:(0,a._1)(e,"x","isFinite")};return o.BV.runKernel(s.avt,t)}});const qe=(0,i.op)({isInf_:function(e){const t={x:(0,a._1)(e,"x","isInf")};return o.BV.runKernel(s.iWB,t)}});const Ye=(0,i.op)({isNaN_:function(e){const t={x:(0,a._1)(e,"x","isNaN")};return o.BV.runKernel(s.r7n,t)}});var Ze=n(9133);const Qe=(0,i.op)({less_:function(e,t){let n=(0,a._1)(e,"a","less","string_or_numeric"),r=(0,a._1)(t,"b","less","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.vtC,i)}});const Je=(0,i.op)({lessEqual_:function(e,t){let n=(0,a._1)(e,"a","lessEqual","string_or_numeric"),r=(0,a._1)(t,"b","lessEqual","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.CAk,i)}});function et(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return o.BV.runKernel(s.e7N,{},r)}const tt=(0,i.op)({localResponseNormalization_:function(e,t=5,n=1,r=1,i=.5){const u=(0,a._1)(e,"x","localResponseNormalization");p.hu(4===u.rank||3===u.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${u.rank}.`)),p.hu(p.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let l=u,c=!1;3===u.rank&&(c=!0,l=(0,S.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const d={x:l},h={depthRadius:t,bias:n,alpha:r,beta:i},f=o.BV.runKernel(s.eZ0,d,h);return c?(0,S.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const nt=(0,i.op)({log_:function(e){const t={x:(0,a._1)(e,"x","log","float32")};return o.BV.runKernel(s.ZbH,t)}});const rt=(0,i.op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return o.BV.runKernel(s.kU,t)}});var ot=n(4077);function st(e){return o.BV.customGrad(e)}const at=(0,i.op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return o.BV.runKernel(s.kuV,t)}});const it=(0,i.op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return o.BV.runKernel(s.MRv,t)}});const ut=(0,i.op)({logSigmoid_:function(e){const t=(0,a._1)(e,"x","logSigmoid");return st((e=>({value:at(it(at(e))),gradFunc:t=>(0,A.d)(t,(0,D.X)(at(e)))})))(t)}});const lt=(0,i.op)({sub_:function(e,t){let n=(0,a._1)(e,"a","sub"),r=(0,a._1)(t,"b","sub");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.Tr8,i)}});const ct=(0,i.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return st(((e,n)=>{const r=Te(e,t,!0),o=lt(e,r),s=lt((0,I.p)(o,"float32"),nt((0,Oe.S)(Le(o),t,!0)));n([s]);return{value:s,gradFunc:(e,n)=>{const[r]=n,o=Le(r);return lt(e,(0,A.d)((0,Oe.S)(e,t,!0),o))}}}))(n)}});const dt=(0,i.op)({logSumExp_:function(e,t=null,n=!1){const r=(0,a._1)(e,"x","logSumExp"),o=(0,p.EC)(t,r.shape),s=Te(r,o,!0),i=lt(r,s),u=Le(i),l=(0,Oe.S)(u,o),c=nt(l),d=h((0,S.X)(s,c.shape),c);if(n){const e=(0,Ee.rv)(d.shape,o);return(0,S.X)(d,e)}return d}});const ht=(0,i.op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),r=(0,a._1)(t,"b","logicalAnd","bool");(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.PYm,i)}});const pt=(0,i.op)({logicalNot_:function(e){const t={x:(0,a._1)(e,"x","logicalNot","bool")};return o.BV.runKernel(s.VfG,t)}});const ft=(0,i.op)({logicalOr_:function(e,t){const n=(0,a._1)(e,"a","logicalOr","bool"),r=(0,a._1)(t,"b","logicalOr","bool");(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.MZg,i)}});const gt=(0,i.op)({logicalXor_:function(e,t){const n=(0,a._1)(e,"a","logicalXor","bool"),r=(0,a._1)(t,"b","logicalXor","bool");return(0,be.assertAndGetBroadcastShape)(n.shape,r.shape),ht(ft(e,t),pt(ht(e,t)))}}),mt=2147483648;const xt=(0,i.op)({searchSorted_:function(e,t,n="left"){const r=(0,a._1)(e,"sortedSequence","searchSorted"),i=(0,a._1)(t,"values","searchSorted"),u=r.shape[r.shape.length-1],l=i.shape[i.shape.length-1],c=(0,S.X)(r,[-1,u]),d=(0,S.X)(i,[-1,l]);if(c.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(c.shape[0]!==d.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if((0,p.NA)(d.shape)>=mt)throw new Error("values tensor size must less than 2147483648");if(c.shape[1]>=mt)throw new Error(`trailing dim_size must less than 2147483648 for int32 output type, was ${c.shape[1]}`);const h={sortedSequence:c,values:d},f={side:n};return o.BV.runKernel(s.nr8,h,f)}});function bt(e,t){return xt(e,t,"left")}const yt=(0,i.op)({maxPool_:function(e,t,n,r,i){const u=(0,a._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,S.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu(4===l.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`)),p.hu($.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),$.m("maxPool",r,i);const d={x:l},h={filterSize:t,strides:n,pad:r,dimRoundingMode:i},f=o.BV.runKernel(s.mTV,d,h);return c?(0,S.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}});const wt=(0,i.op)({maxPool3d_:function(e,t=[1,1,1],n,r,i,u="NDHWC"){const l=(0,a._1)(e,"x","maxPool3d");let c=l,d=!1;4===l.rank&&(d=!0,c=(0,S.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),p.hu(5===c.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${c.rank}.`)),p.hu("NDHWC"===u,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${u}`)),(0,$.m)("maxPool3d",r,i);const h={x:c},f={filterSize:t,strides:n,pad:r,dimRoundingMode:i,dataFormat:u},g=o.BV.runKernel(s.OAf,h,f);return d?(0,S.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}});const vt=(0,i.op)({maxPoolWithArgmax_:function(e,t,n,r,i=!1){const u={x:(0,a._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:r,includeBatchInIndex:i},c=o.BV.runKernel(s.vFR,u,l);return{result:c[0],indexes:c[1]}}});const kt=(0,i.op)({maximum_:function(e,t){let n=(0,a._1)(e,"a","maximum"),r=(0,a._1)(t,"b","maximum");[n,r]=(0,d.T_)(n,r),"bool"===n.dtype&&(n=(0,I.p)(n,"int32"),r=(0,I.p)(r,"int32")),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.BMI,i)}});const Ct=(0,i.op)({mean_:function(e,t=null,n=!1){const r={x:(0,a._1)(e,"x","mean")},i={axis:t,keepDims:n};return o.BV.runKernel(s.q2K,r,i)}});function It(e,t="float32"){if("complex64"===t){const t=It(e,"float32"),n=It(e,"float32");return(0,q.P)(t,n)}const n=(0,p.wT)((0,p.NA)(e),t);return o.BV.makeTensor(n,e,t)}function $t(e,t="float32"){if("complex64"===t){const t=$t(e,"float32"),n=It(e,"float32");return(0,q.P)(t,n)}const n=(0,p.p8)((0,p.NA)(e),t);return o.BV.makeTensor(n,e,t)}function St(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,a._1)(e,"x","meshgrid",e instanceof ot.es?e.dtype:"float32");if(void 0===t)return[r];let o=(0,a._1)(t,"y","meshgrid",t instanceof ot.es?t.dtype:"float32");const s=(0,p.NA)(r.shape),i=(0,p.NA)(o.shape);return"xy"===n?(r=(0,S.X)(r,[1,-1]),o=(0,S.X)(o,[-1,1]),[N($t([i,1],r.dtype),r),N(o,$t([1,s],o.dtype))]):(r=(0,S.X)(r,[-1,1]),o=(0,S.X)(o,[1,-1]),[N(r,$t([1,i],r.dtype)),N($t([s,1],o.dtype),o)])}const Et=(0,i.op)({minimum_:function(e,t){let n=(0,a._1)(e,"a","minimum"),r=(0,a._1)(t,"b","minimum");[n,r]=(0,d.T_)(n,r),"bool"===n.dtype&&(n=(0,I.p)(n,"int32"),r=(0,I.p)(r,"int32")),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.q8u,i)}});const Tt=(0,i.op)({mirrorPad_:function(e,t,n){p.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=(0,a._1)(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");p.hu(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const i="reflect"===n?1:0;for(let o=0;o<r.rank;o++)p.hu(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),p.hu(t[o][0]>=0&&t[o][0]<=r.shape[o]-i&&t[o][1]>=0&&t[o][1]<=r.shape[o]-i,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-i} or less than 0 for input of shape ${r.shape}`));const u={paddings:t,mode:n},l={x:r};return o.BV.runKernel(s.jQs,l,u)}});const Rt=(0,i.op)({mod_:function(e,t){let n=(0,a._1)(e,"a","mod"),r=(0,a._1)(t,"b","mod");[n,r]=(0,d.T_)(n,r);const i={a:n,b:r};return o.BV.runKernel(s.Vbg,i)}});const _t=(0,i.op)({moments_:function(e,t=null,n=!1){e=(0,a._1)(e,"x","moments");const r=(0,p.EC)(t,e.shape),o=Ct(e,r,n);let s=o.shape;n||(s=(0,Ee.rv)(o.shape,r));const i=De(lt((0,I.p)(e,"float32"),(0,S.X)(o,s)));return{mean:o,variance:Ct(i,r,n)}}});const Nt=(0,i.op)({multiRNNCell_:function(e,t,n,r){const o=(0,a._1)(t,"data","multiRNNCell"),s=(0,a.sI)(n,"c","multiRNNCell"),i=(0,a.sI)(r,"h","multiRNNCell");let u=o;const l=[];for(let a=0;a<e.length;a++){const t=e[a](u,s[a],i[a]);l.push(t[0]),l.push(t[1]),u=t[1]}const c=[],d=[];for(let a=0;a<l.length;a+=2)c.push(l[a]),d.push(l[a+1]);return[c,d]}});const At=(0,i.op)({multinomial_:function(e,t,n,r=!1){const i=(0,a._1)(e,"logits","multinomial"),u=i.size,l=i.rank;if(u<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${u}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const c={logits:1===l?(0,S.X)(i,[1,-1]):i},d={numSamples:t,seed:n,normalized:r},h=o.BV.runKernel(s.NZg,c,d);return 1===l?(0,S.X)(h,[h.size]):h}});const Dt=(0,i.op)({notEqual_:function(e,t){let n=(0,a._1)(e,"a","notEqual","string_or_numeric"),r=(0,a._1)(t,"b","notEqual","string_or_numeric");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s.yQU,i)}});const Ot=(0,i.op)({oneHot_:function(e,t,n=1,r=0,i="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const u={indices:(0,a._1)(e,"indices","oneHot","int32")},l={dtype:i,depth:t,onValue:n,offValue:r};return o.BV.runKernel(s.we_,u,l)}});const Ft=(0,i.op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return o.BV.runKernel(s.qWM,t)}});const Bt=(0,i.op)({outerProduct_:function(e,t){const n=(0,a._1)(e,"v1","outerProduct"),r=(0,a._1)(t,"v2","outerProduct");p.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const o=(0,S.X)(n,[-1,1]),s=(0,S.X)(r,[1,-1]);return N(o,s)}});const Pt=(0,i.op)({pad_:function(e,t,n=0){const r=(0,a._1)(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const i={paddings:t,constantValue:n},u={x:r};return o.BV.runKernel(s.lyA,u,i)}});const Lt=(0,i.op)({pad1d_:function(e,t,n=0){return(0,p.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Pt(e,[t],n)}});const Wt=(0,i.op)({pad2d_:function(e,t,n=0){return(0,p.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Mt=(0,i.op)({pad3d_:function(e,t,n=0){return(0,p.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Ut=(0,i.op)({pad4d_:function(e,t,n=0){return(0,p.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Pt(e,t,n)}});const Vt=(0,i.op)({spaceToBatchND_:function(e,t,n){const r=(0,a._1)(e,"x","spaceToBatchND");p.hu(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),p.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),p.hu(r.shape.reduce(((e,r,o)=>o>0&&o<=t.length?e&&(r+n[o-1][0]+n[o-1][1])%t[o-1]===0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const i={x:r},u={blockShape:t,paddings:n};return o.BV.runKernel(s.TQc,i,u)}});const Gt=(0,i.op)({pool_:function(e,t,n,r,o,s,i){null==o&&(o=[1,1]),null==s&&(s=1),0===r&&(r="valid");const u=(0,a._1)(e,"x","maxPool");let l=u,c=!1;3===u.rank&&(c=!0,l=(0,S.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),p.hu($.jT(s,o),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${o}'`));const d=$.Xw(l.shape,t,s,o,r),h=[d.dilationHeight,d.dilationWidth];let f;f="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),o=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],o[t]]))}([d.filterHeight,d.filterWidth],h):[[0,0],[0,0]];const g=1===h[0]&&1===h[1],[m,x]=function(e,t,n){const r=n.map((e=>e[0])),o=n.map((e=>e[1])),s=e.concat(r,o),a=t.map(((e,t)=>(e-s[t]%e)%e)),i=o.map(((e,t)=>e+a[t])),u=t.map(((e,t)=>[r[t],i[t]])),l=t.map(((e,t)=>[0,a[t]]));return[u,l]}([d.inHeight,d.inWidth],h,f),b=g?r:"valid",y=g?l:Vt(l,h,m),w=("avg"===n?()=>E(y,t,s,b,i):()=>yt(y,t,s,b,i))(),v=g?w:P(w,h,x);return c?(0,S.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}});var zt=n(8151),Ht=n(9798);const Xt=(0,i.op)({prod_:function(e,t=null,n=!1){let r=(0,a._1)(e,"x","prod");"bool"===r.dtype&&(r=(0,I.p)(r,"int32"));const i={x:r},u={axis:t,keepDims:n};return o.BV.runKernel(s.DlI,i,u)}});const jt=(0,i.op)({raggedGather_:function(e,t,n,r){const i={paramsNestedSplits:e.map(((e,t)=>(0,a._1)(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:(0,a._1)(t,"paramsDenseValues","raggedGather"),indices:(0,a._1)(n,"indices","raggedGather","int32")},u={outputRaggedRank:r},l=o.BV.runKernel(s.dDz,i,u);return{outputNestedSplits:l.slice(0,l.length-1),outputDenseValues:l[l.length-1]}}});const Kt=(0,i.op)({raggedTensorToTensor_:function(e,t,n,r,i){const u=(0,a._1)(e,"shape","raggedTensorToTensor","int32"),l=(0,a._1)(t,"values","raggedTensorToTensor"),c={shape:u,values:l,defaultValue:(0,a._1)(n,"defaultValue","raggedTensorToTensor",l.dtype),rowPartitionTensors:r.map(((e,t)=>(0,a._1)(e,`tensors${t}`,"raggedTensorToTensor","int32")))},d={rowPartitionTypes:i};return o.BV.runKernel(s.BiW,c,d)}});const qt=(0,i.op)({rand_:function(e,t,n){const r=(0,p.NA)(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let o=0;o<r;o++)s[o]=t();return o.BV.makeTensor(s,e,n)}});var Yt=n(6377);class Zt{constructor(e,t,n,r,o){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=o||Math.random();this.random=Yt.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,o,s;do{r=2*this.random()-1,o=2*this.random()-1,s=r*r+o*o}while(s>=1||0===s);const a=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*a,t=this.mean+this.stdDev*o*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Qt{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const o=r||Math.random();this.randu=Yt.alea(o.toString()),this.randn=new Zt(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,o,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),o=this.randu(),o<t||Math.log(o)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class Jt{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"===typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Yt.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const en=(0,i.op)({randomGamma_:function(e,t,n=1,r="float32",o){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Qt(t,n,r,o),a=(0,H.f)(e,r);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}});const tn=(0,i.op)({randomNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Zt(t,n,r,!1,o),a=(0,H.f)(e,r);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}});const nn=(0,i.op)({randomStandardNormal_:function(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return tn(e,0,1,t,n)}});const rn=(0,i.op)({randomUniform_:function(e,t=0,n=1,r="float32",o){const s=(0,H.f)(e,r),a=new Jt(t,n,null,o);for(let i=0;i<s.values.length;i++)s.values[i]=a.nextValue();return s.toTensor()}});function on(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return o.BV.runKernel(s.e6w,{},a)}const sn=(0,i.op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return o.BV.runKernel(s.xJR,t)}});const an=(0,i.op)({reciprocal_:function(e){const t={x:(0,a._1)(e,"x","reciprocal")};return o.BV.runKernel(s.$HU,t)}});var un=n(7409),ln=n(3582);const cn=(0,i.op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},r={dims:t};return o.BV.runKernel(s.mKl,n,r)}});const dn=(0,i.op)({reverse1d_:function(e){const t=(0,a._1)(e,"x","reverse");return p.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),cn(t,0)}});const hn=(0,i.op)({reverse2d_:function(e,t){const n=(0,a._1)(e,"x","reverse");return p.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),cn(n,t)}});const pn=(0,i.op)({reverse3d_:function(e,t){const n=(0,a._1)(e,"x","reverse");return p.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),cn(n,t)}});const fn=(0,i.op)({reverse4d_:function(e,t){const n=(0,a._1)(e,"x","reverse");return p.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),cn(n,t)}});const gn=(0,i.op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return o.BV.runKernel(s.e07,t)}});const mn=(0,i.op)({rsqrt_:function(e){const t={x:(0,a._1)(e,"x","rsqrt","float32")};return o.BV.runKernel(s.bV0,t)}});const xn=(0,i.op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return o.BV.runKernel(s.oFR,t)}});const bn=(0,i.op)({separableConv2d_:function(e,t,n,r,o,s=[1,1],i="NHWC"){const u=(0,a._1)(e,"x","separableConv2d"),l=(0,a._1)(t,"depthwiseFilter","separableConv2d"),c=(0,a._1)(n,"pointwiseFilter","separableConv2d");let d=u,h=!1;if(3===u.rank&&(h=!0,d=(0,S.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");p.hu(4===d.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${d.rank}.`)),p.hu(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),p.hu(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),p.hu(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),p.hu(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const f=l.shape[2],g=l.shape[3];p.hu(c.shape[2]===f*g,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${f*g}, but got ${c.shape[2]}.`));const m=pe(d,l,r,o,i,s),x=ee(m,c,1,"valid",i);return h?(0,S.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});const yn=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),r=(0,a._1)(t,"y","setdiff1d");p.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),p.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),p.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const o=await n.data(),s=await r.data(),i=new Set(s);let u=0;for(let a=0;a<o.length;a++)i.has(o[a])||u++;const l=new ot.YD([u],n.dtype),c=new ot.YD([u],"int32");for(let a=0,d=0;a<o.length;a++)i.has(o[a])||(l.values[d]=o[a],c.values[d]=a,d++);return[l.toTensor(),c.toTensor()]};const wn=(0,i.op)({sign_:function(e){const t={x:(0,a._1)(e,"x","sign")};return o.BV.runKernel(s.i5y,t)}});const vn=(0,i.op)({sin_:function(e){const t={x:(0,a._1)(e,"x","sin","float32")};return o.BV.runKernel(s.RQH,t)}});const kn=(0,i.op)({sinh_:function(e){const t={x:(0,a._1)(e,"x","sinh")};return o.BV.runKernel(s.wYB,t)}});const Cn=(0,i.op)({slice1d_:function(e,t,n){const r=(0,a._1)(e,"x","slice1d");return p.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),O(r,[t],[n])}});const In=(0,i.op)({slice2d_:function(e,t,n){const r=(0,a._1)(e,"x","slice2d");return p.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),O(r,t,n)}});const $n=(0,i.op)({slice3d_:function(e,t,n){const r=(0,a._1)(e,"x","slice3d");return p.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),O(r,t,n)}});const Sn=(0,i.op)({slice4d_:function(e,t,n){const r=(0,a._1)(e,"x","slice4d");return p.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),O(r,t,n)}});const En=(0,i.op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},i={dim:t};return o.BV.runKernel(s.Gcp,r,i)}});const Tn=(0,i.op)({fft_:function(e){(0,p.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return o.BV.runKernel(s.vwp,t)}});const Rn=(0,i.op)({ifft_:function(e){(0,p.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return o.BV.runKernel(s.Qg5,t)}});const _n=(0,i.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const o=(0,S.X)(e,[n,t]);r=Rn(o)}else{const o=[n,2*(t-1)],s=(0,S.X)(sn(e),[n,t]),a=(0,S.X)(je(e),[n,t]),i=cn(O(s,[0,1],[n,t-2]),1),u=(0,A.d)(cn(O(a,[0,1],[n,t-2]),1),(0,Ne.i)(-1)),l=_([s,i],1),c=_([a,u],1),d=(0,S.X)((0,q.P)(l,c),[o[0],o[1]]);r=Rn(d)}if(r=sn(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=(0,S.X)(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}});const Nn=(0,i.op)({split_:function(e,t,n=0){const r={x:(0,a._1)(e,"x","split")},i={numOrSizeSplits:t,axis:n};return o.BV.runKernel(s.L8s,r,i)}});const An=(0,i.op)({rfft_:function(e,t){(0,p.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let o;if(null!=t&&t<n){const r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,o=O(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,o=_([e,It(r)],e.shape.length-1),n=t}else o=e;const s=ve(o),a=(0,S.X)((0,q.P)(o,s),[r,n]),i=Tn(a),u=Math.floor(n/2)+1,l=sn(i),c=je(i),d=Nn(l,[u,n-u],l.shape.length-1),h=Nn(c,[u,n-u],c.shape.length-1),f=o.shape.slice();return f[o.shape.length-1]=u,(0,S.X)((0,q.P)(d[0],h[0]),f)}});const Dn=(0,i.op)({squaredDifference_:function(e,t){let n=(0,a._1)(e,"a","squaredDifference"),r=(0,a._1)(t,"b","squaredDifference");[n,r]=(0,d.T_)(n,r),(0,be.assertAndGetBroadcastShape)(n.shape,r.shape);const i={a:n,b:r};return o.BV.runKernel(s._tC,i,{})}});const On=(0,i.op)({squeeze_:function(e,t){const n=(0,a._1)(e,"x","squeeze","string_or_numeric");return(0,S.X)(n,(0,p.bp)(n.shape,t).newShape)}});const Fn=(0,i.op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");p.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&p.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,i={axis:t};return o.BV.runKernel(s.QiL,r,i)}});var Bn=n(1901);const Pn=(0,i.op)({stridedSlice_:function(e,t,n,r,i=0,u=0,l=0,c=0,d=0){const h={x:(0,a._1)(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:r,beginMask:i,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:d};return o.BV.runKernel(s.jQk,h,p)}});const Ln=(0,i.op)({tan_:function(e){const t={x:(0,a._1)(e,"x","tan","float32")};return o.BV.runKernel(s.sEM,t)}});var Wn=n(701),Mn=n(7852);function Un(e,t){(0,p.Cq)(e);const n=(0,a.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,Mn.H)(e,null,n,t)}function Vn(e,t,n){if((0,p.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,a.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,Mn.H)(e,t,r,n)}var Gn=n(9906);function zn(e,t,n){if((0,p.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,a.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,r,n)}function Hn(e,t,n){if((0,p.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,a.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,Mn.H)(e,t,r,n)}function Xn(e,t,n){if((0,p.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,a.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,Mn.H)(e,t,r,n)}const jn=(0,i.op)({topk_:function(e,t=1,n=!0){const r=(0,a._1)(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const i=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>i)throw new Error(`'k' passed to topk() must be <= the last dimension (${i}) but got ${t}`);const u={x:r},l={k:t,sorted:n},[c,d]=o.BV.runKernel(s.cWu,u,l);return{values:c,indices:d}}});const Kn=(0,i.op)({truncatedNormal_:function(e,t=0,n=1,r,o){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new Zt(t,n,r,!0,o),a=(0,H.f)(e,r);for(let i=0;i<a.values.length;i++)a.values[i]=s.nextValue();return a.toTensor()}});const qn=(0,i.op)({unique_:function(e,t=0){const n=(0,a._1)(e,"x","unique","string_or_numeric");(0,p.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},i={axis:t},[u,l]=o.BV.runKernel(s.kpP,r,i);return{values:u,indices:l}}});const Yn=(0,i.op)({unsortedSegmentSum_:function(e,t,n){const r=(0,a._1)(e,"x","unsortedSegmentSum"),i=(0,a._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,p.hu)((0,p.GN)(n),(()=>"numSegments must be of dtype int"));const u={x:r,segmentIds:i},l={numSegments:n};return o.BV.runKernel(s.Qvg,u,l)}});const Zn=(0,i.op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");p.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},i={axis:t};return o.BV.runKernel(s.ToN,r,i)}});function Qn(e,t){return xt(e,t,"right")}function Jn(e,t=!0,n,r){return o.BV.makeVariable(e,t,n,r)}var er=n(8333);const tr=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),r=(0,er.Z)(t.shape,n);return e!==t&&t.dispose(),r};const nr=async function(e,t,n){const r=(0,a._1)(e,"tensor","boolMask"),o=(0,a._1)(t,"mask","boolMask","bool"),s=null==n?0:n,i=o.rank,u=r.shape;p.hu(i>0,(()=>"mask cannot be scalar")),p.k5(u.slice(s,s+i),o.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let a=s;a<s+i;a++)l*=u[a];const c=u.slice(0,s).concat([l],u.slice(s+i)),d=(0,S.X)(r,c),h=(0,S.X)(o,[-1]),f=await tr(h),g=On(f,[1]),m=ze(d,g,s);return e!==r&&r.dispose(),t!==o&&o.dispose(),g.dispose(),d.dispose(),h.dispose(),f.dispose(),m};var rr=n(4368);const or=(0,i.op)({transpose_:function(e,t,n){const r=(0,a._1)(e,"x","transpose");if(null==t&&(t=r.shape.map(((e,t)=>t)).reverse()),p.hu(r.rank===t.length,(()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`)),t.forEach((e=>{p.hu(e>=0&&e<r.rank,(()=>"All entries in 'perm' must be between 0 and "+(r.rank-1)+` but got ${t}`))})),r.rank<=1)return r.clone();const i={x:r},u={perm:t};return"complex64"===r.dtype?(0,rr.lu)((()=>{let e=sn(r),t=je(r);return e=o.BV.runKernel(s.G3Y,{x:e},u),t=o.BV.runKernel(s.G3Y,{x:t},u),n&&(t=at(t)),(0,q.P)(e,t)})):o.BV.runKernel(s.G3Y,i,u)}});const sr=(0,i.op)({movingAverage_:function(e,t,n,r,o=!0){const s=(0,a._1)(e,"v","movingAverage"),i=(0,a._1)(t,"x","movingAverage"),u=(0,a._1)(n,"decay","movingAverage");(0,d.xg)(s,i),p.hu(p.cO(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=(0,Ne.i)(1),c=lt(l,u);let f=(0,A.d)(lt(i,s),c);if(o){p.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,a._1)(r,"step","movingAverage");f=xe(f,lt(l,_e(u,e)))}return h(s,f)}});var ar=n(3028);const ir=(0,i.op)({scatterND_:function(e,t,n){const r=(0,a._1)(e,"indices","scatterND","int32"),i=(0,a._1)(t,"updates","scatterND");ar.b0(i,r,n);const u={indices:r,updates:i},l={shape:n};return o.BV.runKernel(s.xQA,u,l)}});const ur=(0,i.op)({sparseToDense_:function(e,t,n,r=0){const i=(0,a._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,a._1)(t,"sparseValues","sparseToDense","string_or_numeric"),l=(0,a._1)(r,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const o=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const a=t.size;if(0!==t.rank&&(1!==t.rank||a!==o))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${o}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,u,n,l);const c={sparseIndices:i,sparseValues:u,defaultValue:l},d={outputShape:n};return o.BV.runKernel(s.D2d,c,d)}});const lr=(0,i.op)({gatherND_:function(e,t){const n=(0,a._1)(t,"indices","gatherND","int32"),r={params:(0,a._1)(e,"x","gatherND","string_or_numeric"),indices:n};return o.BV.runKernel(s.q1x,r)}});const cr=(0,i.op)({dropout_:function(e,t,n,r){const o=(0,a._1)(e,"x","dropout");if(p.hu("float32"===o.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`)),p.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof ot.es?o.clone():o;const s=function(e,t){if(null==t)return e.shape.slice();if(p.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(o,n),i=1-t,u=xe(Ge(h(rn(s,0,1,"float32",r),i)),i);return(0,A.d)(o,u)}});function dr(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function hr(e,t,n){const r=1-e%2,o=new Float32Array(e);for(let s=0;s<e;++s){const a=2*Math.PI*s/(e+r-1);o[s]=t-n*Math.cos(a)}return Un(o,"float32")}const pr=async function(e,t,n=1){const r=(0,a._1)(e,"predictions","inTopK"),o=(0,a._1)(t,"targets","inTopK");(0,p.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,p.hu)(r.rank-1===o.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${o.rank}`)),(0,p.k5)(r.shape.slice(0,r.shape.length-1),o.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,p.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),u=await o.data(),[l,c]=[i.length/s,s],d=(0,p.WP)("bool",l);for(let a=0;a<l;a++){const e=a*c,t=i.subarray(e,e+c),r=[];for(let n=0;n<t.length;n++)r.push({value:t[n],index:n});r.sort(((e,t)=>t.value-e.value)),d[a]=0;for(let o=0;o<n;o++)if(r[o].index===u[a]){d[a]=1;break}}return e!==r&&r.dispose(),t!==o&&o.dispose(),(0,Wn.X)(d,o.shape,"bool")};const fr=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,r,a,i="NHWC",u){let l=e;3===e.rank&&(l=(0,S.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,S.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),p.hu(4===l.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`)),p.hu(4===c.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`)),p.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const d="NHWC"===i?l.shape[3]:l.shape[1],h="NHWC"===i?c.shape[3]:c.shape[1];p.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),p.hu(h===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${h}) must match output depth for filter (${n[3]}).`)),$.m("conv2dDerFilter",a,u);const f={x:l,dy:c},g={strides:r,pad:a,dataFormat:i,dimRoundingMode:u,filterShape:n};return o.BV.runKernel(s.wUP,f,g)}});var gr=n(9323);const mr=(0,i.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:f="linear",preluActivationWeights:g,leakyreluAlpha:m}){if(f=f||"linear",!1===(0,gr.uy)(o.BV.state.gradientDepth,f)){p.hu("NHWC"===i,(()=>`Error in fused conv2d: got dataFormat of ${i} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let o=ee(e,t,n,r,i,u,l);return null!=c&&(o=h(o,c)),(0,gr.QH)(o,f,g,m)}const x=(0,a._1)(e,"x","conv2d","float32"),b=(0,a._1)(t,"filter","conv2d","float32");let y=x,w=!1;3===x.rank&&(w=!0,y=(0,S.X)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),p.hu(4===y.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`)),p.hu(4===b.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${b.rank}.`)),$.m("fused conv2d",r,l);const v="NHWC"===i?y.shape[3]:y.shape[1];p.hu(b.shape[2]===v,(()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${b.shape[2]}.`)),p.hu($.jT(n,u),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`));const k=$.Ix(y.shape,b.shape,n,u,r,l);let C,I;if(null!=c&&(C=(0,a._1)(c,"bias","fused conv2d"),[C]=(0,d.T_)(C,x),"NHWC"===i?be.assertAndGetBroadcastShape(k.outShape,C.shape):(p.hu(C.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${C.shape.length}.`)),p.hu(0===C.shape.length||C.shape[0]===k.outChannels||1===C.shape[0],(()=>`Error in fused conv2d: bias shape (${C.shape}) is not compatible with the number of output channels (${k.outChannels})`)))),null!=g){const e=g.shape;if(p.hu(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)p.hu(1===e[0]||e[0]===k.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${k.outChannels}).`));else if(3===e.length)try{be.assertAndGetBroadcastShape(e,k.outShape)}catch(_){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${k.outShape}).`;throw Error(t)}I=(0,a._1)(g,"prelu weights","fused conv2d")}const E=(e,t)=>{p.hu("NHWC"===i,(()=>`Error in gradient of fused conv2D: got dataFormat of ${i} but only NHWC is currently supported.`));const[o,s,a,l]=t,c=(0,gr.Fr)(e,a,f);p.hu($.I0(u),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${u}'`));const d=[ne(s.shape,c,o,n,r),fr(s,c,o.shape,n,r)];if(null!=l){const e=(0,gr.pf)(l,c);d.push(e)}return d},T={x:y,filter:b,bias:C,preluActivationWeights:I},R={strides:n,pad:r,dataFormat:i,dilations:u,dimRoundingMode:l,activation:f,leakyreluAlpha:m};if(null==c){return st(((e,t,n)=>{let r=o.BV.runKernel(s._V0,T,R);return n([t,e,r]),w&&(r=(0,S.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:E}}))(y,b)}return st(((e,t,n,r)=>{let a=o.BV.runKernel(s._V0,T,R);return r([t,e,a,n]),w&&(a=(0,S.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:E}}))(y,b,C)}});const xr=(0,i.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,i=[1,1],u){let l=e;3===e.rank&&(l=(0,S.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let c=t;3===c.rank&&(c=(0,S.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={x:l,dy:c},h={strides:r,pad:a,dimRoundingMode:u,dilations:i,filterShape:n};return o.BV.runKernel(s.sL$,d,h)}});const br=(0,i.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,i=[1,1],u){let l=t,c=!1;3===t.rank&&(c=!0,l=(0,S.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const d={dy:l,filter:n},h={strides:r,pad:a,dimRoundingMode:u,dilations:i,inputShape:e},p=o.BV.runKernel(s.y7R,d,h);return c?(0,S.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});const yr=(0,i.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:i="NHWC",dilations:u=[1,1],dimRoundingMode:l,bias:c,activation:f="linear",preluActivationWeights:g,leakyreluAlpha:m}){if(!1===(0,gr.uy)(o.BV.state.gradientDepth,f)){let o=pe(e,t,n,r,i,u,l);return null!=c&&(o=h(o,c)),(0,gr.QH)(o,f,g,m)}const x=(0,a._1)(e,"x","depthwiseConv2d","float32"),b=(0,a._1)(t,"filter","depthwiseConv2d","float32");let y=x,w=!1;3===x.rank&&(w=!0,y=(0,S.X)(x,[1,x.shape[0],x.shape[1],x.shape[2]])),p.hu(4===y.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`)),p.hu(4===b.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${b.rank}.`)),p.hu(y.shape[3]===b.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${b.shape[2]}.`)),null==u&&(u=[1,1]),p.hu($.jT(n,u),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${u}'`)),$.m("fused depthwiseConv2d",r,l);const v=$.Ix(y.shape,b.shape,n,u,r,l,!0);let k,C;null!=c&&(k=(0,a._1)(c,"bias","fused conv2d"),[k]=(0,d.T_)(k,x),be.assertAndGetBroadcastShape(v.outShape,k.shape)),null!=g&&(C=(0,a._1)(g,"prelu weights","fused depthwiseConv2d"));const I=(e,t)=>{p.hu($.I0(u),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${u}'`));const[o,s,a,i]=t,c=(0,gr.Fr)(e,a,f),d=br(s.shape,c,o,n,r,u,l),h=xr(s,c,o.shape,n,r,u,l);if(null!=i){return[d,h,(0,gr.pf)(k,c)]}return[d,h]},E={x:y,filter:b,bias:k,preluActivationWeights:C},T={strides:n,pad:r,dataFormat:i,dilations:u,dimRoundingMode:l,activation:f,leakyreluAlpha:m};if(null==c){return st(((e,t,n)=>{let r=o.BV.runKernel(s.luS,E,T);return n([t,e,r]),w&&(r=(0,S.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:I}}))(y,b)}return st(((e,t,n,r)=>{let a=o.BV.runKernel(s.luS,E,T);return r([t,e,a,n]),w&&(a=(0,S.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:I}}))(y,b,k)}});const wr=(0,i.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:i,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c=.2}){if(!1===(0,gr.uy)(o.BV.state.gradientDepth,u)){let o=N(e,t,n,r);return null!=i&&(o=h(o,i)),(0,gr.QH)(o,u,l,c)}let f=(0,a._1)(e,"a","fused matMul"),g=(0,a._1)(t,"b","fused matMul");[f,g]=(0,d.T_)(f,g);const m=n?f.shape[f.rank-2]:f.shape[f.rank-1],x=r?g.shape[g.rank-1]:g.shape[g.rank-2],b=n?f.shape[f.rank-1]:f.shape[f.rank-2],y=r?g.shape[g.rank-2]:g.shape[g.rank-1],w=f.shape.slice(0,-2),v=g.shape.slice(0,-2),k=p.NA(w),C=p.NA(v);p.hu(m===x,(()=>`Error in fused matMul: inner shapes (${m}) and (${x}) of Tensors with shapes ${f.shape} and ${g.shape} and transposeA=${n} and transposeB=${r} must match.`));const I=be.assertAndGetBroadcastShape(f.shape.slice(0,-2),g.shape.slice(0,-2)).concat([b,y]),$=n?(0,S.X)(f,[k,m,b]):(0,S.X)(f,[k,b,m]),E=r?(0,S.X)(g,[C,y,x]):(0,S.X)(g,[C,x,y]);let T,R;null!=i&&(T=(0,a._1)(i,"bias","fused matMul"),[T]=(0,d.T_)(T,f),be.assertAndGetBroadcastShape(I,T.shape)),null!=l&&(R=(0,a._1)(l,"prelu weights","fused matMul"));const _=(e,t)=>{const[o,s,a,l]=t,c=(0,gr.Fr)((0,S.X)(e,a.shape),a,u);let d,h;if(n||r?!n&&r?(d=N(c,s,!1,!1),h=N(c,o,!0,!1)):n&&!r?(d=N(s,c,!1,!0),h=N(o,c,!1,!1)):(d=N(s,c,!0,!0),h=N(c,o,!0,!0)):(d=N(c,s,!1,!0),h=N(o,c,!0,!1)),null!=i){return[d,h,(0,gr.pf)(l,c)]}return[d,h]},A={a:$,b:E,bias:T,preluActivationWeights:R},D={transposeA:n,transposeB:r,activation:u,leakyreluAlpha:c};if(null==i){return st(((e,t,n)=>{const r=o.BV.runKernel(s.usg,A,D);return n([e,t,r]),{value:(0,S.X)(r,I),gradFunc:_}}))($,E)}return st(((e,t,n,r)=>{const a=o.BV.runKernel(s.usg,A,D);return r([e,t,a,n]),{value:(0,S.X)(a,I),gradFunc:_}}))($,E,T)}});const vr=(0,i.op)({hammingWindow_:function(e){return hr(e,.54,.46)}});const kr=(0,i.op)({hannWindow_:function(e){return hr(e,.5,.5)}});const Cr=(0,i.op)({frame_:function(e,t,n,r=!1,o=0){let s=0;const a=[];for(;s+t<=e.size;)a.push(O(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,i=_([O(e,s,t-r),j([r],o)]);a.push(i),s+=n}return 0===a.length?Vn([],[0,t]):(0,S.X)(_(a),[a.length,t])}});const Ir=(0,i.op)({stft_:function(e,t,n,r,o=kr){null==r&&(r=dr(t));const s=Cr(e,t,n),a=(0,A.d)(s,o(t));return An(a,r)}});const $r=(0,i.op)({cropAndResize_:function(e,t,n,r,i="bilinear",u=0){const l=(0,a._1)(e,"image","cropAndResize"),c=(0,a._1)(t,"boxes","cropAndResize","float32"),d=(0,a._1)(n,"boxInd","cropAndResize","int32"),h=c.shape[0];p.hu(4===l.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${l.rank}.`)),p.hu(2===c.rank&&4===c.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${c.shape}.`)),p.hu(1===d.rank&&d.shape[0]===h,(()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${c.shape}.`)),p.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),p.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),p.hu("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const f={image:l,boxes:c,boxInd:d},g={method:i,extrapolationValue:u,cropSize:r};return o.BV.runKernel(s.VcC,f,g)}});const Sr=(0,i.op)({flipLeftRight_:function(e){const t=(0,a._1)(e,"image","flipLeftRight","float32");p.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return o.BV.runKernel(s.Uyb,n,{})}});const Er=(0,i.op)({grayscaleToRGB_:function(e){const t=(0,a._1)(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];p.hu(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),p.hu(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const o=new Array(t.rank);return o.fill(1,0,n),o[n]=3,Ue(t,o)}});const Tr=(0,i.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const i=(0,a._1)(e,"image","rotateWithOffset","float32");p.hu(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const u={image:i},l={radians:t,fillValue:n,center:r};return o.BV.runKernel(s.b9H,u,l)}});function Rr(e,t,n,r,o,s){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY),null==s&&(s=0);const a=e.shape[0];return n=Math.min(n,a),p.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),p.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),p.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),p.hu(1===t.rank,(()=>"scores must be a 1D tensor")),p.hu(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),p.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o,softNmsSigma:s}}const _r=(0,i.op)({nonMaxSuppression_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY){const u=(0,a._1)(e,"boxes","nonMaxSuppression","float32"),l=(0,a._1)(t,"scores","nonMaxSuppression","float32"),c=Rr(u,l,n,r,i),d={maxOutputSize:n=c.maxOutputSize,iouThreshold:r=c.iouThreshold,scoreThreshold:i=c.scoreThreshold};return o.BV.runKernel(s.uv1,{boxes:u,scores:l},d)}});var Nr=n(3337);const Ar=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY){const s=(0,a._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,a._1)(t,"scores","nonMaxSuppressionAsync"),u=Rr(s,i,n,r,o);n=u.maxOutputSize,r=u.iouThreshold,o=u.scoreThreshold;const l=await Promise.all([s.data(),i.data()]),c=l[0],d=l[1],{selectedIndices:h}=(0,Nr.GP)(c,d,n,r,o);return s!==e&&s.dispose(),i!==t&&i.dispose(),Un(h,"int32")};const Dr=(0,i.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,u=0){const l=(0,a._1)(e,"boxes","nonMaxSuppression"),c=(0,a._1)(t,"scores","nonMaxSuppression"),d=Rr(l,c,n,r,i,u),h={boxes:l,scores:c},p={maxOutputSize:n=d.maxOutputSize,iouThreshold:r=d.iouThreshold,scoreThreshold:i=d.scoreThreshold,softNmsSigma:u=d.softNmsSigma},f=o.BV.runKernel(s.W0H,h,p);return{selectedIndices:f[0],selectedScores:f[1]}}});const Or=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=0){const i=(0,a._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,a._1)(t,"scores","nonMaxSuppressionAsync"),l=Rr(i,u,n,r,o,s);n=l.maxOutputSize,r=l.iouThreshold,o=l.scoreThreshold,s=l.softNmsSigma;const c=await Promise.all([i.data(),u.data()]),d=c[0],h=c[1],{selectedIndices:p,selectedScores:f}=(0,Nr.pA)(d,h,n,r,o,s);return i!==e&&i.dispose(),u!==t&&u.dispose(),{selectedIndices:Un(p,"int32"),selectedScores:Un(f)}};const Fr=(0,i.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,i=Number.NEGATIVE_INFINITY,u=!1){const l=(0,a._1)(e,"boxes","nonMaxSuppression"),c=(0,a._1)(t,"scores","nonMaxSuppression"),d=Rr(l,c,n,r,i,null),h={boxes:l,scores:c},p={maxOutputSize:d.maxOutputSize,iouThreshold:d.iouThreshold,scoreThreshold:d.scoreThreshold,padToMaxOutputSize:u},f=o.BV.runKernel(s.cye,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}});const Br=async function(e,t,n,r=.5,o=Number.NEGATIVE_INFINITY,s=!1){const i=(0,a._1)(e,"boxes","nonMaxSuppressionAsync"),u=(0,a._1)(t,"scores","nonMaxSuppressionAsync"),l=Rr(i,u,n,r,o,null),c=l.maxOutputSize,d=l.iouThreshold,h=l.scoreThreshold,[p,f]=await Promise.all([i.data(),u.data()]),{selectedIndices:g,validOutputs:m}=(0,Nr.qP)(p,f,c,d,h,s);return i!==e&&i.dispose(),u!==t&&u.dispose(),{selectedIndices:Un(g,"int32"),validOutputs:(0,Ne.i)(m,"int32")}};const Pr=(0,i.op)({resizeBilinear_:function(e,t,n=!1,r=!1){const i=(0,a._1)(e,"images","resizeBilinear");p.hu(3===i.rank||4===i.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${i.rank}.`)),p.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),p.hu(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let u=i,l=!1;3===i.rank&&(l=!0,u=(0,S.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,c={images:u},d={alignCorners:n,halfPixelCenters:r,size:t},h=o.BV.runKernel(s._Yw,c,d);return l?(0,S.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Lr=(0,i.op)({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const i=(0,a._1)(e,"images","resizeNearestNeighbor");p.hu(3===i.rank||4===i.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${i.rank}.`)),p.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),p.hu("float32"===i.dtype||"int32"===i.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),p.hu(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let u=i,l=!1;3===i.rank&&(l=!0,u=(0,S.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const[]=t,c={images:u},d={alignCorners:n,halfPixelCenters:r,size:t},h=o.BV.runKernel(s.dpD,c,d);return l?(0,S.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});const Wr=(0,i.op)({threshold_:function(e,t="binary",n=!1,r=.5){const o=(0,a._1)(e,"image","threshold"),s=o.shape[0]*o.shape[1];let i,u,l,c,d=(0,A.d)(Un([r]),255);if(p.hu(3===o.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`)),p.hu(3===o.shape[2]||1===o.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`)),p.hu("int32"===o.dtype||"float32"===o.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`)),p.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===o.shape[2]){[i,u,l]=Nn(o,[1,1,1],-1);const e=(0,A.d)(i,.2989),t=(0,A.d)(u,.587),n=(0,A.d)(l,.114);c=h(h(e,t),n)}else c=e;if("otsu"===t){d=function(e,t){let n,r,o,s,a,i,u=Un([-1]),l=Un([0]),c=Un([0]);for(let d=0;d<e.size-1;d++){n=O(e,0,d+1),r=O(e,d+1),a=xe((0,Oe.S)(n),t),i=xe((0,Oe.S)(r),t);const p=(0,Oe.S)((0,A.d)(n,on(0,n.size)));o=xe(p,(0,Oe.S)(n));const f=j(r.shape,n.size),g=h(on(0,r.size),f),m=(0,A.d)(r,g);s=xe((0,Oe.S)(m),(0,Oe.S)(r));const x=lt(o,s),b=lt(o,s),y=(0,A.d)(a,i);c=(0,A.d)((0,A.d)(y,x),b);const w=He(c,l);l=we(w,c,l),u=we(w,Un([d]),u)}return u}(V((0,I.p)(gn(c),"int32"),(0,Wn.X)([]),256),s)}const f=n?Je(c,d):He(c,d);return(0,I.p)((0,A.d)(f,255),"int32")}});const Mr=(0,i.op)({transform_:function(e,t,n="nearest",r="constant",i=0,u){const l=(0,a._1)(e,"image","transform","float32"),c=(0,a._1)(t,"transforms","transform","float32");p.hu(4===l.rank,(()=>`Error in transform: image must be rank 4,but got rank ${l.rank}.`)),p.hu(2===c.rank&&(c.shape[0]===l.shape[0]||1===c.shape[0])&&8===c.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),p.hu(null==u||2===u.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${u}.`));const d={image:l,transforms:c},h={interpolation:n,fillMode:r,fillValue:i,outputShape:u};return o.BV.runKernel(s.wx7,d,h)}});const Ur=(0,i.op)({bandPart_:function(e,t,n){(0,p.hu)(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,p.hu)(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,a._1)(e,"a","bandPart");(0,p.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const o=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const u=(0,S.X)(on(0,s,1,"int32"),[-1,1]),l=on(0,i,1,"int32"),c=lt(u,l),d=ht(Je(c,(0,Ne.i)(+t,"int32")),Xe(c,(0,Ne.i)(-n,"int32"))),h=It([s,i],r.dtype);return(0,S.X)(Fn(Zn((0,S.X)(r,[-1,s,i])).map((e=>we(d,e,h)))),o)}});const Vr=(0,i.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,p.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,p.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Nn(e,e.shape[0],0).map((e=>On(e,[0])));(0,p.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let s=0;s<e.length;++s)n.push(o.BV.tidy((()=>{let e=r[s];if(s>0)for(let t=0;t<s;++t){const r=(0,A.d)((0,Oe.S)((0,A.d)(n[t],e)),n[t]);e=lt(e,r)}return xe(e,Be(e,"euclidean"))})));return t?Fn(n,0):n}});function Gr(e,t=!1){return o.BV.tidy((()=>{(0,p.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Ve(n),a=(0,R.d)(e);const i=Vn([[1]],[1,1]);let u=(0,R.d)(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=u,c=s;[u,a,s]=o.BV.tidy((()=>{const t=O(a,[e,e],[n-e,1]),o=Be(t),l=O(a,[e,e],[1,1]),c=we(He(l,0),Vn([[-1]]),Vn([[1]])),d=lt(l,(0,A.d)(c,o)),h=xe(t,d);u=1===h.shape[0]?(0,R.d)(i):_([i,O(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=at(xe(N(c,d),o)),f=O(a,[e,0],[n-e,r]),g=(0,A.d)(p,u),m=or(u);if(0===e)a=lt(f,N(g,N(m,f)));else{const t=lt(f,N(g,N(m,f)));a=_([O(a,[0,0],[e,r]),t],0)}const x=or(g),b=O(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=lt(b,N(N(b,u),x));else{const t=lt(b,N(N(b,u),x));s=_([O(s,[0,0],[n,e]),t],1)}return[u,a,s]})),(0,rr.B9)([t,l,c])}return!t&&n>r&&(s=O(s,[0,0],[n,r]),a=O(a,[0,0],[r,r])),[s,a]}))}const zr=(0,i.op)({qr_:function(e,t=!1){if((0,p.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Gr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Zn((0,S.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),o=[],s=[];r.forEach((e=>{const[n,r]=Gr(e,t);o.push(n),s.push(r)}));return[(0,S.X)(Fn(o,0),e.shape),(0,S.X)(Fn(s,0),e.shape)]}}});var Hr;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Hr||(Hr={}));const Xr=(0,i.op)({computeWeightedLoss_:function(e,t,n=Hr.SUM_BY_NONZERO_WEIGHTS){const r=(0,a._1)(e,"losses","computeWeightedLoss");let o=null;null!=t&&(o=(0,a._1)(t,"weights","computeWeightedLoss"));const s=null==o?r:(0,A.d)(r,o);if(n===Hr.NONE)return s;if(n===Hr.SUM)return(0,Oe.S)(s);if(n===Hr.MEAN){if(null==o)return Ct(s);{const e=r.size/o.size,t=xe((0,Oe.S)(s),(0,Oe.S)(o));return e>1?xe(t,(0,Ne.i)(e)):t}}if(n===Hr.SUM_BY_NONZERO_WEIGHTS){if(null==o)return xe((0,Oe.S)(s),(0,Ne.i)(r.size));{const e=(0,A.d)(o,$t(r.shape)),t=(0,I.p)((0,Oe.S)(Dt(e,(0,Ne.i)(0))),"float32");return xe((0,Oe.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const jr=(0,i.op)({absoluteDifference_:function(e,t,n,r=Hr.SUM_BY_NONZERO_WEIGHTS){const o=(0,a._1)(e,"labels","absoluteDifference"),s=(0,a._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,a._1)(n,"weights","absoluteDifference")),(0,p.k5)(o.shape,s.shape,"Error in absoluteDifference: ");const l=u(lt(o,s));return Xr(l,i,r)}});const Kr=(0,i.op)({cosineDistance_:function(e,t,n,r,o=Hr.SUM_BY_NONZERO_WEIGHTS){const s=(0,a._1)(e,"labels","cosineDistance"),i=(0,a._1)(t,"predictions","cosineDistance");let u=null;null!=r&&(u=(0,a._1)(r,"weights","cosineDistance")),(0,p.k5)(s.shape,i.shape,"Error in cosineDistance: ");const l=(0,Ne.i)(1),c=lt(l,(0,Oe.S)((0,A.d)(s,i),n,!0));return Xr(c,u,o)}});const qr=(0,i.op)({hingeLoss_:function(e,t,n,r=Hr.SUM_BY_NONZERO_WEIGHTS){let o=(0,a._1)(e,"labels","hingeLoss");const s=(0,a._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,a._1)(n,"weights","hingeLoss")),(0,p.k5)(o.shape,s.shape,"Error in hingeLoss: ");const u=(0,Ne.i)(1);o=lt((0,A.d)((0,Ne.i)(2),o),u);const l=(0,un.U)(lt(u,(0,A.d)(o,s)));return Xr(l,i,r)}});const Yr=(0,i.op)({huberLoss_:function(e,t,n,r=1,o=Hr.SUM_BY_NONZERO_WEIGHTS){const s=(0,a._1)(e,"labels","huberLoss"),i=(0,a._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,a._1)(n,"weights","huberLoss")),(0,p.k5)(s.shape,i.shape,"Error in huberLoss: ");const c=(0,Ne.i)(r),d=u(lt(i,s)),f=Et(d,c),g=lt(d,f),m=h((0,A.d)((0,Ne.i)(.5),De(f)),(0,A.d)(c,g));return Xr(m,l,o)}});const Zr=(0,i.op)({logLoss_:function(e,t,n,r=1e-7,o=Hr.SUM_BY_NONZERO_WEIGHTS){const s=(0,a._1)(e,"labels","logLoss"),i=(0,a._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,a._1)(n,"weights","logLoss")),(0,p.k5)(s.shape,i.shape,"Error in logLoss: ");const l=(0,Ne.i)(1),c=(0,Ne.i)(r),d=at((0,A.d)(s,nt(h(i,c)))),f=(0,A.d)(lt(l,s),nt(h(lt(l,i),c))),g=lt(d,f);return Xr(g,u,o)}});const Qr=(0,i.op)({meanSquaredError_:function(e,t,n,r=Hr.SUM_BY_NONZERO_WEIGHTS){const o=(0,a._1)(e,"labels","meanSquaredError"),s=(0,a._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,a._1)(n,"weights","meanSquaredError")),(0,p.k5)(o.shape,s.shape,"Error in meanSquaredError: ");const u=Dn(o,s);return Xr(u,i,r)}});const Jr=(0,i.op)({sigmoidCrossEntropy_:function(e,t,n,r=0,o=Hr.SUM_BY_NONZERO_WEIGHTS){let s=(0,a._1)(e,"multiClassLabels","sigmoidCrossEntropy");const i=(0,a._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,a._1)(n,"weights","sigmoidCrossEntropy")),(0,p.k5)(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=(0,Ne.i)(r),t=(0,Ne.i)(1),n=(0,Ne.i)(.5);s=h((0,A.d)(s,lt(t,e)),(0,A.d)(n,e))}const c=function(e,t){const n=(0,a._1)(e,"labels","sigmoidCrossEntropyWithLogits"),r=(0,a._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,p.k5)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,un.U)(r),s=(0,A.d)(r,n),i=rt(Le(at(u(r))));return h(lt(o,s),i)}(s,i);return Xr(c,l,o)}});const eo=(0,i.op)({softmaxCrossEntropy_:function(e,t,n,r=0,o=Hr.SUM_BY_NONZERO_WEIGHTS){let s=(0,a._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,a._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,a._1)(n,"weights","softmaxCrossEntropy")),(0,p.k5)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Ne.i)(r),t=(0,Ne.i)(1),n=(0,Ne.i)(s.shape[1]);s=h((0,A.d)(s,lt(t,e)),xe(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return st(((e,t,r)=>{const o=dt(t,[n],!0),s=lt((0,I.p)(t,"float32"),o);r([e,s]);const a=at((0,A.d)(s,e));return{value:(0,Oe.S)(a,[n]),gradFunc:(e,t)=>{const[r,o]=t,s=(0,Ee.rv)(e.shape,[n]);return[(0,A.d)((0,S.X)(e,s),lt((0,I.p)(r,"float32"),Le(o))),(0,A.d)((0,S.X)(e,s),lt(Le(o),(0,I.p)(r,"float32")))]}}}))(e,t)}(s,i);return Xr(l,u,o)}});const to=(0,i.op)({sparseFillEmptyRows_:function(e,t,n,r){const i=(0,a._1)(e,"indices","sparseFillEmptyRows","int32"),u=(0,a._1)(t,"values","sparseFillEmptyRows"),l=(0,a._1)(n,"denseShape","sparseFillEmptyRows","int32"),c=(0,a._1)(r,"defaultValue","sparseFillEmptyRows",u.dtype);if(2!==i.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${i.shape}`);if(1!==u.rank)throw new Error(`Values should be Tensor1D but received shape ${u.shape}`);if(1!==l.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${l.shape}`);if(0!==c.rank)throw new Error(`Default value should be a scalar but received shape ${c.shape}`);const d={indices:i,values:u,denseShape:l,defaultValue:c},h=o.BV.runKernel(s.O3z,d);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}});const no=(0,i.op)({sparseReshape_:function(e,t,n){const r=(0,a._1)(e,"inputIndices","sparseReshape","int32"),i=(0,a._1)(t,"inputShape","sparseReshape","int32"),u=(0,a._1)(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==i.rank)throw new Error(`Input shape should be Tensor1D but received shape ${i.shape}`);if(1!==u.rank)throw new Error(`New shape should be Tensor1D but received shape ${u.shape}`);const l={inputIndices:r,inputShape:i,newShape:u},c=o.BV.runKernel(s.nhH,l);return{outputIndices:c[0],outputShape:c[1]}}});const ro=(0,i.op)({sparseSegmentMean_:function(e,t,n){const r=(0,a._1)(e,"data","sparseSegmentMean"),i=(0,a._1)(t,"indices","sparseSegmentMean","int32"),u=(0,a._1)(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${i.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${u.shape}`);const l={data:r,indices:i,segmentIds:u};return o.BV.runKernel(s.w3H,l)}});const oo=(0,i.op)({sparseSegmentSum_:function(e,t,n){const r=(0,a._1)(e,"data","sparseSegmentSum"),i=(0,a._1)(t,"indices","sparseSegmentSum","int32"),u=(0,a._1)(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==i.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${i.shape}`);if(1!==u.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${u.shape}`);const l={data:r,indices:i,segmentIds:u};return o.BV.runKernel(s.ZjV,l)}});const so=(0,i.op)({stringNGrams_:function(e,t,n,r,i,u,l,c){const d=(0,a._1)(e,"data","stringNGrams","string");if("string"!==d.dtype)throw new Error("Data must be of datatype string");if(1!==d.shape.length)throw new Error(`Data must be a vector, saw: ${d.shape}`);const h=(0,a._1)(t,"dataSplits","stringNGrams");if("int32"!==h.dtype)throw new Error("Data splits must be of datatype int32");const p={separator:n,nGramWidths:r,leftPad:i,rightPad:u,padWidth:l,preserveShortSequences:c},f={data:d,dataSplits:h},g=o.BV.runKernel(s._JP,f,p);return{nGrams:g[0],nGramsSplits:g[1]}}});const ao=(0,i.op)({stringSplit_:function(e,t,n=!0){const r=(0,a._1)(e,"input","stringSplit","string"),i=(0,a._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==i.rank)throw new Error(`Delimiter should be a scalar but received shape ${i.shape}`);const u={skipEmpty:n},l={input:r,delimiter:i},c=o.BV.runKernel(s.s1s,l,u);return{indices:c[0],values:c[1],shape:c[2]}}});const io=(0,i.op)({stringToHashBucketFast_:function(e,t){const n=(0,a._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const i={input:n};return o.BV.runKernel(s.XkS,i,r)}}),uo={fft:Tn,ifft:Rn,rfft:An,irfft:_n},lo={hammingWindow:vr,hannWindow:kr,frame:Cr,stft:Ir},co={flipLeftRight:Sr,grayscaleToRGB:Er,resizeNearestNeighbor:Lr,resizeBilinear:Pr,rotateWithOffset:Tr,cropAndResize:$r,nonMaxSuppression:_r,nonMaxSuppressionAsync:Ar,nonMaxSuppressionWithScore:Dr,nonMaxSuppressionWithScoreAsync:Or,nonMaxSuppressionPadded:Fr,nonMaxSuppressionPaddedAsync:Br,threshold:Wr,transform:Mr},ho={bandPart:Ur,gramSchmidt:Vr,qr:zr},po={absoluteDifference:jr,computeWeightedLoss:Xr,cosineDistance:Kr,hingeLoss:qr,huberLoss:Yr,logLoss:Zr,meanSquaredError:Qr,sigmoidCrossEntropy:Jr,softmaxCrossEntropy:eo},fo={sparseFillEmptyRows:to,sparseReshape:no,sparseSegmentMean:ro,sparseSegmentSum:oo},go={stringNGrams:so,stringSplit:ao,stringToHashBucketFast:io}},8151:function(e,t,n){"use strict";n.d(t,{A:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(o.o0g,n)}})},9798:function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:function(){return r}})},7409:function(e,t,n){"use strict";n.d(t,{U:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(o.qkr,t)}})},3582:function(e,t,n){"use strict";n.d(t,{b:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(o.SbG,t)}})},4968:function(e,t,n){"use strict";n.d(t,{X:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},a={shape:t};return r.BV.runKernel(o.HZH,n,a)}})},9494:function(e,t,n){"use strict";n.d(t,{i:function(){return s}});var r=n(569),o=n(7852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,o.H)(e,[],[],t)}},3028:function(e,t,n){"use strict";n.d(t,{l5:function(){return o},b0:function(){return s},SU:function(){return a}});var r=n(569);function o(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,o=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${o}.`;if(n.rank<o)throw new Error(s+` update.rank < ${o}. `);if(e.length<r+(n.rank-o))throw new Error(s+` Output shape length < ${r+(n.rank-o)}`);if(n.rank!==o+e.length-r)throw new Error(s+" update.rank != "+(o+e.length-r));for(let a=0;a<o;++a)if(n.shape[a]!==t.shape[a])throw new Error(s+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-o;++a)if(n.shape[a+o]!==e[a+r])throw new Error(s+` updates.shape[${a+o}] (${n.shape[a+o]}) != shape[${a+o}] (${e[a+o]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}o(n,t,e)}function a(e,t,n){const o=t.shape.length,s=o>1?t.shape[o-1]:1,a=n.length;let i=1;for(let r=s;r<a;++r)i*=n[r];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:i,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},625:function(e,t,n){"use strict";n.d(t,{X:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid","float32")};return r.BV.runKernel(o.a5O,t)}})},1901:function(e,t,n){"use strict";n.d(t,{N:function(){return a}});var r=n(7097),o=n(9121),s=n(3740);const a=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},a={alpha:t};return r.BV.runKernel(o.h8e,n,a)}})},5475:function(e,t,n){"use strict";n.d(t,{S:function(){return i}});var r=n(7097),o=n(9121),s=n(3740),a=n(2271);const i=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let i=(0,s._1)(e,"x","sum");"bool"===i.dtype&&(i=(0,a.p)(i,"int32"));const u={x:i},l={axis:t,keepDims:n};return r.BV.runKernel(o.GBy,u,l)}})},701:function(e,t,n){"use strict";n.d(t,{X:function(){return s}});var r=n(3740),o=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,o.H)(e,t,s,n)}},9906:function(e,t,n){"use strict";n.d(t,{w:function(){return a}});var r=n(3740),o=n(569),s=n(7852);function a(e,t,n){if((0,o.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const a=(0,r.C)(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,a,n)}},7852:function(e,t,n){"use strict";n.d(t,{H:function(){return a}});var r=n(7097),o=n(569),s=n(9122);function a(e,t,n,a){if(null==a&&(a=(0,o.D2)(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,o.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,o.Mu)(t);const e=(0,o.NA)(t),r=(0,o.NA)(n);(0,o.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let s=0;s<n.length;++s){const e=n[s],r=s!==n.length-1||e!==(0,o.NA)(t.slice(s));(0,o.hu)(n[s]===t[s]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,o.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==a?(0,s.toTypedArray)(e,a):(0,o.xH)(e,[],!0),r.BV.makeTensor(e,t,a)}},4077:function(e,t,n){"use strict";n.d(t,{es:function(){return b},YD:function(){return d},_w:function(){return y},FZ:function(){return x},Vp:function(){return m},Vi:function(){return g}});var r=n(5938),o=n(569);function s(e,t,n,r){const s=(0,o.e3)(t),i=function(e,t,n,r){const s=(0,o.NA)(t),i=r[r.length-1],u=new Array(i).fill(0),c=t.length,d="complex64"===n?l(e):e;if(c>1)for(let o=0;o<s/i;o++){const e=o*i;for(let t=0;t<i;t++)u[t]=Math.max(u[t],a(d[e+t],0,n).length)}return u}(e,t,n,s),c=t.length,d=u(e,t,n,s,i),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function a(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,o.HD)(e)?`'${e}'`:"bool"===n?i(e):parseFloat(e.toFixed(7)).toString(),(0,o.oj)(r,t)}function i(e){return 0===e?"false":"true"}function u(e,t,n,r,o,s=!0){const c="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[a(l(e)[0],0,n)]}return"bool"===n?[i(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>a(e,o[t],n))).join(", ")+", ..., "+s.map(((e,t)=>a(e,o[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>a(e,o[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),g=r[0]*c,m=[];if(d>20){for(let t=0;t<3;t++){const r=t*g,s=r+g;m.push(...u(e.slice(r,s),p,n,f,o,!1))}m.push("...");for(let t=d-3;t<d;t++){const r=t*g,s=r+g;m.push(...u(e.slice(r,s),p,n,f,o,t===d-1))}}else for(let a=0;a<d;a++){const t=a*g,r=t+g;m.push(...u(e.slice(t,r),p,n,f,o,a===d-1))}const x=2===h?",":"";m[0]="["+m[0]+x;for(let a=1;a<m.length-1;a++)m[a]=" "+m[a]+x;let b=",\n";for(let a=2;a<h;a++)b+="\n";return m[m.length-1]=" "+m[m.length-1]+"]"+(s?"":b),m}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=o.NA(e),null!=n){const e=n.length;o.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||o.rQ(t,this.size),this.strides=(0,o.e3)(e)}set(e,...t){0===t.length&&(t=[0]),o.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function g(e){h=e}function m(e){p=e}function x(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=o.NA(e),this.strides=(0,o.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,o.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,o.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),h().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),(0,r.R)("Tensor",(()=>b));class y extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!o.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(y,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:function(e,t,n){"use strict";n.d(t,{T_:function(){return a},xg:function(){return i},Vu:function(){return u}});var r=n(4077),o=n(1221),s=n(569);function a(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,o.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function i(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(o=e,!Array.isArray(o)&&"object"!==typeof o)return;var o;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),l(e,t,n))}}},3740:function(e,t,n){"use strict";n.d(t,{C:function(){return u},_1:function(){return d},sI:function(){return h}});var r=n(7097),o=n(2885),s=n(4077),a=n(569),i=n(9122);function u(e,t){let n=e;if((0,a.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,a.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,o.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,a.fU)(e))return void(0,a.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,a.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,a.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let o=0;o<e.length;++o)l(e[o],r,n.concat(o))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,o="numeric"){if(e instanceof s.es)return c(o,e.dtype,t,n),e;let l=(0,a.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(o)>=0&&(l=o),c(o,l,t,n),null==e||!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,l);(0,a.fU)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?(0,i.toTypedArray)(e,l):(0,a.xH)(e,[],!0);return r.BV.makeTensor(h,d,l)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,o)=>d(e,`${t}[${o}]`,n,r)))}},1221:function(e,t,n){"use strict";var r,o,s,a,i;n.d(t,{x8:function(){return l},z4:function(){return c}}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(o||(o={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(i||(i={}));const u={float32:a,int32:o,bool:s,complex64:i};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:function(e,t,n){"use strict";n.r(t),n.d(t,{arraysEqual:function(){return o.cO},assert:function(){return o.hu},assertNonNegativeIntegerDimensions:function(){return o.Mu},assertNonNull:function(){return o.Cq},assertShapesMatch:function(){return o.k5},bytesFromStringArray:function(){return o.Ub},bytesPerElement:function(){return o.bT},checkConversionForErrors:function(){return o.D5},clamp:function(){return o.uZ},computeStrides:function(){return o.e3},createScalarValue:function(){return y},createShuffledIndices:function(){return o.U$},decodeString:function(){return I},distSquared:function(){return o.E7},encodeString:function(){return C},fetch:function(){return k},fingerPrint64:function(){return b},flatten:function(){return o.xH},getArrayFromDType:function(){return o.rQ},getTypedArrayFromDType:function(){return o.WP},hasEncodingLoss:function(){return o.QB},hexToLong:function(){return i},indexToLoc:function(){return o.NE},inferDtype:function(){return o.D2},inferFromImplicitShape:function(){return o.JZ},isBoolean:function(){return o.jn},isFunction:function(){return o.mf},isInt:function(){return o.GN},isNumber:function(){return o.hj},isPromise:function(){return o.tI},isScalarShape:function(){return o.N9},isString:function(){return o.HD},isTypedArray:function(){return o.fU},isValidDtype:function(){return o.LP},locToIndex:function(){return o.qy},makeOnesTypedArray:function(){return o.p8},makeZerosNestedTypedArray:function(){return o.l6},makeZerosTypedArray:function(){return o.wT},nearestDivisor:function(){return o.jP},nearestLargerEven:function(){return o.nY},now:function(){return v},parseAxisParam:function(){return o.EC},randUniform:function(){return o.bj},repeatedTry:function(){return o.WD},rightPad:function(){return o.oj},shuffle:function(){return o.TV},shuffleCombo:function(){return o.d7},sizeFromShape:function(){return o.NA},sizeToSquarishShape:function(){return o.YP},squeezeShape:function(){return o.bp},sum:function(){return o.Sm},swap:function(){return o.LF},tanh:function(){return o.AE},toNestedArray:function(){return o.GX},toTypedArray:function(){return w}});var r=n(2885),o=n(569),s=n(3720);const a=n.n(s)()||s;function i(e){return a.fromString(e,!0,16)}const u=i("c3a5c85c97cb3127"),l=i("b492b66fbe98f273"),c=i("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return a.fromBytes(Array.from(r),!0,!0)}function p(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function g(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function m(e,t,n=i("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let o=t.xor(r).mul(n);return o=o.xor(o.shru(47)),o=o.mul(n),o}function x(e,t,n,r){return function(e,t,n,r,o,s){o=o.add(e),s=g(s.add(o).add(r),21);const a=o;return o=(o=o.add(t)).add(n),s=s.add(g(o,44)),[o.add(r),s.add(a)]}(p(e,t),p(e,t+8),p(e,t+16),p(e,t+24),n,r)}function b(e,t=e.length){const n=a.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=p(e,0).add(c),o=p(e,t-8);return m(g(o,37).mul(n).add(r),g(r,25).add(o).mul(n),n)}if(t>=4){const n=c.add(2*t);return m(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=p(e,0).mul(l),o=p(e,8),s=p(e,t-8).mul(n),a=p(e,t-16).mul(c);return m(g(r.add(o),43).add(g(s,30)).add(a),r.add(g(o.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=p(e,0).mul(c),o=p(e,8),s=p(e,t-8).mul(n),a=p(e,t-16).mul(c),i=g(r.add(o),43).add(g(s,30)).add(a),u=m(i,r.add(g(o.add(c),18)).add(s),n),l=p(e,16).mul(n),d=p(e,24),h=i.add(p(e,t-32)).mul(n),f=u.add(p(e,t-24)).mul(n);return m(g(l.add(d),43).add(g(h,30)).add(f),l.add(g(d.add(r),18)).add(h),n)}(e,t);let r=n,o=n.mul(l).add(113),s=d(o.mul(c).add(113)).mul(c),i=[a.UZERO,a.UZERO],h=[a.UZERO,a.UZERO];r=r.mul(c).add(p(e,0));let b=0;const y=64*(t-1>>6),w=y+(t-1&63)-63;do{r=g(r.add(o).add(i[0]).add(p(e,b+8)),37).mul(l),o=g(o.add(i[1]).add(p(e,b+48)),42).mul(l),r=r.xor(h[1]),o=o.add(i[0]).add(p(e,b+40)),s=g(s.add(h[0]),33).mul(l),i=x(e,b,i[1].mul(l),r.add(h[0])),h=x(e,b+32,s.add(h[1]),o.add(p(e,b+16))),[s,r]=[r,s],b+=64}while(b!==y);const v=l.add(s.and(255).shl(1));return b=w,h[0]=h[0].add(t-1&63),i[0]=i[0].add(h[0]),h[0]=h[0].add(i[0]),r=g(r.add(o).add(i[0]).add(p(e,b+8)),37).mul(v),o=g(o.add(i[1]).add(p(e,b+48)),42).mul(v),r=r.xor(h[1].mul(9)),o=o.add(i[0].mul(9).add(p(e,b+40))),s=g(s.add(h[0]),33).mul(v),i=x(e,b,i[1].mul(v),r.add(h[0])),h=x(e,b+32,s.add(h[1]),o.add(p(e,b+16))),[s,r]=[r,s],m(m(i[0],h[0],v).add(d(o).mul(u)).add(s),m(i[1],h[1],v).add(r),v)}function y(e,t){return"string"===t?C(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=o.xH(e)),(0,r.OB)().getBool("DEBUG")&&o.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function C(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:function(e,t,n){"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,i(e,t,n)}function o(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,i(e,n,r),i(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function a(e){return e%2===0?e:e+1}function i(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const o=Number(e[r])-Number(t[r]);n+=o*o}return n}function d(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function h(e,t,n=""){d(x(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function g(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function x(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1===0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function C(e,t=(e=>0),n,r=setTimeout){return new Promise(((o,s)=>{let a=0;const i=()=>{if(e())return void o();a++;const u=t(a);null!=n&&a>=n?s():r(i,u)};i()}))}function I(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(-1===e[s]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const o=e.slice();return o[r]=t/n,o}function $(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function S(e,t){const n=[],r=[],o=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||o?null:$(t,e).sort();let a=0;for(let i=0;i<e.length;++i){if(null!=s){if(s[a]===i&&1!==e[i])throw new Error(`Can't squeeze axis ${i} since its dim '${e[i]}' is not 1`);(null==s[a]||s[a]>i)&&1===e[i]&&(n.push(e[i]),r.push(i)),s[a]<=i&&a++}1!==e[i]&&(n.push(e[i]),r.push(i))}return{newShape:n,keptDims:r}}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function T(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function R(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function _(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function N(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function O(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"===typeof e||e instanceof String}function B(e){return"boolean"===typeof e}function P(e){return"number"===typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":P(e)?"float32":F(e)?"string":B(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function V(e,t,n,r=!1){const o=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)o[t]=n[e+t]}else{const s=t[0],a=t.slice(1),i=a.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)o[t]=V(e+t*i,a,n,r)}return o}function G(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return V(0,e,t,n)}function z(e,t){const n=H(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function H(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function X(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return G(e,new Float32Array(n));if("int32"===t)return G(e,new Int32Array(n));if("bool"===t)return G(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function K(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let o=0;o<e.length-1;++o)r+=n[o]*e[o];return r}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let o=0;o<r.length-1;++o)r[o]=Math.floor(e/n[o]),e-=r[o]*n[o];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"===typeof e.then}n.d(t,{TV:function(){return r},d7:function(){return o},uZ:function(){return s},nY:function(){return a},LF:function(){return i},Sm:function(){return u},bj:function(){return l},E7:function(){return c},hu:function(){return d},k5:function(){return h},Cq:function(){return p},xH:function(){return f},NA:function(){return g},N9:function(){return m},cO:function(){return x},GN:function(){return b},AE:function(){return y},YP:function(){return w},U$:function(){return v},oj:function(){return k},WD:function(){return C},JZ:function(){return I},EC:function(){return $},bp:function(){return S},WP:function(){return E},rQ:function(){return T},D5:function(){return R},LP:function(){return _},QB:function(){return N},fU:function(){return A},bT:function(){return D},Ub:function(){return O},HD:function(){return F},jn:function(){return B},hj:function(){return P},D2:function(){return L},mf:function(){return W},jP:function(){return M},e3:function(){return U},GX:function(){return G},p8:function(){return z},wT:function(){return H},l6:function(){return X},Mu:function(){return j},qy:function(){return K},NE:function(){return q},tI:function(){return Y}})},3720:function(e){e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch($){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var o={},s={};function a(e,t){var n,r,a;return t?(a=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),a&&(s[e]=n),n):(a=-128<=(e|=0)&&e<128)&&(r=o[e])?r:(n=u(e,e<0?-1:0,!1),a&&(o[e]=n),n)}function i(e,t){if(isNaN(e))return t?x:m;if(t){if(e<0)return x;if(e>=p)return k}else{if(e<=-f)return C;if(e+1>=f)return v}return e<0?i(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=a,n.fromNumber=i,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return m;if("number"===typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var o=i(l(n,8)),s=m,a=0;a<e.length;a+=8){var u=Math.min(8,e.length-a),d=parseInt(e.substring(a,a+u),n);if(u<8){var h=i(l(n,u));s=s.mul(h).add(i(d))}else s=(s=s.mul(o)).add(i(d))}return s.unsigned=t,s}function d(e,t){return"number"===typeof e?i(e,t):"string"===typeof e?c(e,t):u(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,g=a(1<<24),m=a(0);n.ZERO=m;var x=a(0,!0);n.UZERO=x;var b=a(1);n.ONE=b;var y=a(1,!0);n.UONE=y;var w=a(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var C=u(0,-2147483648,!1);n.MIN_VALUE=C;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(C)){var t=i(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var o=i(l(e,6),this.unsigned),s=this,a="";;){var u=s.div(o),c=(s.sub(u.mul(o)).toInt()>>>0).toString(e);if((s=u).isZero())return c+a;for(;c.length<6;)c="0"+c;a=""+c+a}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(C)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1===(1&this.low)},I.isEven=function(){return 0===(1&this.low)},I.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(C)?C:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,o=this.low>>>16,s=65535&this.low,a=e.high>>>16,i=65535&e.high,l=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=o+l)>>>16,c+=(h+=n+i)>>>16,c+=t+a,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return m;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return m;if(this.eq(C))return e.isOdd()?C:m;if(e.eq(C))return this.isOdd()?C:m;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return i(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,o=65535&this.high,s=this.low>>>16,a=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,x=0,b=0,y=0;return b+=(y+=a*p)>>>16,x+=(b+=s*p)>>>16,b&=65535,x+=(b+=a*h)>>>16,f+=(x+=o*p)>>>16,x&=65535,f+=(x+=s*h)>>>16,x&=65535,f+=(x+=a*c)>>>16,f+=n*p+o*h+s*c+a*l,u((b&=65535)<<16|(y&=65535),(f&=65535)<<16|(x&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,o,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?x:m;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return x;if(e.gt(this.shru(1)))return y;s=x}else{if(this.eq(C))return e.eq(b)||e.eq(w)?C:e.eq(C)?b:(n=this.shr(1).div(e).shl(1)).eq(m)?e.isNegative()?b:w:(o=this.sub(e.mul(n)),s=n.add(o.div(e)));if(e.eq(C))return this.unsigned?x:m;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=m}for(o=this;o.gte(e);){n=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:l(2,a-48),h=i(n),p=h.mul(e);p.isNegative()||p.gt(o);)p=(h=i(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),o=o.sub(p)}return s},I.div=I.divide,I.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:function(e,t,n){var r=n(4832),o=n(8652),s=n(801),a=n(2030),i=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=o,l.xorwow=s,l.xorshift7=a,l.xor4096=i,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new a(e),r=t&&t.state,o=n.next;return o.int32=function(){return 4294967296*n.next()|0},o.double=function(){return o()+11102230246251565e-32*(2097152*o()|0)},o.quick=o,r&&("object"==typeof r&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,o=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^o,o=o-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^o,t.a=o-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new a(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this;t.next=function(){var e,n,r=t.w,o=t.X,s=t.i;return t.w=r=r+1640531527|0,n=o[s+34&127],e=o[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=o[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,o,s,a,i=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),o=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(a=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(a=a+1640531527|0,o=0==(n=i[127&s]^=r+a)?o+1:0);for(o>=128&&(i[127&(t&&t.length||0)]=-1),o=127,s=512;s>0;--s)r=i[o+34&127],n=i[o=o+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,i[o]=r^n;e.w=a,e.X=i,e.i=o}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.X&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this;t.next=function(){var e,n,r=t.x,o=t.i;return e=r[o],n=(e^=e>>>7)^e<<24,n^=(e=r[o+1&7])^e>>>10,n^=(e=r[o+3&7])^e>>>3,n^=(e=r[o+4&7])^e<<7,e=r[o+7&7],n^=(e^=e<<13)^e<<9,r[o]=n,t.i=o+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new a(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&(r.x&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,o,s){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new a(e),r=t&&t.state,o=function(){return(n.next()>>>0)/4294967296};return o.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},o.int32=n.next,o.quick=o,r&&("object"==typeof r&&i(r,n),o.state=function(){return i(n,{})}),o}o&&o.exports?o.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,o))||(o.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:function(e,t,n){var r;!function(o,s,a){var i,u=256,l=a.pow(u,6),c=a.pow(2,52),d=2*c,h=255;function p(e,t,n){var r=[],h=x(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(r){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),p=new f(r),y=function(){for(var e=p.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return y.int32=function(){return 0|p.g(4)},y.quick=function(){return p.g(4)/4294967296},y.double=y,x(b(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(y,h,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,o=0,s=r.i=r.j=0,a=r.S=[];for(n||(e=[n++]);o<u;)a[o]=o++;for(o=0;o<u;o++)a[o]=a[s=h&s+e[o%n]+(t=a[o])],a[s]=t;(r.g=function(e){for(var t,n=0,o=r.i,s=r.j,a=r.S;e--;)t=a[o=h&o+1],n=n*u+a[h&(a[o]=a[s=h&s+t])+(a[s]=t)];return r.i=o,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],o=typeof e;if(t&&"object"==o)for(n in e)try{r.push(m(e[n],t-1))}catch(s){}return r.length?r:"string"==o?e:e+"\0"}function x(e,t){for(var n,r=e+"",o=0;o<r.length;)t[h&o]=h&(n^=19*t[h&o])+r.charCodeAt(o++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(x(a.random(),s),e.exports){e.exports=p;try{i=n(5042)}catch(y){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}("undefined"!==typeof self?self:this,[],Math)}}]);